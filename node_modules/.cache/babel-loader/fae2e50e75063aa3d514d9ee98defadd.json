{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/WalletDeposit/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { selectWallets, walletsAddressFetch, walletsFetch } from '../../../modules/user/wallets';\nimport { Subheader, WalletDepositBody, WalletHeader } from '../../components';\n\nvar WalletDeposit = function WalletDeposit() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      generateAddressTriggered = _React$useState2[0],\n      setGenerateAddressTriggered = _React$useState2[1];\n\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      _useParams$currency = _useParams.currency,\n      currency = _useParams$currency === void 0 ? '' : _useParams$currency;\n\n  var wallets = useSelector(selectWallets) || [];\n  var wallet = wallets.find(function (item) {\n    return item.currency === currency;\n  }) || {\n    name: '',\n    currency: '',\n    balance: '',\n    type: '',\n    address: ''\n  };\n  var isAccountActivated = wallet.type === 'fiat' || wallet.balance;\n\n  var handleGenerateAddress = function handleGenerateAddress() {\n    if (!wallet.address && wallets.length && wallet.type !== 'fiat') {\n      dispatch(walletsAddressFetch({\n        currency\n      }));\n      dispatch(walletsFetch());\n      setGenerateAddressTriggered(true);\n    }\n  };\n\n  React.useEffect(function () {\n    dispatch(walletsAddressFetch({\n      currency\n    }));\n  }, [dispatch, currency]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.wallets.balance'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push(\"/wallets/\".concat(currency, \"/history\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WalletHeader, {\n    currency: wallet.currency,\n    name: wallet.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WalletDepositBody, {\n    wallet: wallet,\n    isAccountActivated: isAccountActivated,\n    handleGenerateAddress: handleGenerateAddress,\n    generateAddressTriggered: generateAddressTriggered,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport { WalletDeposit };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/WalletDeposit/index.tsx"],"names":["React","useIntl","useDispatch","useSelector","useHistory","useParams","selectWallets","walletsAddressFetch","walletsFetch","Subheader","WalletDepositBody","WalletHeader","WalletDeposit","useState","generateAddressTriggered","setGenerateAddressTriggered","dispatch","intl","history","currency","wallets","wallet","find","item","name","balance","type","address","isAccountActivated","handleGenerateAddress","length","useEffect","formatMessage","id","push"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { selectWallets, walletsAddressFetch, walletsFetch } from '../../../modules/user/wallets';\nimport { Subheader, WalletDepositBody, WalletHeader } from '../../components';\n\nconst WalletDeposit: React.FC = () => {\n    const [generateAddressTriggered, setGenerateAddressTriggered] = React.useState(false);\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const { currency = '' } = useParams();\n    const wallets = useSelector(selectWallets) || [];\n\n    const wallet = wallets.find(item => item.currency === currency) || { name: '', currency: '', balance: '', type: '', address: '' };\n    const isAccountActivated = wallet.type === 'fiat' || wallet.balance;\n\n\n    const handleGenerateAddress = () => {\n        if (!wallet.address && wallets.length && wallet.type !== 'fiat') {\n            dispatch(walletsAddressFetch({ currency }));\n            dispatch(walletsFetch());\n            setGenerateAddressTriggered(true);\n        }\n    };\n\n\n    React.useEffect(() => {\n        dispatch(walletsAddressFetch({ currency }));\n    }, [dispatch, currency]);\n\n    return (\n        <React.Fragment>\n            <Subheader\n                title={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit' })}\n                backTitle={intl.formatMessage({ id: 'page.body.wallets.balance' })}\n                onGoBack={() => history.push(`/wallets/${currency}/history`)}\n            />\n            <WalletHeader currency={wallet.currency} name={wallet.name}/>\n            <WalletDepositBody\n                wallet={wallet}\n                isAccountActivated={isAccountActivated}\n                handleGenerateAddress={handleGenerateAddress}\n                generateAddressTriggered={generateAddressTriggered}\n            />\n        </React.Fragment>\n    );\n};\n\nexport {\n    WalletDeposit,\n};\n"]},"metadata":{},"sourceType":"module"}