{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileColorTheme/index.tsx\";\n\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { changeColorTheme, selectCurrentColorTheme } from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\nvar COLOR_THEMES = ['dark', 'light'];\n\nvar ProfileThemeMobileScreenComponent = function ProfileThemeMobileScreenComponent() {\n  var intl = useIntl();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var currentColorTheme = useSelector(selectCurrentColorTheme);\n\n  var handleChangeColorTheme = function handleChangeColorTheme(colorTheme) {\n    if (colorTheme !== currentColorTheme) {\n      dispatch(changeColorTheme(colorTheme));\n    }\n  };\n\n  var renderThemeListItem = function renderThemeListItem(colorTheme, index) {\n    var listItemClassName = classnames('pg-mobile-profile-theme-screen__list__item', {\n      'pg-mobile-profile-theme-screen__list__item--active': colorTheme === currentColorTheme\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: listItemClassName,\n      onClick: function onClick() {\n        return handleChangeColorTheme(colorTheme);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, intl.formatMessage({\n      id: \"page.mobile.profileColorTheme.theme.\".concat(colorTheme)\n    })), /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.theme.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-theme-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-theme-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, COLOR_THEMES.map(renderThemeListItem))));\n};\n\nexport var ProfileThemeMobileScreen = React.memo(ProfileThemeMobileScreenComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileColorTheme/index.tsx"],"names":["classnames","React","useIntl","useDispatch","useSelector","useHistory","changeColorTheme","selectCurrentColorTheme","CheckIcon","Subheader","COLOR_THEMES","ProfileThemeMobileScreenComponent","intl","history","dispatch","currentColorTheme","handleChangeColorTheme","colorTheme","renderThemeListItem","index","listItemClassName","formatMessage","id","push","map","ProfileThemeMobileScreen","memo"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SACIC,gBADJ,EAEIC,uBAFJ,QAGO,kBAHP;AAIA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,IAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,OAAT,CAArB;;AAEA,IAAMC,iCAA2C,GAAG,SAA9CA,iCAA8C,GAAM;AACtD,MAAMC,IAAI,GAAGV,OAAO,EAApB;AACA,MAAMW,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAMS,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,iBAAiB,GAAGX,WAAW,CAACG,uBAAD,CAArC;;AAEA,MAAMS,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,UAAD,EAAwB;AACnD,QAAIA,UAAU,KAAKF,iBAAnB,EAAsC;AAClCD,MAAAA,QAAQ,CAACR,gBAAgB,CAACW,UAAD,CAAjB,CAAR;AACH;AACJ,GAJD;;AAMA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,UAAD,EAAaE,KAAb,EAAuB;AAC/C,QAAMC,iBAAiB,GAAGpB,UAAU,CAAC,4CAAD,EAA+C;AAC/E,4DAAsDiB,UAAU,KAAKF;AADU,KAA/C,CAApC;AAIA,wBACI;AACI,MAAA,GAAG,EAAEI,KADT;AAEI,MAAA,SAAS,EAAEC,iBAFf;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMJ,sBAAsB,CAACC,UAAD,CAA5B;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,IAAI,CAACS,aAAL,CAAmB;AAACC,MAAAA,EAAE,gDAAyCL,UAAzC;AAAH,KAAnB,CAAP,CALJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH,GAfD;;AAiBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEL,IAAI,CAACS,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CADT;AAEE,IAAA,SAAS,EAAEV,IAAI,CAACS,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAFb;AAGE,IAAA,QAAQ,EAAE;AAAA,aAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,CAAN;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAMI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,YAAY,CAACc,GAAb,CAAiBN,mBAAjB,CADL,CADJ,CANJ,CADJ;AAcH,CA3CD;;AA6CA,OAAO,IAAMO,wBAAwB,GAAGxB,KAAK,CAACyB,IAAN,CAAWf,iCAAX,CAAjC","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport {\n    changeColorTheme,\n    selectCurrentColorTheme,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst COLOR_THEMES = ['dark', 'light'];\n\nconst ProfileThemeMobileScreenComponent: React.FC = () => {\n    const intl = useIntl();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const currentColorTheme = useSelector(selectCurrentColorTheme);\n\n    const handleChangeColorTheme = (colorTheme: string) => {\n        if (colorTheme !== currentColorTheme) {\n            dispatch(changeColorTheme(colorTheme));\n        }\n    };\n\n    const renderThemeListItem = (colorTheme, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-theme-screen__list__item', {\n            'pg-mobile-profile-theme-screen__list__item--active': colorTheme === currentColorTheme,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeColorTheme(colorTheme)}\n            >\n                <span>{intl.formatMessage({id: `page.mobile.profileColorTheme.theme.${colorTheme}`})}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.theme.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-theme-screen\">\n                <div className=\"pg-mobile-profile-theme-screen__list\">\n                    {COLOR_THEMES.map(renderThemeListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileThemeMobileScreen = React.memo(ProfileThemeMobileScreenComponent);\n"]},"metadata":{},"sourceType":"module"}