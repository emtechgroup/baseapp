{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileApiKeys/index.tsx\";\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { CopyableTextField, CustomInput, Pagination, Table } from '../../components';\nimport { localeDate } from '../../helpers/localeDate';\nimport { alertPush, apiKeyCreateFetch, apiKeyDeleteFetch, apiKeys2FAModal, apiKeysFetch as _apiKeysFetch, apiKeyUpdateFetch, selectUserInfo } from '../../modules';\nimport { selectApiKeys, selectApiKeysDataLoaded, selectApiKeysFirstElemIndex, selectApiKeysLastElemIndex, selectApiKeysModal, selectApiKeysNextPageExists, selectApiKeysPageIndex } from '../../modules/user/apiKeys/selectors';\n\nvar ProfileApiKeysComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileApiKeysComponent, _React$Component);\n\n  var _super = _createSuper(ProfileApiKeysComponent);\n\n  function ProfileApiKeysComponent() {\n    var _this;\n\n    _classCallCheck(this, ProfileApiKeysComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      otpCode: '',\n      codeFocused: false\n    };\n\n    _this.t = function (key) {\n      return _this.props.intl.formatMessage({\n        id: key\n      });\n    };\n\n    _this.copy = function (id) {\n      var copyText = document.querySelector(\"#\".concat(id));\n\n      if (copyText) {\n        copyText.select();\n        document.execCommand('copy');\n        window.getSelection().removeAllRanges(); // tslint:disable-line\n      }\n    };\n\n    _this.getTableHeaders = function () {\n      return [_this.t('page.body.profile.apiKeys.table.header.kid'), _this.t('page.body.profile.apiKeys.table.header.algorithm'), _this.t('page.body.profile.apiKeys.table.header.state'), '', _this.t('page.body.profile.apiKeys.table.header.created'), _this.t('page.body.profile.apiKeys.table.header.updated'), ''];\n    };\n\n    _this.renderModalHeader = function () {\n      var headerText = _this.props.modal.action === 'createSuccess' ? _this.t('page.body.profile.apiKeys.modal.created_header') : _this.t('page.body.profile.apiKeys.modal.header');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, headerText, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pg-profile-page__close pg-profile-page__pull-right\",\n        onClick: _this.handleHide2FAModal,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    _this.renderModalBody = function () {\n      var _this$state = _this.state,\n          otpCode = _this$state.otpCode,\n          codeFocused = _this$state.codeFocused;\n      var modal = _this.props.modal;\n      var secret = modal && modal.apiKey ? modal.apiKey.secret : '';\n      var emailGroupClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': codeFocused\n      });\n      var body;\n      var button;\n      var isDisabled = !otpCode.match(/.{6}/g);\n\n      switch (_this.props.modal.action) {\n        case 'createKey':\n          button = /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            onClick: _this.handleCreateKey,\n            disabled: isDisabled,\n            size: \"lg\",\n            variant: \"primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }\n          }, _this.t('page.body.profile.apiKeys.modal.btn.create'));\n          break;\n\n        case 'createSuccess':\n          button = /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            onClick: _this.handleCreateSuccess,\n            size: \"lg\",\n            variant: \"primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }\n          }, _this.t('page.body.profile.apiKeys.modal.btn.create'));\n          body = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"cr-success-create\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-copyable-text__section\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"fieldset\", {\n            onClick: function onClick() {\n              return _this.handleCopy('access-key-id', 'access');\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(CopyableTextField, {\n            className: \"pg-copyable-text-field__input\",\n            fieldId: 'access-key-id',\n            value: modal.apiKey && modal.apiKey.kid || '',\n            copyButtonText: _this.t('page.body.profile.content.copyLink'),\n            label: _this.t('page.body.profile.apiKeys.modal.access_key'),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"secret-section\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"secret-sign\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }\n          }, \"\\u26A0\"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"secret-warning\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }\n          }, _this.t('page.body.profile.apiKeys.modal.secret_key')), /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }\n          }), _this.t('page.body.profile.apiKeys.modal.secret_key_info'), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }\n          }, \" \", _this.t('page.body.profile.apiKeys.modal.secret_key_store')))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-copyable-text__section\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"fieldset\", {\n            onClick: function onClick() {\n              return _this.handleCopy('secret-key-id', 'secret');\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(CopyableTextField, {\n            className: \"pg-copyable-text-field__input\",\n            fieldId: 'secret_key-id',\n            value: secret || '',\n            copyButtonText: _this.t('page.body.profile.content.copyLink'),\n            label: _this.t('page.body.profile.apiKeys.modal.secret_key'),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"note-section\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }\n          }, _this.t('page.body.profile.apiKeys.modal.note'), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }\n          }), _this.t('page.body.profile.apiKeys.modal.note_content')), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"button-confirmation\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }\n          }, button));\n          break;\n\n        case 'updateKey':\n          button = /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            onClick: _this.handleUpdateKey,\n            disabled: isDisabled,\n            size: \"lg\",\n            variant: \"primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }\n          }, modal.apiKey && modal.apiKey.state === 'active' ? _this.t('page.body.profile.apiKeys.modal.btn.disabled') : _this.t('page.body.profile.apiKeys.modal.btn.activate'));\n          break;\n\n        case 'deleteKey':\n          button = /*#__PURE__*/React.createElement(Button, {\n            block: true,\n            onClick: _this.handleDeleteKey,\n            disabled: isDisabled,\n            size: \"lg\",\n            variant: \"primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 25\n            }\n          }, _this.t('page.body.profile.apiKeys.modal.btn.delete'));\n          break;\n\n        default:\n          break;\n      }\n\n      body = !body ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__form-content\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__header\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, _this.t('page.body.profile.apiKeys.modal.title')), /*#__PURE__*/React.createElement(\"div\", {\n        className: emailGroupClass,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"number\",\n        label: _this.t('page.body.profile.apiKeys.modal.label'),\n        placeholder: _this.t('page.body.profile.apiKeys.modal.placeholder'),\n        defaultLabel: \"2FA code\",\n        handleChangeInput: _this.handleOtpCodeChange,\n        inputValue: otpCode || '',\n        handleFocusInput: _this.handleChangeFocusField,\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        autoFocus: true,\n        onKeyPress: _this.handleEnterPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__button-wrapper\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }, button)) : body;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }\n      }, body);\n    };\n\n    _this.handleChangeFocusField = function () {\n      _this.setState(function (prev) {\n        return {\n          codeFocused: !prev.codeFocused\n        };\n      });\n    };\n\n    _this.handleHide2FAModal = function () {\n      var payload = {\n        active: false\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleOtpCodeChange = function (value) {\n      _this.setState({\n        otpCode: value\n      });\n    };\n\n    _this.renderOnClick = function () {\n      switch (_this.props.modal.action) {\n        case 'createKey':\n          _this.handleCreateKey();\n\n          break;\n\n        case 'createSuccess':\n          _this.handleCreateSuccess();\n\n          break;\n\n        case 'updateKey':\n          _this.handleUpdateKey();\n\n          break;\n\n        case 'deleteKey':\n          _this.handleDeleteKey();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleEnterPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.renderOnClick();\n      }\n    };\n\n    _this.handleCreateKeyClick = function () {\n      var payload = {\n        active: true,\n        action: 'createKey'\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleCreateKey = function () {\n      var payload = {\n        totp_code: _this.state.otpCode\n      };\n\n      _this.props.createApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleCreateSuccess = function () {\n      var payload = {\n        active: false\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleToggleStateKeyClick = function (apiKey) {\n      return function () {\n        var payload = {\n          active: true,\n          action: 'updateKey',\n          apiKey\n        };\n\n        _this.props.toggleApiKeys2FAModal(payload);\n      };\n    };\n\n    _this.handleUpdateKey = function () {\n      var apiKey = _objectSpread({}, _this.props.modal.apiKey);\n\n      apiKey.state = apiKey.state === 'active' ? 'disabled' : 'active';\n      var payload = {\n        totp_code: _this.state.otpCode,\n        apiKey: apiKey\n      };\n\n      _this.props.updateApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleCopy = function (id, type) {\n      _this.copy(id);\n\n      _this.props.fetchSuccess({\n        message: [\"success.api_keys.copied.\".concat(type)],\n        type: 'success'\n      });\n    };\n\n    _this.handleDeleteKeyClick = function (apiKey) {\n      var payload = {\n        active: true,\n        action: 'deleteKey',\n        apiKey\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleDeleteKey = function () {\n      var modal = _this.props.modal;\n      var payload = {\n        kid: modal.apiKey && modal.apiKey.kid || '',\n        totp_code: _this.state.otpCode\n      };\n\n      _this.props.deleteApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.onClickPrevPage = function () {\n      var pageIndex = _this.props.pageIndex;\n\n      _this.props.apiKeysFetch({\n        pageIndex: Number(pageIndex) - 1,\n        limit: 4\n      });\n    };\n\n    _this.onClickNextPage = function () {\n      var pageIndex = _this.props.pageIndex;\n\n      _this.props.apiKeysFetch({\n        pageIndex: Number(pageIndex) + 1,\n        limit: 4\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileApiKeysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.apiKeysFetch({\n        pageIndex: 0,\n        limit: 4\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          apiKeys = _this$props.apiKeys,\n          dataLoaded = _this$props.dataLoaded,\n          firstElemIndex = _this$props.firstElemIndex,\n          lastElemIndex = _this$props.lastElemIndex,\n          nextPageExists = _this$props.nextPageExists,\n          pageIndex = _this$props.pageIndex,\n          user = _this$props.user;\n      var modal = this.props.modal.active ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, this.renderModalHeader(), this.renderModalBody())) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__api-keys\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__api-keys__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, this.t('page.body.profile.apiKeys.header')), user.otp && dataLoaded && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pg-profile-page__pull-right\",\n        onClick: this.handleCreateKeyClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, this.t('page.body.profile.apiKeys.header.create')))), !user.otp && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-profile-page__label pg-profile-page__text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, this.t('page.body.profile.apiKeys.noOtp')), user.otp && dataLoaded && !apiKeys.length && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__label pg-profile-page__text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, this.t('page.body.profile.apiKeys.noKeys')), user.otp && dataLoaded && apiKeys.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        header: this.getTableHeaders(),\n        data: this.getTableData(apiKeys),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        firstElemIndex: firstElemIndex,\n        lastElemIndex: lastElemIndex,\n        page: pageIndex,\n        nextPageExists: nextPageExists,\n        onClickPrevPage: this.onClickPrevPage,\n        onClickNextPage: this.onClickNextPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      })), modal);\n    }\n  }, {\n    key: \"getTableData\",\n    value: function getTableData(apiKeysData) {\n      var _this2 = this;\n\n      return apiKeysData.map(function (item) {\n        return [item.kid, item.algorithm, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-profile-page__api-keys__state\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: item.state === 'active' ? 'pg-profile-page__api-keys__state__active' : 'pg-profile-page__api-keys__state__disabled',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }, item.state)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-profile-page__api-keys__status\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          type: \"switch\",\n          id: \"apiKeyCheck-\".concat(item.kid),\n          label: \"\",\n          onChange: _this2.handleToggleStateKeyClick(item),\n          checked: item.state === 'active',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }\n        }))), localeDate(item.created_at, 'fullDate'), localeDate(item.updated_at, 'fullDate'), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"pg-profile-page__close\",\n          key: item.kid,\n          onClick: function onClick() {\n            return _this2.handleDeleteKeyClick(item);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }\n        })];\n      });\n    }\n  }]);\n\n  return ProfileApiKeysComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    apiKeys: selectApiKeys(state),\n    dataLoaded: selectApiKeysDataLoaded(state),\n    modal: selectApiKeysModal(state),\n    user: selectUserInfo(state),\n    pageIndex: selectApiKeysPageIndex(state),\n    firstElemIndex: selectApiKeysFirstElemIndex(state, 4),\n    lastElemIndex: selectApiKeysLastElemIndex(state, 4),\n    nextPageExists: selectApiKeysNextPageExists(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleApiKeys2FAModal: function toggleApiKeys2FAModal(payload) {\n      return dispatch(apiKeys2FAModal(payload));\n    },\n    apiKeysFetch: function apiKeysFetch(payload) {\n      return dispatch(_apiKeysFetch(payload));\n    },\n    createApiKey: function createApiKey(payload) {\n      return dispatch(apiKeyCreateFetch(payload));\n    },\n    updateApiKey: function updateApiKey(payload) {\n      return dispatch(apiKeyUpdateFetch(payload));\n    },\n    deleteApiKey: function deleteApiKey(payload) {\n      return dispatch(apiKeyDeleteFetch(payload));\n    },\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    }\n  };\n};\n\nvar connected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileApiKeysComponent));\nvar ProfileApiKeys = withRouter(connected);\nexport { ProfileApiKeys };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileApiKeys/index.tsx"],"names":["cr","React","Button","Form","injectIntl","connect","withRouter","CopyableTextField","CustomInput","Pagination","Table","localeDate","alertPush","apiKeyCreateFetch","apiKeyDeleteFetch","apiKeys2FAModal","apiKeysFetch","apiKeyUpdateFetch","selectUserInfo","selectApiKeys","selectApiKeysDataLoaded","selectApiKeysFirstElemIndex","selectApiKeysLastElemIndex","selectApiKeysModal","selectApiKeysNextPageExists","selectApiKeysPageIndex","ProfileApiKeysComponent","state","otpCode","codeFocused","t","key","props","intl","formatMessage","id","copy","copyText","document","querySelector","select","execCommand","window","getSelection","removeAllRanges","getTableHeaders","renderModalHeader","headerText","modal","action","handleHide2FAModal","renderModalBody","secret","apiKey","emailGroupClass","body","button","isDisabled","match","handleCreateKey","handleCreateSuccess","handleCopy","kid","handleUpdateKey","handleDeleteKey","handleOtpCodeChange","handleChangeFocusField","handleEnterPress","setState","prev","payload","active","toggleApiKeys2FAModal","value","renderOnClick","event","preventDefault","handleCreateKeyClick","totp_code","createApiKey","handleToggleStateKeyClick","updateApiKey","type","fetchSuccess","message","handleDeleteKeyClick","deleteApiKey","onClickPrevPage","pageIndex","Number","limit","onClickNextPage","apiKeys","dataLoaded","firstElemIndex","lastElemIndex","nextPageExists","user","otp","length","getTableData","apiKeysData","map","item","algorithm","created_at","updated_at","Component","mapStateToProps","mapDispatchToProps","dispatch","connected","ProfileApiKeys"],"mappings":"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","sourcesContent":["import cr from 'classnames';\nimport * as React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { IntlProps } from '../../';\nimport {\n    CopyableTextField,\n    CustomInput,\n    Pagination,\n    Table,\n} from '../../components';\nimport { localeDate } from '../../helpers/localeDate';\n\nimport {\n    alertPush,\n    ApiKeyCreateFetch,\n    apiKeyCreateFetch, ApiKeyDataInterface,\n    ApiKeyDeleteFetch,\n    apiKeyDeleteFetch,\n    ApiKeys2FAModal,\n    apiKeys2FAModal, apiKeysFetch,\n    ApiKeyStateModal, ApiKeyUpdateFetch,\n    apiKeyUpdateFetch,\n    RootState,\n    selectUserInfo,\n    User,\n} from '../../modules';\nimport {\n    selectApiKeys,\n    selectApiKeysDataLoaded,\n    selectApiKeysFirstElemIndex,\n    selectApiKeysLastElemIndex,\n    selectApiKeysModal,\n    selectApiKeysNextPageExists,\n    selectApiKeysPageIndex,\n} from '../../modules/user/apiKeys/selectors';\n\ninterface ReduxProps {\n    apiKeys: ApiKeyDataInterface[];\n    dataLoaded: boolean;\n    modal: ApiKeyStateModal;\n    user: User;\n    pageIndex: number;\n    firstElemIndex: number;\n    lastElemIndex: number;\n    nextPageExists: boolean;\n}\n\ninterface DispatchProps {\n    toggleApiKeys2FAModal: typeof apiKeys2FAModal;\n    apiKeysFetch: typeof apiKeysFetch;\n    createApiKey: typeof apiKeyCreateFetch;\n    updateApiKey: typeof apiKeyUpdateFetch;\n    deleteApiKey: typeof apiKeyDeleteFetch;\n    fetchSuccess: typeof alertPush;\n}\n\ninterface ProfileApiKeysState {\n    otpCode: string;\n    codeFocused: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nclass ProfileApiKeysComponent extends React.Component<Props, ProfileApiKeysState> {\n    public state = {\n        otpCode: '',\n        codeFocused: false,\n    };\n\n    public t = (key: string) => {\n        return this.props.intl.formatMessage({id: key});\n    };\n\n    public copy = (id: string) => {\n        const copyText: HTMLInputElement | null = document.querySelector(`#${id}`);\n\n        if (copyText) {\n            copyText.select();\n\n            document.execCommand('copy');\n            (window.getSelection() as any).removeAllRanges(); // tslint:disable-line\n        }\n    };\n\n    public componentDidMount() {\n        this.props.apiKeysFetch({ pageIndex: 0, limit: 4 });\n    }\n\n    public render() {\n        const {\n            apiKeys,\n            dataLoaded,\n            firstElemIndex,\n            lastElemIndex,\n            nextPageExists,\n            pageIndex,\n            user,\n        } = this.props;\n\n        const modal = this.props.modal.active ? (\n            <div className=\"cr-modal\">\n                <div className=\"cr-email-form\">\n                    {this.renderModalHeader()}\n                    {this.renderModalBody()}\n                </div>\n            </div>\n        ) : null;\n\n        return (\n            <div className=\"pg-profile-page__api-keys\">\n                <div className=\"pg-profile-page-header\">\n                    <div className=\"pg-profile-page__api-keys__header\">\n                        <h3>{this.t('page.body.profile.apiKeys.header')}</h3>\n                        {user.otp && dataLoaded && (\n                            <span\n                                className=\"pg-profile-page__pull-right\"\n                                onClick={this.handleCreateKeyClick}\n                            >\n                                {this.t('page.body.profile.apiKeys.header.create')}\n                            </span>)}\n                    </div>\n                </div>\n\n                {!user.otp && (\n                    <p className=\"pg-profile-page__label pg-profile-page__text-center\">\n                        {this.t('page.body.profile.apiKeys.noOtp')}\n                    </p>\n                )}\n\n                {user.otp && dataLoaded && !apiKeys.length && (\n                    <div className=\"pg-profile-page__label pg-profile-page__text-center\">\n                        {this.t('page.body.profile.apiKeys.noKeys')}\n                    </div>\n                )}\n\n                {user.otp && dataLoaded && apiKeys.length > 0 && (\n                    <React.Fragment>\n                        <Table\n                            header={this.getTableHeaders()}\n                            data={this.getTableData(apiKeys)}\n                        />\n                        <Pagination\n                            firstElemIndex={firstElemIndex}\n                            lastElemIndex={lastElemIndex}\n                            page={pageIndex}\n                            nextPageExists={nextPageExists}\n                            onClickPrevPage={this.onClickPrevPage}\n                            onClickNextPage={this.onClickNextPage}\n                        />\n                    </React.Fragment>\n                )}\n\n                {modal}\n            </div>\n\n        );\n    }\n\n    private getTableHeaders = () => {\n        return [\n            this.t('page.body.profile.apiKeys.table.header.kid'),\n            this.t('page.body.profile.apiKeys.table.header.algorithm'),\n            this.t('page.body.profile.apiKeys.table.header.state'),\n            '',\n            this.t('page.body.profile.apiKeys.table.header.created'),\n            this.t('page.body.profile.apiKeys.table.header.updated'),\n            '',\n        ];\n    };\n\n    private getTableData(apiKeysData: ApiKeyDataInterface[]) {\n        return apiKeysData.map(item => (\n            [\n                item.kid,\n                item.algorithm,\n                (\n                    <div className=\"pg-profile-page__api-keys__state\">\n                        <span\n                            className={item.state === 'active' ? 'pg-profile-page__api-keys__state__active'\n                                : 'pg-profile-page__api-keys__state__disabled'}\n                        >\n                            {item.state}\n                        </span>\n                    </div>\n                ),\n                (\n                    <div className=\"pg-profile-page__api-keys__status\">\n                        <Form>\n                            <Form.Check\n                                type=\"switch\"\n                                id={`apiKeyCheck-${item.kid}`}\n                                label=\"\"\n                                onChange={this.handleToggleStateKeyClick(item)}\n                                checked={item.state === 'active'}\n                            />\n                        </Form>\n                    </div>\n                )\n                ,\n                localeDate(item.created_at, 'fullDate'),\n                localeDate(item.updated_at, 'fullDate'),\n                (\n                    <span\n                        className=\"pg-profile-page__close\"\n                        key={item.kid}\n                        onClick={() => this.handleDeleteKeyClick(item)}\n                    />\n                ),\n            ]\n        ));\n    }\n\n    private renderModalHeader = () => {\n        const headerText = this.props.modal.action === 'createSuccess' ? this.t('page.body.profile.apiKeys.modal.created_header')\n            : this.t('page.body.profile.apiKeys.modal.header');\n\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        {headerText}\n                        <span\n                            className=\"pg-profile-page__close pg-profile-page__pull-right\"\n                            onClick={this.handleHide2FAModal}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalBody = () => {\n        const {otpCode, codeFocused} = this.state;\n        const { modal } = this.props;\n        const secret = (modal && modal.apiKey) ? modal.apiKey.secret : '';\n        const emailGroupClass = cr('cr-email-form__group', {\n            'cr-email-form__group--focused': codeFocused,\n        });\n        let body;\n        let button;\n        const isDisabled = !otpCode.match(/.{6}/g);\n        switch (this.props.modal.action) {\n            case 'createKey':\n                button =\n                    (\n                        <Button\n                            block={true}\n                            onClick={this.handleCreateKey}\n                            disabled={isDisabled}\n                            size=\"lg\"\n                            variant=\"primary\"\n                        >\n                            {this.t('page.body.profile.apiKeys.modal.btn.create')}\n                        </Button>\n                    );\n                break;\n            case 'createSuccess':\n                button =\n                    (\n                        <Button\n                            block={true}\n                            onClick={this.handleCreateSuccess}\n                            size=\"lg\"\n                            variant=\"primary\"\n                        >\n                            {this.t('page.body.profile.apiKeys.modal.btn.create')}\n                        </Button>\n                    );\n                body = (\n                    <div className=\"cr-success-create\">\n                        <div className=\"pg-copyable-text__section\">\n                            <fieldset onClick={() => this.handleCopy('access-key-id', 'access')}>\n                                <CopyableTextField\n                                  className=\"pg-copyable-text-field__input\"\n                                  fieldId={'access-key-id'}\n                                  value={(modal.apiKey && modal.apiKey.kid) || ''}\n                                  copyButtonText={this.t('page.body.profile.content.copyLink')}\n                                  label={this.t('page.body.profile.apiKeys.modal.access_key')}\n                                />\n                            </fieldset>\n                        </div>\n                        <div className=\"secret-section\">\n                            <span className=\"secret-sign\">&#9888;</span>\n                            <p className=\"secret-warning\">\n                                <span>{this.t('page.body.profile.apiKeys.modal.secret_key')}</span>\n                                <br/>\n                                {this.t('page.body.profile.apiKeys.modal.secret_key_info')}\n                                <span> {this.t('page.body.profile.apiKeys.modal.secret_key_store')}</span>\n                            </p>\n                        </div>\n                        <div className=\"pg-copyable-text__section\">\n                            <fieldset onClick={() => this.handleCopy('secret-key-id', 'secret')}>\n                                <CopyableTextField\n                                  className=\"pg-copyable-text-field__input\"\n                                  fieldId={'secret_key-id'}\n                                  value={secret || ''}\n                                  copyButtonText={this.t('page.body.profile.content.copyLink')}\n                                  label={this.t('page.body.profile.apiKeys.modal.secret_key')}\n                                />\n                            </fieldset>\n                        </div>\n                        <p className=\"note-section\">\n                            <span>{this.t('page.body.profile.apiKeys.modal.note')} </span>\n                            <br/>\n                            {this.t('page.body.profile.apiKeys.modal.note_content')}\n                        </p>\n                        <div className=\"button-confirmation\">\n                            {button}\n                        </div>\n                    </div>\n                );\n                break;\n            case 'updateKey':\n                button = (\n                    <Button\n                        block={true}\n                        onClick={this.handleUpdateKey}\n                        disabled={isDisabled}\n                        size=\"lg\"\n                        variant=\"primary\"\n                    >\n                        {modal.apiKey && modal.apiKey.state === 'active' ?\n                            this.t('page.body.profile.apiKeys.modal.btn.disabled') :\n                            this.t('page.body.profile.apiKeys.modal.btn.activate')}\n                    </Button>\n                );\n                break;\n            case 'deleteKey':\n                button =\n                    (\n                        <Button\n                            block={true}\n                            onClick={this.handleDeleteKey}\n                            disabled={isDisabled}\n                            size=\"lg\"\n                            variant=\"primary\"\n                        >\n                            {this.t('page.body.profile.apiKeys.modal.btn.delete')}\n                        </Button>\n                    );\n                break;\n            default:\n                break;\n        }\n        body = !body ? (\n            <div className=\"cr-email-form__form-content\">\n                <div className=\"cr-email-form__header\">\n                    {this.t('page.body.profile.apiKeys.modal.title')}\n                </div>\n                <div className={emailGroupClass}>\n                    <CustomInput\n                        type=\"number\"\n                        label={this.t('page.body.profile.apiKeys.modal.label')}\n                        placeholder={this.t('page.body.profile.apiKeys.modal.placeholder')}\n                        defaultLabel=\"2FA code\"\n                        handleChangeInput={this.handleOtpCodeChange}\n                        inputValue={otpCode || ''}\n                        handleFocusInput={this.handleChangeFocusField}\n                        classNameLabel=\"cr-email-form__label\"\n                        classNameInput=\"cr-email-form__input\"\n                        autoFocus={true}\n                        onKeyPress={this.handleEnterPress}\n                    />\n                </div>\n                <div className=\"cr-email-form__button-wrapper\">\n                    {button}\n                </div>\n            </div>\n        ) : body;\n\n        return (\n            <React.Fragment>\n                {body}\n            </React.Fragment>\n        );\n    };\n\n    private handleChangeFocusField = () => {\n        this.setState(prev => ({\n            codeFocused: !prev.codeFocused,\n        }));\n    };\n\n    private handleHide2FAModal = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: false};\n        this.props.toggleApiKeys2FAModal(payload);\n        this.setState({ otpCode: '' });\n    };\n\n    private handleOtpCodeChange = (value: string) => {\n        this.setState({\n            otpCode: value,\n        });\n    };\n\n    private renderOnClick = () => {\n        switch (this.props.modal.action) {\n            case 'createKey':\n                this.handleCreateKey();\n                break;\n            case 'createSuccess':\n                this.handleCreateSuccess();\n                break;\n            case 'updateKey':\n                this.handleUpdateKey();\n                break;\n            case 'deleteKey':\n                this.handleDeleteKey();\n                break;\n            default:\n                break;\n        }\n    };\n\n    private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.renderOnClick();\n        }\n    };\n\n    private handleCreateKeyClick = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'createKey'};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleCreateKey = () => {\n        const payload: ApiKeyCreateFetch['payload'] = {totp_code: this.state.otpCode};\n        this.props.createApiKey(payload);\n        this.setState({otpCode: ''});\n    };\n\n    private handleCreateSuccess = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: false};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleToggleStateKeyClick = apiKey => () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'updateKey', apiKey};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleUpdateKey = () => {\n        const apiKey: ApiKeyDataInterface = {...this.props.modal.apiKey} as any;\n        apiKey.state = apiKey.state === 'active' ? 'disabled' : 'active';\n        const payload: ApiKeyUpdateFetch['payload'] = {totp_code: this.state.otpCode, apiKey: apiKey};\n        this.props.updateApiKey(payload);\n        this.setState({otpCode: ''});\n    };\n\n    private handleCopy = (id: string, type: string) => {\n        this.copy(id);\n        this.props.fetchSuccess({ message: [`success.api_keys.copied.${type}`], type: 'success'});\n    };\n\n    private handleDeleteKeyClick = apiKey => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'deleteKey', apiKey};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleDeleteKey = () => {\n        const { modal } = this.props;\n        const payload: ApiKeyDeleteFetch['payload'] = {kid: (modal.apiKey && modal.apiKey.kid) || '', totp_code: this.state.otpCode};\n        this.props.deleteApiKey(payload);\n        this.setState({otpCode: ''});\n    };\n\n    private onClickPrevPage = () => {\n        const { pageIndex } = this.props;\n        this.props.apiKeysFetch({ pageIndex: Number(pageIndex) - 1, limit: 4 });\n    };\n\n    private onClickNextPage = () => {\n        const { pageIndex } = this.props;\n        this.props.apiKeysFetch({ pageIndex: Number(pageIndex) + 1, limit: 4 });\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    apiKeys: selectApiKeys(state),\n    dataLoaded: selectApiKeysDataLoaded(state),\n    modal: selectApiKeysModal(state),\n    user: selectUserInfo(state),\n    pageIndex: selectApiKeysPageIndex(state),\n    firstElemIndex: selectApiKeysFirstElemIndex(state, 4),\n    lastElemIndex: selectApiKeysLastElemIndex(state, 4),\n    nextPageExists: selectApiKeysNextPageExists(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        toggleApiKeys2FAModal: (payload: ApiKeys2FAModal['payload']) => dispatch(apiKeys2FAModal(payload)),\n        apiKeysFetch: payload => dispatch(apiKeysFetch(payload)),\n        createApiKey: payload => dispatch(apiKeyCreateFetch(payload)),\n        updateApiKey: payload => dispatch(apiKeyUpdateFetch(payload)),\n        deleteApiKey: payload => dispatch(apiKeyDeleteFetch(payload)),\n        fetchSuccess: payload => dispatch(alertPush(payload)),\n    });\n\nconst connected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileApiKeysComponent)) as any;\nconst ProfileApiKeys = withRouter(connected);\n\nexport {\n    ProfileApiKeys,\n};\n"]},"metadata":{},"sourceType":"module"}