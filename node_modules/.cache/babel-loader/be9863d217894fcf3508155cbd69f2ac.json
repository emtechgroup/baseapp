{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(historyPushSaga);\n\nimport { put, select } from 'redux-saga/effects';\nimport { defaultStorageLimit } from '../../../../api';\nimport { sliceArray } from '../../../../helpers';\nimport { pushHistoryFinish } from '../actions';\nimport { selectHistory } from '../selectors';\nexport function historyPushSaga(action) {\n  var actualList, updatedTrades, slicedTrades;\n  return _regeneratorRuntime.wrap(function historyPushSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return select(selectHistory);\n\n        case 2:\n          actualList = _context.sent;\n          updatedTrades = [action.payload].concat(_toConsumableArray(actualList));\n          slicedTrades = sliceArray(updatedTrades, defaultStorageLimit());\n          _context.next = 7;\n          return put(pushHistoryFinish(slicedTrades));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/history/sagas/historyPushSaga.ts"],"names":["historyPushSaga","put","select","defaultStorageLimit","sliceArray","pushHistoryFinish","selectHistory","action","actualList","updatedTrades","payload","slicedTrades"],"mappings":";;;oDAMiBA,e;;AANjB,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAAsBC,iBAAtB,QAA+C,YAA/C;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAO,SAAUN,eAAV,CAA0BO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgB,iBAAML,MAAM,CAACI,aAAD,CAAZ;;AADhB;AACGE,UAAAA,UADH;AAEGC,UAAAA,aAFH,GAEuB,CAACF,MAAM,CAACG,OAAR,CAFvB,2BAE4CF,UAF5C;AAGGG,UAAAA,YAHH,GAGkBP,UAAU,CAACK,aAAD,EAAgBN,mBAAmB,EAAnC,CAH5B;AAAA;AAKH,iBAAMF,GAAG,CAACI,iBAAiB,CAACM,YAAD,CAAlB,CAAT;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, select } from 'redux-saga/effects';\nimport { defaultStorageLimit } from '../../../../api';\nimport { sliceArray } from '../../../../helpers';\nimport { HistoryPush, pushHistoryFinish } from '../actions';\nimport { selectHistory } from '../selectors';\n\nexport function* historyPushSaga(action: HistoryPush) {\n    const actualList = yield select(selectHistory);\n    const updatedTrades = [...[action.payload], ...actualList];\n    const slicedTrades = sliceArray(updatedTrades, defaultStorageLimit());\n\n    yield put(pushHistoryFinish(slicedTrades));\n}\n"]},"metadata":{},"sourceType":"module"}