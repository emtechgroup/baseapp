{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/RecentTrades/Market.tsx\";\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Decimal, Table } from '../../components';\nimport { localeDate, setTradeColor } from '../../helpers';\nimport { selectCurrentMarket, selectCurrentPrice, setCurrentPrice as _setCurrentPrice } from '../../modules';\nimport { recentTradesFetch, selectRecentTradesOfCurrentMarket } from '../../modules/public/recentTrades';\n\nvar handleHighlightValue = function handleHighlightValue(prevValue, curValue) {\n  var highlighted = '';\n  var val = curValue;\n  var prev = prevValue;\n\n  while (val !== prev && val.length > 0) {\n    highlighted = val[val.length - 1] + highlighted;\n    val = val.slice(0, -1);\n    prev = prev.slice(0, -1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cr-decimal__opacity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, val), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, highlighted));\n};\n\nvar RecentTradesMarketContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecentTradesMarketContainer, _React$Component);\n\n  var _super = _createSuper(RecentTradesMarketContainer);\n\n  function RecentTradesMarketContainer() {\n    var _this2;\n\n    _classCallCheck(this, RecentTradesMarketContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2.getHeaders = function () {\n      return [_this2.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.time'\n      }), _this2.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.amount'\n      }), _this2.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.price'\n      })];\n    };\n\n    _this2.handleOnSelect = function (index) {\n      var _this2$props = _this2.props,\n          recentTrades = _this2$props.recentTrades,\n          currentPrice = _this2$props.currentPrice;\n      var priceToSet = recentTrades[Number(index)] ? Number(recentTrades[Number(index)].price) : 0;\n\n      if (currentPrice !== priceToSet) {\n        _this2.props.setCurrentPrice(priceToSet);\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(RecentTradesMarketContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentMarket) {\n        this.props.tradesFetch(this.props.currentMarket);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (next.currentMarket && this.props.currentMarket !== next.currentMarket) {\n        this.props.tradesFetch(next.currentMarket);\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return JSON.stringify(nextProps.recentTrades) !== JSON.stringify(this.props.recentTrades);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-recent-trades__markets\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        data: this.getTrades(this.props.recentTrades),\n        header: this.getHeaders(),\n        onSelect: this.handleOnSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"getTrades\",\n    value: function getTrades(trades) {\n      var _this3 = this;\n\n      var priceFixed = this.props.currentMarket ? this.props.currentMarket.price_precision : 0;\n      var amountFixed = this.props.currentMarket ? this.props.currentMarket.amount_precision : 0;\n\n      var renderRow = function renderRow(item, i) {\n        var created_at = item.created_at,\n            taker_type = item.taker_type,\n            price = item.price,\n            amount = item.amount;\n        var higlightedDate = handleHighlightValue(String(localeDate(trades[i - 1] ? trades[i - 1].created_at : '', 'time')), String(localeDate(created_at, 'time')));\n        return [/*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(taker_type).color\n          },\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }\n        }, higlightedDate), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(taker_type).color\n          },\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Decimal, {\n          fixed: amountFixed,\n          thousSep: \",\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, amount)), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(taker_type).color\n          },\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Decimal, {\n          fixed: priceFixed,\n          thousSep: \",\",\n          prevValue: trades[i - 1] ? trades[i - 1].price : 0,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, price))];\n      };\n\n      return trades.length > 0 ? trades.map(renderRow) : [[[''], this.props.intl.formatMessage({\n        id: 'page.noDataToShow'\n      }), ['']]];\n    }\n  }]);\n\n  return RecentTradesMarketContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recentTrades: selectRecentTradesOfCurrentMarket(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    tradesFetch: function tradesFetch(market) {\n      return dispatch(recentTradesFetch(market));\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\n\nvar RecentTradesMarket = compose(injectIntl, connect(mapStateToProps, mapDispatchToProps))(RecentTradesMarketContainer); // tslint:disable-line\n\nexport { handleHighlightValue, RecentTradesMarket };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/RecentTrades/Market.tsx"],"names":["React","injectIntl","connect","compose","Decimal","Table","localeDate","setTradeColor","selectCurrentMarket","selectCurrentPrice","setCurrentPrice","recentTradesFetch","selectRecentTradesOfCurrentMarket","handleHighlightValue","prevValue","curValue","highlighted","val","prev","length","slice","RecentTradesMarketContainer","getHeaders","props","intl","formatMessage","id","handleOnSelect","index","recentTrades","currentPrice","priceToSet","Number","price","currentMarket","tradesFetch","next","nextProps","JSON","stringify","getTrades","trades","priceFixed","price_precision","amountFixed","amount_precision","renderRow","item","i","created_at","taker_type","amount","higlightedDate","String","color","map","Component","mapStateToProps","state","mapDispatchToProps","dispatch","market","payload","RecentTradesMarket"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { Decimal, Table } from '../../components';\nimport { localeDate, setTradeColor } from '../../helpers';\nimport {\n    Market,\n    PublicTrade,\n    RootState,\n    selectCurrentMarket,\n    selectCurrentPrice,\n    setCurrentPrice,\n} from '../../modules';\nimport { recentTradesFetch, selectRecentTradesOfCurrentMarket } from '../../modules/public/recentTrades';\n\ninterface ReduxProps {\n    recentTrades: PublicTrade[];\n    currentMarket: Market | undefined;\n    currentPrice: number | undefined;\n}\n\ninterface DispatchProps {\n    tradesFetch: typeof recentTradesFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ntype Props = DispatchProps & ReduxProps & IntlProps;\n\nconst handleHighlightValue = (prevValue: string, curValue: string) => {\n    let highlighted = '';\n    let val = curValue;\n    let prev = prevValue;\n\n    while (val !== prev && val.length > 0) {\n        highlighted = val[val.length - 1] + highlighted;\n        val = val.slice(0, -1);\n        prev = prev.slice(0, -1);\n    }\n\n    return (\n        <React.Fragment>\n            <span className=\"cr-decimal__opacity\">{val}</span>\n            <span>{highlighted}</span>\n        </React.Fragment>\n    );\n};\n\n\nclass RecentTradesMarketContainer extends React.Component<Props> {\n    public componentDidMount() {\n        if (this.props.currentMarket) {\n            this.props.tradesFetch(this.props.currentMarket);\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (next.currentMarket && this.props.currentMarket !== next.currentMarket) {\n            this.props.tradesFetch(next.currentMarket);\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: Props) {\n        return JSON.stringify(nextProps.recentTrades) !== JSON.stringify(this.props.recentTrades);\n    }\n\n    public render() {\n        return (\n            <div className=\"pg-recent-trades__markets\">\n                <Table\n                    data={this.getTrades(this.props.recentTrades)}\n                    header={this.getHeaders()}\n                    onSelect={this.handleOnSelect}\n                />\n            </div>\n        );\n    }\n\n    private getHeaders = () => {\n        return [\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.time' }),\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.amount' }),\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.price' }),\n        ];\n    };\n\n    private getTrades(trades: PublicTrade[]) {\n        const priceFixed = this.props.currentMarket ? this.props.currentMarket.price_precision : 0;\n        const amountFixed = this.props.currentMarket ? this.props.currentMarket.amount_precision : 0;\n\n        const renderRow = (item, i) => {\n            const { created_at, taker_type, price, amount } = item;\n            const higlightedDate = handleHighlightValue(String(localeDate(trades[i - 1] ? trades[i - 1].created_at : '', 'time')), String(localeDate(created_at, 'time')));\n\n            return [\n                <span style={{ color: setTradeColor(taker_type).color }} key={i}>{higlightedDate}</span>,\n                <span style={{ color: setTradeColor(taker_type).color }} key={i}>\n                    <Decimal fixed={amountFixed} thousSep=\",\">{amount}</Decimal>\n                </span>,\n                <span style={{ color: setTradeColor(taker_type).color }} key={i}>\n                    <Decimal fixed={priceFixed} thousSep=\",\" prevValue={trades[i - 1] ? trades[i - 1].price : 0}>{price}</Decimal>\n                </span>,\n            ];\n        };\n\n        return (trades.length > 0)\n            ? trades.map(renderRow)\n            : [[[''], this.props.intl.formatMessage({ id: 'page.noDataToShow' }), ['']]];\n    }\n\n    private handleOnSelect = (index: string) => {\n        const { recentTrades, currentPrice } = this.props;\n        const priceToSet = recentTrades[Number(index)] ? Number(recentTrades[Number(index)].price) : 0;\n\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    recentTrades: selectRecentTradesOfCurrentMarket(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    tradesFetch: market => dispatch(recentTradesFetch(market)),\n    setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n});\n\nconst RecentTradesMarket = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(RecentTradesMarketContainer) as any; // tslint:disable-line\n\nexport {\n    handleHighlightValue,\n    RecentTradesMarket,\n};\n"]},"metadata":{},"sourceType":"module"}