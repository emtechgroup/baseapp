{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileApiKeys/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useApiKeysFetch } from '../../../hooks';\nimport { apiKeyCreateFetch, apiKeyDeleteFetch, apiKeys2FAModal, apiKeyUpdateFetch, selectUserInfo } from '../../../modules';\nimport { selectApiKeys, selectApiKeysFirstElemIndex, selectApiKeysLastElemIndex, selectApiKeysModal, selectApiKeysNextPageExists } from '../../../modules/user/apiKeys/selectors';\nimport { AddIcon } from '../../assets/images/AddIcon';\nimport { ApiKeysItem, CreatedApiKeyModal, Subheader, TwoFactorModal } from '../../components';\n\nvar ProfileApiKeysMobileScreenComponent = function ProfileApiKeysMobileScreenComponent() {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemToUpdate = _React$useState2[0],\n      setItemToUpdate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentPageIndex = _React$useState4[0],\n      setPageIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentAction = _React$useState6[0],\n      setCurrentAction = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      show2FAModal = _React$useState8[0],\n      setShow2FAModal = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      showCreatedApiKeyModal = _React$useState10[0],\n      setShowCreatedApiKeyModal = _React$useState10[1];\n\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var history = useHistory();\n  var apiKeys = useSelector(selectApiKeys);\n  var apiKeysModal = useSelector(selectApiKeysModal) || {\n    action: ''\n  };\n  var user = useSelector(selectUserInfo);\n  var firstElemIndex = useSelector(function (state) {\n    return selectApiKeysFirstElemIndex(state, 4);\n  });\n  var lastElemIndex = useSelector(function (state) {\n    return selectApiKeysLastElemIndex(state, 4);\n  });\n  var nextPageExists = useSelector(selectApiKeysNextPageExists);\n  useApiKeysFetch(currentPageIndex, 4);\n\n  var onClickPrevPage = function onClickPrevPage() {\n    setPageIndex(currentPageIndex - 1);\n  };\n\n  var onClickNextPage = function onClickNextPage() {\n    setPageIndex(currentPageIndex + 1);\n  };\n\n  var handleCreateApiKey = function handleCreateApiKey(code2FA, shouldFetch) {\n    if (shouldFetch) {\n      var payload = {\n        totp_code: code2FA\n      };\n      dispatch(apiKeyCreateFetch(payload));\n    }\n  };\n\n  var handleUpdateApiKey = function handleUpdateApiKey(code2FA, shouldFetch) {\n    if (shouldFetch && itemToUpdate) {\n      var payload = {\n        totp_code: code2FA,\n        apiKey: _objectSpread(_objectSpread({}, itemToUpdate), {}, {\n          state: itemToUpdate.state === 'active' ? 'disabled' : 'active'\n        })\n      };\n      dispatch(apiKeyUpdateFetch(payload));\n    }\n  };\n\n  var handleDeleteApiKey = function handleDeleteApiKey(code2FA, shouldFetch) {\n    if (shouldFetch && itemToUpdate) {\n      var payload = {\n        totp_code: code2FA,\n        kid: itemToUpdate.kid\n      };\n      dispatch(apiKeyDeleteFetch(payload));\n    }\n  };\n\n  var handleTriggerAction = function handleTriggerAction(code2FA, shouldFetch) {\n    switch (currentAction) {\n      case 'create':\n        handleCreateApiKey(code2FA, shouldFetch);\n        break;\n\n      case 'update':\n        handleUpdateApiKey(code2FA, shouldFetch);\n        break;\n\n      case 'delete':\n        handleDeleteApiKey(code2FA, shouldFetch);\n        break;\n\n      default:\n        break;\n    }\n\n    setShow2FAModal(false);\n    setItemToUpdate(undefined);\n    setCurrentAction('');\n  };\n\n  var handleSetApiKeyProcess = function handleSetApiKeyProcess(actionToSet, item) {\n    setShow2FAModal(function (state) {\n      return !state;\n    });\n\n    switch (actionToSet) {\n      case 'create':\n        setCurrentAction('create');\n        break;\n\n      case 'update':\n        setItemToUpdate(item);\n        setCurrentAction('update');\n        break;\n\n      case 'delete':\n        setItemToUpdate(item);\n        setCurrentAction('delete');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  React.useEffect(function () {\n    if (apiKeysModal.action === 'createSuccess' && !showCreatedApiKeyModal) {\n      setShowCreatedApiKeyModal(true);\n      dispatch(apiKeys2FAModal({\n        active: false\n      }));\n    }\n  }, [dispatch, showCreatedApiKeyModal, apiKeysModal.action]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.apiKeys.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-api-keys-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, user.otp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-api-keys-screen__create\",\n    onClick: function onClick() {\n      return handleSetApiKeyProcess('create');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-api-keys-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, user.otp && apiKeys.length ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, apiKeys.map(function (apiKey, index) {\n    return /*#__PURE__*/React.createElement(ApiKeysItem, {\n      key: index,\n      index: index,\n      item: apiKey,\n      handleUpdateKey: function handleUpdateKey(item) {\n        return handleSetApiKeyProcess('update', item);\n      },\n      handleDeleteKey: function handleDeleteKey(item) {\n        return handleSetApiKeyProcess('delete', item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    firstElemIndex: firstElemIndex,\n    lastElemIndex: lastElemIndex,\n    page: currentPageIndex,\n    nextPageExists: nextPageExists,\n    onClickPrevPage: onClickPrevPage,\n    onClickNextPage: onClickNextPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"no-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'page.noDataToShow'\n  }))), /*#__PURE__*/React.createElement(CreatedApiKeyModal, {\n    showModal: showCreatedApiKeyModal,\n    closeCreatedApiKeyModal: function closeCreatedApiKeyModal() {\n      return setShowCreatedApiKeyModal(false);\n    },\n    apiKey: apiKeysModal.apiKey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TwoFactorModal, {\n    showModal: show2FAModal,\n    handleToggle2FA: handleTriggerAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport var ProfileApiKeysMobileScreen = React.memo(ProfileApiKeysMobileScreenComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileApiKeys/index.tsx"],"names":["React","useIntl","useDispatch","useSelector","useHistory","Pagination","useApiKeysFetch","apiKeyCreateFetch","apiKeyDeleteFetch","apiKeys2FAModal","apiKeyUpdateFetch","selectUserInfo","selectApiKeys","selectApiKeysFirstElemIndex","selectApiKeysLastElemIndex","selectApiKeysModal","selectApiKeysNextPageExists","AddIcon","ApiKeysItem","CreatedApiKeyModal","Subheader","TwoFactorModal","ProfileApiKeysMobileScreenComponent","useState","itemToUpdate","setItemToUpdate","currentPageIndex","setPageIndex","currentAction","setCurrentAction","show2FAModal","setShow2FAModal","showCreatedApiKeyModal","setShowCreatedApiKeyModal","dispatch","intl","history","apiKeys","apiKeysModal","action","user","firstElemIndex","state","lastElemIndex","nextPageExists","onClickPrevPage","onClickNextPage","handleCreateApiKey","code2FA","shouldFetch","payload","totp_code","handleUpdateApiKey","apiKey","handleDeleteApiKey","kid","handleTriggerAction","undefined","handleSetApiKeyProcess","actionToSet","item","useEffect","active","formatMessage","id","push","otp","length","map","index","ProfileApiKeysMobileScreen","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useApiKeysFetch } from '../../../hooks';\nimport {\n    apiKeyCreateFetch,\n    ApiKeyDataInterface,\n    apiKeyDeleteFetch,\n    apiKeys2FAModal,\n    apiKeyUpdateFetch,\n    RootState,\n    selectUserInfo,\n} from '../../../modules';\nimport {\n    selectApiKeys,\n    selectApiKeysFirstElemIndex,\n    selectApiKeysLastElemIndex,\n    selectApiKeysModal,\n    selectApiKeysNextPageExists,\n} from '../../../modules/user/apiKeys/selectors';\nimport { AddIcon } from '../../assets/images/AddIcon';\nimport {\n    ApiKeysItem,\n    CreatedApiKeyModal,\n    Subheader,\n    TwoFactorModal,\n} from '../../components';\n\nconst ProfileApiKeysMobileScreenComponent: React.FC = () => {\n    const [itemToUpdate, setItemToUpdate] = React.useState<ApiKeyDataInterface | undefined>();\n    const [currentPageIndex, setPageIndex] = React.useState(0);\n    const [currentAction, setCurrentAction] = React.useState('');\n    const [show2FAModal, setShow2FAModal] = React.useState(false);\n    const [showCreatedApiKeyModal, setShowCreatedApiKeyModal] = React.useState(false);\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const apiKeys = useSelector(selectApiKeys);\n    const apiKeysModal= useSelector(selectApiKeysModal) || { action: '' };\n    const user = useSelector(selectUserInfo);\n    const firstElemIndex = useSelector((state: RootState) => selectApiKeysFirstElemIndex(state, 4));\n    const lastElemIndex = useSelector((state: RootState) => selectApiKeysLastElemIndex(state, 4));\n    const nextPageExists = useSelector(selectApiKeysNextPageExists);\n    useApiKeysFetch(currentPageIndex, 4);\n\n    const onClickPrevPage = () => {\n        setPageIndex(currentPageIndex - 1);\n    };\n\n    const onClickNextPage = () => {\n        setPageIndex(currentPageIndex + 1);\n    };\n\n    const handleCreateApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch) {\n            const payload = {\n                totp_code: code2FA,\n            };\n            dispatch(apiKeyCreateFetch(payload));\n        }\n    };\n\n    const handleUpdateApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch && itemToUpdate) {\n            const payload = {\n                totp_code: code2FA,\n                apiKey: {\n                    ...itemToUpdate,\n                    state: itemToUpdate.state === 'active' ? 'disabled' : 'active',\n                },\n            };\n            dispatch(apiKeyUpdateFetch(payload));\n        }\n    };\n\n    const handleDeleteApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch && itemToUpdate) {\n            const payload = {\n                totp_code: code2FA,\n                kid: itemToUpdate.kid,\n            };\n            dispatch(apiKeyDeleteFetch(payload));\n        }\n    };\n\n    const handleTriggerAction = (code2FA, shouldFetch) => {\n        switch (currentAction) {\n            case 'create':\n                handleCreateApiKey(code2FA, shouldFetch);\n                break;\n            case 'update':\n                handleUpdateApiKey(code2FA, shouldFetch);\n                break;\n            case 'delete':\n                handleDeleteApiKey(code2FA, shouldFetch);\n                break;\n            default:\n                break;\n        }\n\n        setShow2FAModal(false);\n        setItemToUpdate(undefined);\n        setCurrentAction('');\n    };\n\n    const handleSetApiKeyProcess = (actionToSet, item?: ApiKeyDataInterface ) => {\n        setShow2FAModal(state => !state);\n\n        switch (actionToSet) {\n            case 'create':\n                setCurrentAction('create');\n                break;\n            case 'update':\n                setItemToUpdate(item);\n                setCurrentAction('update');\n                break;\n            case 'delete':\n                setItemToUpdate(item);\n                setCurrentAction('delete');\n                break;\n            default:\n                break;\n        }\n    };\n\n    React.useEffect(() => {\n        if (apiKeysModal.action === 'createSuccess' && !showCreatedApiKeyModal) {\n            setShowCreatedApiKeyModal(true);\n            dispatch(apiKeys2FAModal({ active: false }));\n        }\n    }, [dispatch, showCreatedApiKeyModal, apiKeysModal.action]);\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.apiKeys.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-api-keys-screen\">\n                {user.otp ? (\n                    <div\n                        className=\"pg-mobile-profile-api-keys-screen__create\"\n                        onClick={() => handleSetApiKeyProcess('create')}\n                    >\n                        <AddIcon />\n                    </div>\n                ) : null}\n                <div className=\"pg-mobile-profile-api-keys-screen__list\">\n                    {user.otp && apiKeys.length ? (\n                        <React.Fragment>\n                            {apiKeys.map((apiKey, index) => (\n                                <ApiKeysItem\n                                    key={index}\n                                    index={index}\n                                    item={apiKey}\n                                    handleUpdateKey={item => handleSetApiKeyProcess('update', item)}\n                                    handleDeleteKey={item => handleSetApiKeyProcess('delete', item)}\n                                />\n                            ))}\n                            <Pagination\n                                firstElemIndex={firstElemIndex}\n                                lastElemIndex={lastElemIndex}\n                                page={currentPageIndex}\n                                nextPageExists={nextPageExists}\n                                onClickPrevPage={onClickPrevPage}\n                                onClickNextPage={onClickNextPage}\n                            />\n                        </React.Fragment>\n                    ) : (\n                        <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n                    )}\n                </div>\n                <CreatedApiKeyModal\n                    showModal={showCreatedApiKeyModal}\n                    closeCreatedApiKeyModal={() => setShowCreatedApiKeyModal(false)}\n                    apiKey={apiKeysModal.apiKey}\n                />\n                <TwoFactorModal\n                    showModal={show2FAModal}\n                    handleToggle2FA={handleTriggerAction}\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileApiKeysMobileScreen = React.memo(ProfileApiKeysMobileScreenComponent);\n"]},"metadata":{},"sourceType":"module"}