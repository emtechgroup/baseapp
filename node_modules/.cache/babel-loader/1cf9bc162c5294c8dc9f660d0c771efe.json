{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/ReferralProgram/index.tsx\";\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CopyableTextField } from '../../components';\nimport { copy } from '../../helpers';\nimport { alertPush, selectUserInfo } from '../../modules';\n\nvar ReferralProgramClass = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReferralProgramClass, _React$Component);\n\n  var _super = _createSuper(ReferralProgramClass);\n\n  function ReferralProgramClass() {\n    var _this;\n\n    _classCallCheck(this, ReferralProgramClass);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n\n    _this.doCopy = function () {\n      copy('referral-id');\n\n      _this.props.fetchSuccess({\n        message: ['page.body.wallets.tabs.deposit.ccy.message.success'],\n        type: 'success'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReferralProgramClass, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      var referralLink = \"\".concat(window.document.location.origin, \"/signup?refid=\").concat(user.uid);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__referral mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"pg-copyable-text__section\",\n        onClick: this.doCopy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        className: \"cr-deposit-crypto__copyable-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.referralProgram\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(CopyableTextField, {\n        className: \"pg-copyable-text-field__input\",\n        value: referralLink,\n        fieldId: \"referral-id\",\n        copyButtonText: this.translate('page.body.profile.content.copyLink'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ReferralProgramClass;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    }\n  };\n}; // tslint:disable-next-line\n\n\nexport var ReferralProgram = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ReferralProgramClass));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/ReferralProgram/index.tsx"],"names":["React","FormattedMessage","injectIntl","connect","CopyableTextField","copy","alertPush","selectUserInfo","ReferralProgramClass","translate","e","props","intl","formatMessage","id","doCopy","fetchSuccess","message","type","user","referralLink","window","document","location","origin","uid","Component","mapStateToProps","state","mapDispatchToProps","dispatch","payload","ReferralProgram"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,gBADJ,EAEIC,UAFJ,QAGO,YAHP;AAIA,SAASC,OAAT,QAA4C,aAA5C;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SACIC,SADJ,EAGIC,cAHJ,QAKO,eALP;;IAkBMC,oB;;;;;;;;;;;;;;;;UACKC,S,GAAY,UAACC,CAAD,EAAe;AAC9B,aAAO,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAACC,QAAAA,EAAE,EAAEJ;AAAL,OAA9B,CAAP;AACH,K;;UAEMK,M,GAAS,YAAM;AAClBV,MAAAA,IAAI,CAAC,aAAD,CAAJ;;AACA,YAAKM,KAAL,CAAWK,YAAX,CAAwB;AAACC,QAAAA,OAAO,EAAE,CAAC,oDAAD,CAAV;AAAkEC,QAAAA,IAAI,EAAE;AAAxE,OAAxB;AACH,K;;;;;;;6BAEe;AAAA,UACJC,IADI,GACK,KAAKR,KADV,CACJQ,IADI;AAEZ,UAAMC,YAAY,aAAMC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAA/B,2BAAsDL,IAAI,CAACM,GAA3D,CAAlB;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAU,QAAA,SAAS,EAAC,2BAApB;AAAgD,QAAA,OAAO,EAAE,KAAKV,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,0CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII,oBAAC,iBAAD;AACI,QAAA,SAAS,EAAC,+BADd;AAEI,QAAA,KAAK,EAAEK,YAFX;AAGI,QAAA,OAAO,EAAC,aAHZ;AAII,QAAA,cAAc,EAAE,KAAKX,SAAL,CAAe,oCAAf,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ;AAeH;;;;EA7B8BT,KAAK,CAAC0B,S;;AAgCzC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAmC;AACvDT,IAAAA,IAAI,EAAEZ,cAAc,CAACqB,KAAD;AADmC,GAAnC;AAAA,CAAxB;;AAIA,IAAMC,kBAAyD,GAAG,SAA5DA,kBAA4D,CAAAC,QAAQ;AAAA,SAAK;AAC3Ed,IAAAA,YAAY,EAAE,sBAAAe,OAAO;AAAA,aAAID,QAAQ,CAACxB,SAAS,CAACyB,OAAD,CAAV,CAAZ;AAAA;AADsD,GAAL;AAAA,CAA1E,C,CAIA;;;AACA,OAAO,IAAMC,eAAe,GAAG9B,UAAU,CAACC,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,oBAA7C,CAAD,CAAlC","sourcesContent":["import * as React from 'react';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { CopyableTextField } from '../../components';\nimport { copy } from '../../helpers';\nimport {\n    alertPush,\n    RootState,\n    selectUserInfo,\n    User,\n} from '../../modules';\n\ninterface ReduxProps {\n    user: User;\n}\n\ninterface DispatchProps {\n    fetchSuccess: typeof alertPush;\n}\n\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nclass ReferralProgramClass extends React.Component<Props> {\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({id: e});\n    };\n\n    public doCopy = () => {\n        copy('referral-id');\n        this.props.fetchSuccess({message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success'});\n    };\n\n    public render() {\n        const { user } = this.props;\n        const referralLink = `${window.document.location.origin}/signup?refid=${user.uid}`;\n\n        return (\n            <div className=\"pg-profile-page__referral mb-3\">\n                <fieldset className=\"pg-copyable-text__section\" onClick={this.doCopy}>\n                    <legend className=\"cr-deposit-crypto__copyable-title\">\n                        <FormattedMessage id=\"page.body.profile.header.referralProgram\"/>\n                    </legend>\n                    <CopyableTextField\n                        className=\"pg-copyable-text-field__input\"\n                        value={referralLink}\n                        fieldId=\"referral-id\"\n                        copyButtonText={this.translate('page.body.profile.content.copyLink')}\n                    />\n                </fieldset>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\n// tslint:disable-next-line\nexport const ReferralProgram = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ReferralProgramClass) as any) as any;\n"]},"metadata":{},"sourceType":"module"}