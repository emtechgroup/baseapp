{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileLanguage/index.tsx\";\n\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { languages } from '../../../api/config';\nimport { getLanguageName } from '../../../helpers';\nimport { changeLanguage, changeUserDataFetch, selectCurrentLanguage, selectUserInfo, selectUserLoggedIn } from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nvar ProfileLanguageMobileScreenComponent = function ProfileLanguageMobileScreenComponent() {\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var history = useHistory();\n  var user = useSelector(selectUserInfo);\n  var isLoggedIn = useSelector(selectUserLoggedIn);\n  var currentLanguage = useSelector(selectCurrentLanguage);\n\n  var handleChangeLanguage = function handleChangeLanguage(language) {\n    if (isLoggedIn) {\n      var data = user.data && JSON.parse(user.data);\n\n      if (data && data.language && data.language !== language) {\n        var payload = _objectSpread(_objectSpread({}, user), {}, {\n          data: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n            language\n          }))\n        });\n\n        dispatch(changeUserDataFetch({\n          user: payload\n        }));\n      }\n    }\n\n    dispatch(changeLanguage(language));\n  };\n\n  var renderLanguageListItem = function renderLanguageListItem(language, index) {\n    var listItemClassName = classnames('pg-mobile-profile-language-screen__list__item', {\n      'pg-mobile-profile-language-screen__list__item--active': language === currentLanguage\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: listItemClassName,\n      onClick: function onClick() {\n        return handleChangeLanguage(language);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, getLanguageName(language)), /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.language.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-language-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-language-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, languages.map(renderLanguageListItem))));\n};\n\nexport var ProfileLanguageMobileScreen = React.memo(ProfileLanguageMobileScreenComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileLanguage/index.tsx"],"names":["classnames","React","useIntl","useDispatch","useSelector","useHistory","languages","getLanguageName","changeLanguage","changeUserDataFetch","selectCurrentLanguage","selectUserInfo","selectUserLoggedIn","CheckIcon","Subheader","ProfileLanguageMobileScreenComponent","dispatch","intl","history","user","isLoggedIn","currentLanguage","handleChangeLanguage","language","data","JSON","parse","payload","stringify","renderLanguageListItem","index","listItemClassName","formatMessage","id","push","map","ProfileLanguageMobileScreen","memo"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { languages } from '../../../api/config';\nimport { getLanguageName } from '../../../helpers';\nimport {\n    changeLanguage,\n    changeUserDataFetch,\n    selectCurrentLanguage,\n    selectUserInfo,\n    selectUserLoggedIn,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst ProfileLanguageMobileScreenComponent: React.FC = () => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const user = useSelector(selectUserInfo);\n    const isLoggedIn = useSelector(selectUserLoggedIn);\n    const currentLanguage = useSelector(selectCurrentLanguage);\n\n    const handleChangeLanguage = (language: string) => {\n        if (isLoggedIn) {\n            const data = user.data && JSON.parse(user.data);\n\n            if (data && data.language && data.language !== language) {\n                const payload = {\n                    ...user,\n                    data: JSON.stringify({\n                        ...data,\n                        language,\n                    }),\n                };\n\n                dispatch(changeUserDataFetch({ user: payload }));\n            }\n        }\n\n        dispatch(changeLanguage(language));\n    };\n\n    const renderLanguageListItem = (language, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-language-screen__list__item', {\n            'pg-mobile-profile-language-screen__list__item--active': language === currentLanguage,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeLanguage(language)}\n            >\n                <span>{getLanguageName(language)}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.language.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-language-screen\">\n                <div className=\"pg-mobile-profile-language-screen__list\">\n                    {languages.map(renderLanguageListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileLanguageMobileScreen = React.memo(ProfileLanguageMobileScreenComponent);\n"]},"metadata":{},"sourceType":"module"}