{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/Beneficiaries/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ChevronIcon } from '../../assets/images/ChevronIcon';\nimport { PlusIcon } from '../../assets/images/PlusIcon';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { TrashBin } from '../../assets/images/TrashBin';\nimport { beneficiariesCreateData as _beneficiariesCreateData, beneficiariesDelete, memberLevelsFetch as _memberLevelsFetch, selectBeneficiaries, selectBeneficiariesActivateSuccess, selectBeneficiariesCreate, selectBeneficiariesCreateSuccess, selectMemberLevels, selectMobileDeviceState, selectUserInfo } from '../../modules';\nimport { BeneficiariesActivateModal } from './BeneficiariesActivateModal';\nimport { BeneficiariesAddModal } from './BeneficiariesAddModal';\nimport { BeneficiariesFailAddModal } from './BeneficiariesFailAddModal';\nvar defaultBeneficiary = {\n  id: 0,\n  currency: '',\n  name: '',\n  state: '',\n  data: {\n    address: ''\n  }\n};\n\n// tslint:disable jsx-no-multiline-js\nvar BeneficiariesComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(BeneficiariesComponent, _React$Component);\n\n  var _super = _createSuper(BeneficiariesComponent);\n\n  function BeneficiariesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, BeneficiariesComponent);\n\n    _this = _super.call(this, props);\n\n    _this.renderAddAddress = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-beneficiaries__add\",\n        onClick: _this.handleClickToggleAddAddressModal(),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pg-beneficiaries__add__label\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.addAddress')), /*#__PURE__*/React.createElement(PlusIcon, {\n        className: \"pg-beneficiaries__add__icon\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.renderDropdownItem = function (item, index, type) {\n      var isPending = item.state && item.state.toLowerCase() === 'pending';\n      var itemClassName = classnames('pg-beneficiaries__dropdown__body__item item', {\n        'item--pending': isPending\n      });\n\n      if (type === 'fiat') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: itemClassName,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item__left\",\n          onClick: _this.handleClickSelectAddress(item),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__left__title\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__left__address\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }\n        }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item__left\",\n          onClick: _this.handleClickSelectAddress(item),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__left__title\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__left__address\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }\n        }, item.data ? item.data.full_name : '')), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"item__right\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, isPending ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__right__pending\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.pending')) : null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"item__right__delete\",\n          onClick: _this.handleClickDeleteAddress(item),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TrashBin, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 109\n          }\n        }))));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: itemClassName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item__left\",\n        onClick: _this.handleClickSelectAddress(item),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item__left__title\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.name')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item__left__address\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item__right\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, isPending ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item__right__pending\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.pending')) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item__right__delete\",\n        onClick: _this.handleClickDeleteAddress(item),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TrashBin, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 105\n        }\n      }))));\n    };\n\n    _this.renderDropdownBody = function (beneficiaries, type) {\n      var dropdownBodyClassName = classnames('pg-beneficiaries__dropdown__body', {\n        'fiat-body': type === 'fiat'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: dropdownBodyClassName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, beneficiaries && beneficiaries.map(function (item, index) {\n        return _this.renderDropdownItem(item, index, type);\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-beneficiaries__dropdown__body__add add\",\n        onClick: _this.handleClickToggleAddAddressModal(),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"add__label\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.addAddress')), /*#__PURE__*/React.createElement(PlusIcon, {\n        className: \"add__icon\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this.renderDropdownTipCryptoNote = function (note) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tip__content__block\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tip__content__block__label\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.tipDescription')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tip__content__block__value\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, note));\n    };\n\n    _this.renderDropdownTipCrypto = function (currentWithdrawalBeneficiary) {\n      if (currentWithdrawalBeneficiary) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__tip tip\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.tipAddress')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.data.address)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.tipName')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.name)), currentWithdrawalBeneficiary.description && _this.renderDropdownTipCryptoNote(currentWithdrawalBeneficiary.description)));\n      }\n\n      return;\n    };\n\n    _this.renderDropdownTipFiatDescription = function (description) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tip__content__block\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tip__content__block__label\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.description')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tip__content__block__value\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, description));\n    };\n\n    _this.renderDropdownTipFiat = function (currentWithdrawalBeneficiary) {\n      if (currentWithdrawalBeneficiary) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__tip tip fiat-tip\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.name)), currentWithdrawalBeneficiary.description && _this.renderDropdownTipFiatDescription(currentWithdrawalBeneficiary.description), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.account')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.data.account_number)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.bankOfBeneficiary')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.data.bank_name))));\n      }\n\n      return;\n    };\n\n    _this.renderAddressDropdown = function (beneficiaries, currentWithdrawalBeneficiary, type) {\n      var _this$state = _this.state,\n          isOpenDropdown = _this$state.isOpenDropdown,\n          isOpenTip = _this$state.isOpenTip;\n      var isPending = currentWithdrawalBeneficiary.state && currentWithdrawalBeneficiary.state.toLowerCase() === 'pending';\n      var dropdownClassName = classnames('pg-beneficiaries__dropdown', {\n        'pg-beneficiaries__dropdown--open': isOpenDropdown\n      });\n\n      if (type === 'fiat') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: dropdownClassName,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__select fiat-select select\",\n          onClick: _this.handleToggleDropdown,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"select__left\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__left__title\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__left__address\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.name), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__left__title\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__left__address\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }\n        }, currentWithdrawalBeneficiary.data ? currentWithdrawalBeneficiary.data.full_name : '')), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"select__right\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }\n        }, isPending ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__right__pending\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 33\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.pending')) : null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__right__tip\",\n          onMouseOver: _this.handleToggleTip,\n          onMouseOut: _this.handleToggleTip,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(TipIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 135\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__right__select\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.select')), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"select__right__chevron\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(ChevronIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 70\n          }\n        })))), isOpenDropdown && _this.renderDropdownBody(beneficiaries, type), isOpenTip && _this.renderDropdownTipFiat(currentWithdrawalBeneficiary));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: dropdownClassName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-beneficiaries__dropdown__select select\",\n        onClick: _this.handleToggleDropdown,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select__left\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__left__title\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.name')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__left__address\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 65\n        }\n      }, currentWithdrawalBeneficiary.name))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select__right\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }\n      }, isPending ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__right__pending\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.pending')) : null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__right__tip\",\n        onMouseOver: _this.handleToggleTip,\n        onMouseOut: _this.handleToggleTip,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TipIcon, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 131\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__right__select\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.select')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"select__right__chevron\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ChevronIcon, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 66\n        }\n      })))), isOpenDropdown && _this.renderDropdownBody(beneficiaries, type), isOpenTip && _this.renderDropdownTipCrypto(currentWithdrawalBeneficiary));\n    };\n\n    _this.handleClickDeleteAddress = function (item) {\n      return function () {\n        _this.handleDeleteAddress(item);\n      };\n    };\n\n    _this.handleClickSelectAddress = function (item) {\n      return function () {\n        if (item.state && item.state.toLowerCase() === 'pending') {\n          _this.props.beneficiariesCreateData({\n            id: item.id\n          });\n\n          _this.handleToggleConfirmationModal();\n        } else {\n          _this.handleSetCurrentAddress(item);\n        }\n      };\n    };\n\n    _this.handleClickToggleAddAddressModal = function () {\n      return function () {\n        var _this$props = _this.props,\n            memberLevels = _this$props.memberLevels,\n            userData = _this$props.userData;\n\n        if (memberLevels && userData.level < memberLevels.withdraw.minimum_level) {\n          _this.handleToggleFailModal();\n        } else {\n          _this.handleToggleAddAddressModal();\n        }\n      };\n    };\n\n    _this.handleDeleteAddress = function (item) {\n      var payload = {\n        id: item.id\n      };\n\n      _this.props.deleteAddress(payload);\n    };\n\n    _this.handleFilterByCurrency = function (beneficiaries, currency) {\n      if (beneficiaries.length && currency) {\n        return beneficiaries.filter(function (item) {\n          return item.currency.toLowerCase() === currency.toLowerCase();\n        });\n      }\n\n      return [];\n    };\n\n    _this.handleFilterByState = function (beneficiaries, filter) {\n      if (beneficiaries.length) {\n        return beneficiaries.filter(function (item) {\n          return filter.includes(item.state.toLowerCase());\n        });\n      }\n\n      return [];\n    };\n\n    _this.handleSetCurrentAddress = function (item) {\n      if (item.data) {\n        _this.setState({\n          currentWithdrawalBeneficiary: item,\n          isOpenDropdown: false\n        });\n\n        _this.props.onChangeValue(item);\n      }\n    };\n\n    _this.handleSetCurrentAddressOnUpdate = function (beneficiaries, currency) {\n      var filteredByCurrency = _this.handleFilterByCurrency(beneficiaries, currency);\n\n      var filteredByState = _this.handleFilterByState(filteredByCurrency, 'active');\n\n      if (!filteredByState.length) {\n        filteredByState = _this.handleFilterByState(filteredByCurrency, 'pending');\n      }\n\n      if (filteredByState.length) {\n        _this.handleSetCurrentAddress(filteredByState[0]);\n      }\n    };\n\n    _this.handleToggleAddAddressModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenAddressModal: !prevState.isOpenAddressModal\n        };\n      });\n    };\n\n    _this.handleToggleConfirmationModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenConfirmationModal: !prevState.isOpenConfirmationModal\n        };\n      });\n    };\n\n    _this.handleToggleFailModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenFailModal: !prevState.isOpenFailModal\n        };\n      });\n    };\n\n    _this.handleToggleDropdown = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenDropdown: !prevState.isOpenDropdown\n        };\n      });\n    };\n\n    _this.handleToggleTip = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenTip: !prevState.isOpenTip\n        };\n      });\n    };\n\n    _this.translate = function (id) {\n      return _this.props.intl.formatMessage({\n        id\n      });\n    };\n\n    _this.state = {\n      currentWithdrawalBeneficiary: defaultBeneficiary,\n      isOpenAddressModal: false,\n      isOpenConfirmationModal: false,\n      isOpenDropdown: false,\n      isOpenTip: false,\n      isOpenFailModal: false\n    };\n    return _this;\n  }\n\n  _createClass(BeneficiariesComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          currency = _this$props2.currency,\n          beneficiaries = _this$props2.beneficiaries,\n          memberLevels = _this$props2.memberLevels;\n\n      if (currency && beneficiaries.length) {\n        this.handleSetCurrentAddressOnUpdate(beneficiaries, currency);\n      }\n\n      if (!memberLevels) {\n        this.props.memberLevelsFetch();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props3 = this.props,\n          currency = _this$props3.currency,\n          beneficiaries = _this$props3.beneficiaries,\n          beneficiariesAddSuccess = _this$props3.beneficiariesAddSuccess,\n          beneficiariesActivateSuccess = _this$props3.beneficiariesActivateSuccess;\n\n      if (nextProps.currency && nextProps.currency !== currency || nextProps.beneficiaries.length && nextProps.beneficiaries !== beneficiaries) {\n        this.handleSetCurrentAddressOnUpdate(nextProps.beneficiaries, nextProps.currency);\n      }\n\n      if (nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n        this.handleToggleAddAddressModal();\n        this.handleToggleConfirmationModal();\n      }\n\n      if (nextProps.beneficiariesActivateSuccess && !beneficiariesActivateSuccess) {\n        this.handleToggleConfirmationModal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          currency = _this$props4.currency,\n          type = _this$props4.type,\n          beneficiaries = _this$props4.beneficiaries,\n          beneficiariesAddData = _this$props4.beneficiariesAddData,\n          isMobileDevice = _this$props4.isMobileDevice;\n      var _this$state2 = this.state,\n          currentWithdrawalBeneficiary = _this$state2.currentWithdrawalBeneficiary,\n          isOpenAddressModal = _this$state2.isOpenAddressModal,\n          isOpenConfirmationModal = _this$state2.isOpenConfirmationModal,\n          isOpenFailModal = _this$state2.isOpenFailModal;\n      var filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency), ['active', 'pending']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-beneficiaries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pg-beneficiaries__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, type === 'coin' ? this.translate('page.body.wallets.beneficiaries.title') : this.translate('page.body.wallets.beneficiaries.fiat.title')), filtredBeneficiaries.length ? this.renderAddressDropdown(filtredBeneficiaries, currentWithdrawalBeneficiary, type) : this.renderAddAddress(), isOpenAddressModal && /*#__PURE__*/React.createElement(BeneficiariesAddModal, {\n        currency: currency,\n        type: type,\n        handleToggleAddAddressModal: this.handleToggleAddAddressModal,\n        handleToggleConfirmationModal: this.handleToggleConfirmationModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }), isOpenConfirmationModal && /*#__PURE__*/React.createElement(BeneficiariesActivateModal, {\n        beneficiariesAddData: beneficiariesAddData,\n        handleToggleConfirmationModal: this.handleToggleConfirmationModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }), isOpenFailModal && /*#__PURE__*/React.createElement(BeneficiariesFailAddModal, {\n        isMobileDevice: isMobileDevice,\n        handleToggleFailModal: this.handleToggleFailModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return BeneficiariesComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beneficiaries: selectBeneficiaries(state),\n    beneficiariesAddData: selectBeneficiariesCreate(state),\n    memberLevels: selectMemberLevels(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n    userData: selectUserInfo(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteAddress: function deleteAddress(payload) {\n      return dispatch(beneficiariesDelete(payload));\n    },\n    memberLevelsFetch: function memberLevelsFetch() {\n      return dispatch(_memberLevelsFetch());\n    },\n    beneficiariesCreateData: function beneficiariesCreateData(payload) {\n      return dispatch(_beneficiariesCreateData(payload));\n    }\n  };\n}; // tslint:disable-next-line:no-any\n\n\nexport var Beneficiaries = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesComponent));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/Beneficiaries/index.tsx"],"names":["classnames","React","injectIntl","connect","ChevronIcon","PlusIcon","TipIcon","TrashBin","beneficiariesCreateData","beneficiariesDelete","memberLevelsFetch","selectBeneficiaries","selectBeneficiariesActivateSuccess","selectBeneficiariesCreate","selectBeneficiariesCreateSuccess","selectMemberLevels","selectMobileDeviceState","selectUserInfo","BeneficiariesActivateModal","BeneficiariesAddModal","BeneficiariesFailAddModal","defaultBeneficiary","id","currency","name","state","data","address","BeneficiariesComponent","props","renderAddAddress","handleClickToggleAddAddressModal","translate","renderDropdownItem","item","index","type","isPending","toLowerCase","itemClassName","handleClickSelectAddress","full_name","handleClickDeleteAddress","renderDropdownBody","beneficiaries","dropdownBodyClassName","map","renderDropdownTipCryptoNote","note","renderDropdownTipCrypto","currentWithdrawalBeneficiary","description","renderDropdownTipFiatDescription","renderDropdownTipFiat","account_number","bank_name","renderAddressDropdown","isOpenDropdown","isOpenTip","dropdownClassName","handleToggleDropdown","handleToggleTip","handleDeleteAddress","handleToggleConfirmationModal","handleSetCurrentAddress","memberLevels","userData","level","withdraw","minimum_level","handleToggleFailModal","handleToggleAddAddressModal","payload","deleteAddress","handleFilterByCurrency","length","filter","handleFilterByState","includes","setState","onChangeValue","handleSetCurrentAddressOnUpdate","filteredByCurrency","filteredByState","prevState","isOpenAddressModal","isOpenConfirmationModal","isOpenFailModal","intl","formatMessage","nextProps","beneficiariesAddSuccess","beneficiariesActivateSuccess","beneficiariesAddData","isMobileDevice","filtredBeneficiaries","Component","mapStateToProps","mapDispatchToProps","dispatch","Beneficiaries"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { ChevronIcon } from '../../assets/images/ChevronIcon';\nimport { PlusIcon } from '../../assets/images/PlusIcon';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { TrashBin } from '../../assets/images/TrashBin';\nimport {\n    beneficiariesCreateData,\n    beneficiariesDelete,\n    Beneficiary,\n    BeneficiaryBank,\n    MemberLevels,\n    memberLevelsFetch,\n    RootState,\n    selectBeneficiaries,\n    selectBeneficiariesActivateSuccess,\n    selectBeneficiariesCreate,\n    selectBeneficiariesCreateSuccess,\n    selectMemberLevels,\n    selectMobileDeviceState,\n    selectUserInfo,\n    User,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\nimport { BeneficiariesActivateModal } from './BeneficiariesActivateModal';\nimport { BeneficiariesAddModal } from './BeneficiariesAddModal';\nimport { BeneficiariesFailAddModal } from './BeneficiariesFailAddModal';\n\ninterface ReduxProps {\n    beneficiaries: Beneficiary[];\n    beneficiariesAddData: Beneficiary;\n    beneficiariesAddSuccess: boolean;\n    beneficiariesAddError?: CommonError;\n    beneficiariesActivateError?: CommonError;\n    memberLevels?: MemberLevels;\n    beneficiariesActivateSuccess: boolean;\n    userData: User;\n    isMobileDevice: boolean;\n}\n\ninterface DispatchProps {\n    deleteAddress: typeof beneficiariesDelete;\n    memberLevelsFetch: typeof memberLevelsFetch;\n    beneficiariesCreateData: typeof beneficiariesCreateData;\n}\n\ninterface OwnProps {\n    currency: string;\n    type: 'fiat' | 'coin';\n    onChangeValue: (beneficiary: Beneficiary) => void;\n}\n\ninterface State {\n    currentWithdrawalBeneficiary: Beneficiary;\n    isOpenAddressModal: boolean;\n    isOpenConfirmationModal: boolean;\n    isOpenDropdown: boolean;\n    isOpenTip: boolean;\n    isOpenFailModal: boolean;\n}\n\nconst defaultBeneficiary: Beneficiary = {\n    id: 0,\n    currency: '',\n    name: '',\n    state: '',\n    data: {\n        address: '',\n    },\n};\n\ntype Props = ReduxProps & DispatchProps & OwnProps & IntlProps;\n\n// tslint:disable jsx-no-multiline-js\nclass BeneficiariesComponent extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentWithdrawalBeneficiary: defaultBeneficiary,\n            isOpenAddressModal: false,\n            isOpenConfirmationModal: false,\n            isOpenDropdown: false,\n            isOpenTip: false,\n            isOpenFailModal: false,\n        };\n    }\n\n    public componentDidMount() {\n        const { currency, beneficiaries, memberLevels } = this.props;\n        if (currency && beneficiaries.length) {\n            this.handleSetCurrentAddressOnUpdate(beneficiaries, currency);\n        }\n\n        if (!memberLevels) {\n            this.props.memberLevelsFetch();\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: Props) {\n        const {\n            currency,\n            beneficiaries,\n            beneficiariesAddSuccess,\n            beneficiariesActivateSuccess,\n        } = this.props;\n\n        if ((nextProps.currency && nextProps.currency !== currency) ||\n            (nextProps.beneficiaries.length && nextProps.beneficiaries !== beneficiaries)) {\n            this.handleSetCurrentAddressOnUpdate(nextProps.beneficiaries, nextProps.currency);\n        }\n\n        if (nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n            this.handleToggleAddAddressModal();\n            this.handleToggleConfirmationModal();\n        }\n\n        if (nextProps.beneficiariesActivateSuccess && !beneficiariesActivateSuccess) {\n            this.handleToggleConfirmationModal();\n        }\n    }\n\n    public render() {\n        const {\n            currency,\n            type,\n            beneficiaries,\n            beneficiariesAddData,\n            isMobileDevice,\n        } = this.props;\n        const {\n            currentWithdrawalBeneficiary,\n            isOpenAddressModal,\n            isOpenConfirmationModal,\n            isOpenFailModal,\n        } = this.state;\n        const filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency), ['active', 'pending']);\n\n        return (\n            <div className=\"pg-beneficiaries\">\n                <span className=\"pg-beneficiaries__title\">{type === 'coin' ? this.translate('page.body.wallets.beneficiaries.title') : this.translate('page.body.wallets.beneficiaries.fiat.title')}</span>\n                {filtredBeneficiaries.length ? this.renderAddressDropdown(filtredBeneficiaries, currentWithdrawalBeneficiary, type) : this.renderAddAddress()}\n                {isOpenAddressModal && (\n                    <BeneficiariesAddModal\n                        currency={currency}\n                        type={type}\n                        handleToggleAddAddressModal={this.handleToggleAddAddressModal}\n                        handleToggleConfirmationModal={this.handleToggleConfirmationModal}\n                    />\n                )}\n                {isOpenConfirmationModal && (\n                    <BeneficiariesActivateModal\n                        beneficiariesAddData={beneficiariesAddData}\n                        handleToggleConfirmationModal={this.handleToggleConfirmationModal}\n                    />\n                )}\n                {isOpenFailModal && (\n                    <BeneficiariesFailAddModal isMobileDevice={isMobileDevice} handleToggleFailModal={this.handleToggleFailModal} />\n                )}\n            </div>\n        );\n    }\n\n    private renderAddAddress = () => {\n        return (\n            <div className=\"pg-beneficiaries__add\" onClick={this.handleClickToggleAddAddressModal()}>\n                <span className=\"pg-beneficiaries__add__label\">{this.translate('page.body.wallets.beneficiaries.addAddress')}</span>\n                <PlusIcon className=\"pg-beneficiaries__add__icon\" />\n            </div>\n        );\n    };\n\n    private renderDropdownItem = (item: Beneficiary, index: number, type: 'fiat' | 'coin') => {\n        const isPending = item.state && item.state.toLowerCase() === 'pending';\n        const itemClassName = classnames('pg-beneficiaries__dropdown__body__item item', {\n            'item--pending': isPending,\n        });\n\n        if (type === 'fiat') {\n            return (\n                <div key={index} className={itemClassName}>\n                    <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                        <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                        <span className=\"item__left__address\">{item.name}</span>\n                    </div>\n                    <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                        <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')}</span>\n                        <span className=\"item__left__address\">{item.data ? (item.data as BeneficiaryBank).full_name : ''}</span>\n                    </div>\n                    <div className=\"item__right\">\n                        {isPending ? (\n                            <span className=\"item__right__pending\">{this.translate('page.body.wallets.beneficiaries.dropdown.pending')}</span>\n                        ) : null}\n                        <span className=\"item__right__delete\" onClick={this.handleClickDeleteAddress(item)}><TrashBin/></span>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div key={index} className={itemClassName}>\n                <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                    <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.name')}</span>\n                    <span className=\"item__left__address\">{item.name}</span>\n                </div>\n                <div className=\"item__right\">\n                    {isPending ? (\n                        <span className=\"item__right__pending\">{this.translate('page.body.wallets.beneficiaries.dropdown.pending')}</span>\n                    ) : null}\n                    <span className=\"item__right__delete\" onClick={this.handleClickDeleteAddress(item)}><TrashBin/></span>\n                </div>\n            </div>\n        );\n    };\n\n    private renderDropdownBody = (beneficiaries: Beneficiary[], type: 'fiat' | 'coin') => {\n        const dropdownBodyClassName = classnames('pg-beneficiaries__dropdown__body', {\n            'fiat-body': type === 'fiat',\n        });\n\n        return (\n            <div className={dropdownBodyClassName}>\n                {beneficiaries && beneficiaries.map((item, index) => this.renderDropdownItem(item, index, type))}\n                <div className=\"pg-beneficiaries__dropdown__body__add add\" onClick={this.handleClickToggleAddAddressModal()}>\n                    <span className=\"add__label\">{this.translate('page.body.wallets.beneficiaries.addAddress')}</span>\n                    <PlusIcon className=\"add__icon\" />\n                </div>\n            </div>\n        );\n    };\n\n    private renderDropdownTipCryptoNote = (note: string) => {\n        return (\n            <div className=\"tip__content__block\">\n                <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipDescription')}</span>\n                <span className=\"tip__content__block__value\">{note}</span>\n            </div>\n        );\n    };\n\n    private renderDropdownTipCrypto = (currentWithdrawalBeneficiary: Beneficiary) => {\n        if (currentWithdrawalBeneficiary) {\n            return (\n                <div className=\"pg-beneficiaries__dropdown__tip tip\">\n                    <div className=\"tip__content\">\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipAddress')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.data.address}</span>\n                        </div>\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipName')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.name}</span>\n                        </div>\n                        {currentWithdrawalBeneficiary.description && this.renderDropdownTipCryptoNote(currentWithdrawalBeneficiary.description)}\n                    </div>\n                </div>\n            );\n        }\n\n        return;\n    };\n\n    private renderDropdownTipFiatDescription = (description: string) => {\n        return (\n            <div className=\"tip__content__block\">\n                <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.description')}</span>\n                <span className=\"tip__content__block__value\">{description}</span>\n            </div>\n        );\n    };\n\n    private renderDropdownTipFiat = (currentWithdrawalBeneficiary: Beneficiary) => {\n        if (currentWithdrawalBeneficiary) {\n            return (\n                <div className=\"pg-beneficiaries__dropdown__tip tip fiat-tip\">\n                    <div className=\"tip__content\">\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.name}</span>\n                        </div>\n                        {currentWithdrawalBeneficiary.description && this.renderDropdownTipFiatDescription(currentWithdrawalBeneficiary.description)}\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.account')}</span>\n                            <span className=\"tip__content__block__value\">{(currentWithdrawalBeneficiary.data as BeneficiaryBank).account_number}</span>\n                        </div>\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.bankOfBeneficiary')}</span>\n                            <span className=\"tip__content__block__value\">{(currentWithdrawalBeneficiary.data as BeneficiaryBank).bank_name}</span>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return;\n    };\n\n    private renderAddressDropdown = (beneficiaries: Beneficiary[], currentWithdrawalBeneficiary: Beneficiary, type: 'fiat' | 'coin') => {\n        const { isOpenDropdown, isOpenTip } = this.state;\n        const isPending = currentWithdrawalBeneficiary.state && currentWithdrawalBeneficiary.state.toLowerCase() === 'pending';\n\n        const dropdownClassName = classnames('pg-beneficiaries__dropdown', {\n            'pg-beneficiaries__dropdown--open': isOpenDropdown,\n        });\n\n        if (type === 'fiat') {\n            return (\n                <div className={dropdownClassName}>\n                    <div className=\"pg-beneficiaries__dropdown__select fiat-select select\" onClick={this.handleToggleDropdown}>\n                        <div className=\"select__left\">\n                            <span className=\"select__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                            <span className=\"select__left__address\">{currentWithdrawalBeneficiary.name}</span>\n                            <span className=\"select__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')}</span>\n                            <span className=\"select__left__address\">{currentWithdrawalBeneficiary.data ? (currentWithdrawalBeneficiary.data as BeneficiaryBank).full_name : ''}</span>\n                        </div>\n                        <div className=\"select__right\">\n                            {isPending ? (\n                                <span className=\"select__right__pending\">{this.translate('page.body.wallets.beneficiaries.dropdown.pending')}</span>\n                            ) : null}\n                            <span className=\"select__right__tip\" onMouseOver={this.handleToggleTip} onMouseOut={this.handleToggleTip}><TipIcon/></span>\n                            <span className=\"select__right__select\">{this.translate('page.body.wallets.beneficiaries.dropdown.select')}</span>\n                            <span className=\"select__right__chevron\"><ChevronIcon /></span>\n                        </div>\n                    </div>\n                    {isOpenDropdown && this.renderDropdownBody(beneficiaries, type)}\n                    {isOpenTip && this.renderDropdownTipFiat(currentWithdrawalBeneficiary)}\n                </div>\n            );\n        }\n\n        return (\n            <div className={dropdownClassName}>\n                <div className=\"pg-beneficiaries__dropdown__select select\" onClick={this.handleToggleDropdown}>\n                    <div className=\"select__left\">\n                        <span className=\"select__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.name')}</span>\n                        <span className=\"select__left__address\"><span>{currentWithdrawalBeneficiary.name}</span></span>\n                    </div>\n                    <div className=\"select__right\">\n                        {isPending ? (\n                            <span className=\"select__right__pending\">{this.translate('page.body.wallets.beneficiaries.dropdown.pending')}</span>\n                        ) : null}\n                        <span className=\"select__right__tip\" onMouseOver={this.handleToggleTip} onMouseOut={this.handleToggleTip}><TipIcon/></span>\n                        <span className=\"select__right__select\">{this.translate('page.body.wallets.beneficiaries.dropdown.select')}</span>\n                        <span className=\"select__right__chevron\"><ChevronIcon /></span>\n                    </div>\n                </div>\n                {isOpenDropdown && this.renderDropdownBody(beneficiaries, type)}\n                {isOpenTip && this.renderDropdownTipCrypto(currentWithdrawalBeneficiary)}\n            </div>\n        );\n    };\n\n    private handleClickDeleteAddress = (item: Beneficiary) => () => {\n        this.handleDeleteAddress(item);\n    };\n\n    private handleClickSelectAddress = (item: Beneficiary) => () => {\n        if (item.state && item.state.toLowerCase() === 'pending') {\n            this.props.beneficiariesCreateData({ id: item.id } as any);\n            this.handleToggleConfirmationModal();\n        } else {\n            this.handleSetCurrentAddress(item);\n        }\n    };\n\n    private handleClickToggleAddAddressModal = () => () => {\n        const { memberLevels, userData } = this.props;\n\n        if (memberLevels && (userData.level < memberLevels.withdraw.minimum_level)) {\n            this.handleToggleFailModal();\n        } else {\n            this.handleToggleAddAddressModal();\n        }\n    };\n\n    private handleDeleteAddress = (item: Beneficiary) => {\n        const payload = {\n            id: item.id,\n        };\n\n        this.props.deleteAddress(payload);\n    };\n\n    private handleFilterByCurrency = (beneficiaries: Beneficiary[], currency: string) => {\n        if (beneficiaries.length && currency) {\n            return beneficiaries.filter(item => item.currency.toLowerCase() === currency.toLowerCase());\n        }\n\n        return [];\n    };\n\n    private handleFilterByState = (beneficiaries: Beneficiary[], filter: string | string[]) => {\n        if (beneficiaries.length) {\n            return beneficiaries.filter(item => filter.includes(item.state.toLowerCase()));\n        }\n\n        return [];\n    };\n\n    private handleSetCurrentAddress = (item: Beneficiary) => {\n        if (item.data) {\n            this.setState({\n                currentWithdrawalBeneficiary: item,\n                isOpenDropdown: false,\n            });\n            this.props.onChangeValue(item);\n        }\n    };\n\n    private handleSetCurrentAddressOnUpdate = (beneficiaries: Beneficiary[], currency: string) => {\n        const filteredByCurrency = this.handleFilterByCurrency(beneficiaries, currency);\n        let filteredByState = this.handleFilterByState(filteredByCurrency, 'active');\n\n        if (!filteredByState.length) {\n            filteredByState = this.handleFilterByState(filteredByCurrency, 'pending');\n        }\n\n        if (filteredByState.length) {\n            this.handleSetCurrentAddress(filteredByState[0]);\n        }\n    };\n\n    private handleToggleAddAddressModal = () => {\n        this.setState(prevState => ({\n            isOpenAddressModal: !prevState.isOpenAddressModal,\n        }));\n    };\n\n    private handleToggleConfirmationModal = () => {\n        this.setState(prevState => ({\n            isOpenConfirmationModal: !prevState.isOpenConfirmationModal,\n        }));\n    };\n\n    private handleToggleFailModal = () => {\n        this.setState(prevState => ({\n            isOpenFailModal: !prevState.isOpenFailModal,\n        }));\n    };\n\n    private handleToggleDropdown = () => {\n        this.setState(prevState => ({\n            isOpenDropdown: !prevState.isOpenDropdown,\n        }));\n    };\n\n    private handleToggleTip = () => {\n        this.setState(prevState => ({\n            isOpenTip: !prevState.isOpenTip,\n        }));\n    };\n\n    private translate = (id: string) => this.props.intl.formatMessage({ id });\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    beneficiaries: selectBeneficiaries(state),\n    beneficiariesAddData: selectBeneficiariesCreate(state),\n    memberLevels: selectMemberLevels(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n    userData: selectUserInfo(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    deleteAddress: payload => dispatch(beneficiariesDelete(payload)),\n    memberLevelsFetch: () => dispatch(memberLevelsFetch()),\n    beneficiariesCreateData: payload => dispatch(beneficiariesCreateData(payload)),\n});\n\n// tslint:disable-next-line:no-any\nexport const Beneficiaries = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesComponent) as any) as any;\n"]},"metadata":{},"sourceType":"module"}