{"ast":null,"code":"\"use strict\";\n\nvar codes = require(\"./codes.json\");\n\nvar registeredLocales = {};\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\n\nvar alpha2 = {},\n    alpha3 = {},\n    numeric = {},\n    invertedNumeric = {};\ncodes.forEach(function (codeInformation) {\n  var s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\nfunction formatNumericCode(code) {\n  return String('000' + (code ? code : '')).slice(-3);\n}\n\nfunction registerLocale(localeData) {\n  if (!localeData.locale) {\n    throw new TypeError('Missing localeData.locale');\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError('Missing localeData.countries');\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n}\n\nexports.registerLocale = registerLocale;\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\n\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\n\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\n\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\n\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\n\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\n\nexports.alpha3ToNumeric = alpha3ToNumeric;\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\n\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\n\nexports.alpha2ToNumeric = alpha2ToNumeric;\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\n\nfunction numericToAlpha3(code) {\n  var padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\n\nexports.numericToAlpha3 = numericToAlpha3;\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\n\nfunction numericToAlpha2(code) {\n  var padded = formatNumericCode(code);\n  return numeric[padded];\n}\n\nexports.numericToAlpha2 = numericToAlpha2;\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\n\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n\n  return undefined;\n}\n\nexports.toAlpha3 = toAlpha3;\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\n\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n\n  return undefined;\n}\n\nexports.toAlpha2 = toAlpha2;\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @param lang language for country name\n * @return name or undefined\n */\n\nexports.getName = function (code, lang) {\n  try {\n    var d = registeredLocales[lang.toLowerCase()];\n    return d[toAlpha2(code)];\n  } catch (err) {\n    return undefined;\n  }\n};\n/*\n * @param lang language for country names\n * @return Object of country code mapped to county name\n */\n\n\nexports.getNames = function (lang) {\n  var d = registeredLocales[lang.toLowerCase()];\n\n  if (d === undefined) {\n    return {};\n  }\n\n  return d;\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\n\n\nexports.getAlpha2Code = function (name, lang) {\n  try {\n    var p,\n        codenames = registeredLocales[lang.toLowerCase()];\n\n    for (p in codenames) {\n      if (codenames.hasOwnProperty(p)) {\n        if (codenames[p].toLowerCase() === name.toLowerCase()) {\n          return p;\n        }\n      }\n    }\n\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\n\n\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\n\n\nexports.getAlpha3Code = function (name, lang) {\n  var alpha2 = this.getAlpha2Code(name, lang);\n\n  if (alpha2) {\n    return this.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\n\n\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\n\n\nexports.getNumericCodes = function () {\n  return numeric;\n};\n/*\n * @return Array of supported languages\n */\n\n\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\n\n\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  var coerced = code.toString().toUpperCase();\n  return alpha3.hasOwnProperty(coerced) || alpha2.hasOwnProperty(coerced) || numeric.hasOwnProperty(coerced);\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/node_modules/i18n-iso-countries/index.js"],"names":["codes","require","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","forEach","codeInformation","s","formatNumericCode","code","String","slice","registerLocale","localeData","locale","TypeError","countries","exports","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","test","length","toUpperCase","undefined","toAlpha2","getName","lang","d","toLowerCase","err","getNames","getAlpha2Code","name","p","codenames","hasOwnProperty","getAlpha2Codes","getAlpha3Code","getAlpha3Codes","getNumericCodes","langs","Object","keys","isValid","coerced","toString"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar codes = require(\"./codes.json\");\nvar registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nvar alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function(codeInformation) {\n  var s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\nfunction formatNumericCode(code) {\n  return String('000'+(code ? code : '')).slice(-3);\n}\n\nfunction registerLocale(localeData) {\n  if (!localeData.locale) {\n    throw new TypeError('Missing localeData.locale');\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError('Missing localeData.countries');\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n}\n\nexports.registerLocale = registerLocale;\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  var padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  var padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if(code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if(code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @param lang language for country name\n * @return name or undefined\n */\nexports.getName = function(code, lang) {\n  try {\n    var d = registeredLocales[lang.toLowerCase()];\n    return d[toAlpha2(code)];\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param lang language for country names\n * @return Object of country code mapped to county name\n */\nexports.getNames = function(lang) {\n  var d = registeredLocales[lang.toLowerCase()];\n  if (d === undefined) {\n    return {};\n  }\n  return d;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function(name, lang) {\n  try {\n    var p, codenames = registeredLocales[lang.toLowerCase()];\n    for (p in codenames) {\n      if (codenames.hasOwnProperty(p)) {\n        if (codenames[p].toLowerCase() === name.toLowerCase()) {\n          return p;\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function() {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function(name, lang) {\n  var alpha2 = this.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return this.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function() {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function() {\n  return numeric;\n};\n\n/*\n * @return Array of supported languages\n */\nexports.langs = function() {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function(code) {\n  if (!code) {\n    return false;\n  }\n\n  var coerced = code.toString().toUpperCase();\n  return alpha3.hasOwnProperty(coerced) || alpha2.hasOwnProperty(coerced) ||\n    numeric.hasOwnProperty(coerced);\n};\n"]},"metadata":{},"sourceType":"script"}