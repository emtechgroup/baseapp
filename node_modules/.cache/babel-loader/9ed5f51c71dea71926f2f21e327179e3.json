{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/screens/ConfirmScreen/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { kycSteps } from '../../api';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { Address, Documents, Identity, Phone } from '../../containers';\nimport { getVerificationStep, setDocumentTitle } from '../../helpers';\nimport { labelFetch as _labelFetch, selectLabelData, selectSidebarState } from '../../modules';\n\nvar ConfirmComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConfirmComponent, _React$Component);\n\n  var _super = _createSuper(ConfirmComponent);\n\n  function ConfirmComponent() {\n    var _this;\n\n    _classCallCheck(this, ConfirmComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderVerificationStep = function (step) {\n      switch (step) {\n        case 'phone':\n          return /*#__PURE__*/React.createElement(Phone, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }\n          });\n\n        case 'profile':\n          return /*#__PURE__*/React.createElement(Identity, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }\n          });\n\n        case 'document':\n          return /*#__PURE__*/React.createElement(Documents, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }\n          });\n\n        case 'address':\n          return /*#__PURE__*/React.createElement(Address, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }\n          });\n\n        default:\n          return 'Something went wrong';\n      }\n    };\n\n    _this.handleGetVerificationStep = function () {\n      var labels = _this.props.labels;\n      return getVerificationStep(labels);\n    };\n\n    _this.handleCheckUserLabels = function (labels) {\n      var pendingLabelExists = Boolean(labels.find(function (label) {\n        return kycSteps().includes(label.key) && ['pending', 'drafted', 'submitted'].includes(label.value) && label.scope === 'private';\n      }));\n      var passedSteps = kycSteps().filter(function (step) {\n        return labels.find(function (label) {\n          return step === label.key && label.value === 'verified' && label.scope === 'private';\n        });\n      });\n\n      if (pendingLabelExists || kycSteps().length === passedSteps.length) {\n        _this.props.history.push('/profile');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ConfirmComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var labels = this.props.labels;\n      setDocumentTitle('Confirm');\n      this.props.labelFetch();\n\n      if (labels.length) {\n        this.handleCheckUserLabels(labels);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var labels = this.props.labels;\n\n      if (labels.length && JSON.stringify(labels) !== JSON.stringify(prevProps.labels)) {\n        this.handleCheckUserLabels(labels);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          history = _this$props.history,\n          isSidebarOpen = _this$props.isSidebarOpen;\n      var step = this.handleGetVerificationStep();\n      var containerClass = classnames('pg-container pg-confirm', {\n        'pg-container--open': isSidebarOpen\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: containerClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LogoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pg-confirm__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.confirm.title.\".concat(step),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CrossIcon, {\n        className: \"pg-confirm__title__icon\",\n        onClick: function onClick(e) {\n          return history.push('/profile');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, this.renderVerificationStep(step)));\n    }\n  }]);\n\n  return ConfirmComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSidebarOpen: selectSidebarState(state),\n    labels: selectLabelData(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    labelFetch: function labelFetch() {\n      return dispatch(_labelFetch());\n    }\n  };\n};\n\nexport var ConfirmScreen = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(ConfirmComponent); // tslint:disable-line","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/screens/ConfirmScreen/index.tsx"],"names":["classnames","React","FormattedMessage","injectIntl","connect","withRouter","compose","kycSteps","CrossIcon","LogoIcon","Address","Documents","Identity","Phone","getVerificationStep","setDocumentTitle","labelFetch","selectLabelData","selectSidebarState","ConfirmComponent","renderVerificationStep","step","handleGetVerificationStep","labels","props","handleCheckUserLabels","pendingLabelExists","Boolean","find","label","includes","key","value","scope","passedSteps","filter","length","history","push","prevProps","JSON","stringify","isSidebarOpen","containerClass","e","Component","mapStateToProps","state","mapDispatchToProps","dispatch","ConfirmScreen"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { kycSteps } from '../../api';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { Address, Documents, Identity, Phone } from '../../containers';\nimport { getVerificationStep, setDocumentTitle } from '../../helpers';\nimport {\n    Label,\n    labelFetch,\n    RootState,\n    selectLabelData,\n    selectSidebarState,\n} from '../../modules';\n\ninterface ReduxProps {\n    isSidebarOpen: boolean;\n    labels: Label[];\n}\n\ninterface DispatchProps {\n    labelFetch: typeof labelFetch;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nclass ConfirmComponent extends React.Component<Props> {\n    public componentDidMount() {\n        const { labels } = this.props;\n        setDocumentTitle('Confirm');\n        this.props.labelFetch();\n\n        if (labels.length) {\n            this.handleCheckUserLabels(labels);\n        }\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        const { labels } = this.props;\n\n        if (labels.length && JSON.stringify(labels) !== JSON.stringify(prevProps.labels)) {\n            this.handleCheckUserLabels(labels);\n        }\n    }\n\n    public renderVerificationStep = (step: string) => {\n        switch (step) {\n            case 'phone':    return <Phone />;\n            case 'profile':  return <Identity />;\n            case 'document': return <Documents />;\n            case 'address':  return <Address />;\n            default: return 'Something went wrong';\n        }\n    };\n\n    public render() {\n        const { history, isSidebarOpen } = this.props;\n        const step = this.handleGetVerificationStep();\n\n        const containerClass = classnames('pg-container pg-confirm', {\n            'pg-container--open': isSidebarOpen,\n        });\n\n        return (\n            <div className={containerClass}>\n                <div className=\"pg-confirm__logo\">\n                    <LogoIcon />\n                </div>\n                <h3 className=\"pg-confirm__title\">\n                    <FormattedMessage id={`page.confirm.title.${step}`} />\n                    <CrossIcon\n                        className=\"pg-confirm__title__icon\"\n                        onClick={e => history.push('/profile')}\n                    />\n                </h3>\n                <div className=\"pg-confirm__content\">\n                    {this.renderVerificationStep(step)}\n                </div>\n            </div>\n        );\n    }\n\n    private handleGetVerificationStep = (): string => {\n        const { labels } = this.props;\n\n        return getVerificationStep(labels);\n    };\n\n    private handleCheckUserLabels = (labels: Label[]) => {\n        const pendingLabelExists = Boolean(labels.find(label => kycSteps().includes(label.key) && ['pending', 'drafted', 'submitted'].includes(label.value) && label.scope === 'private'));\n        const passedSteps = kycSteps().filter((step: string) => labels.find(label => step === label.key && label.value === 'verified' && label.scope === 'private'));\n\n        if (pendingLabelExists || (kycSteps().length === passedSteps.length)) {\n            this.props.history.push('/profile');\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    isSidebarOpen: selectSidebarState(state),\n    labels: selectLabelData(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    labelFetch: () => dispatch(labelFetch()),\n});\n\nexport const ConfirmScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmComponent) as any; // tslint:disable-line\n"]},"metadata":{},"sourceType":"module"}