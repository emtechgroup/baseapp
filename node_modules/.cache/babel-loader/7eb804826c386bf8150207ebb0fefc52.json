{"ast":null,"code":"import _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/RecentTrades/Yours.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Decimal, Table } from '../../components';\nimport { localeDate, setTradesType } from '../../helpers';\nimport { fetchHistory as _fetchHistory, selectCurrentMarket, selectCurrentPrice, selectHistory, selectHistoryLoading, setCurrentPrice as _setCurrentPrice } from '../../modules';\nimport { handleHighlightValue } from './Market';\nvar timeFrom = String(Math.floor((Date.now() - 1000 * 60 * 60 * 24) / 1000));\n\nvar RecentTradesYoursContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(RecentTradesYoursContainer, _React$Component);\n\n  var _super = _createSuper(RecentTradesYoursContainer);\n\n  function RecentTradesYoursContainer() {\n    var _this;\n\n    _classCallCheck(this, RecentTradesYoursContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderContent = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        header: _this.getHeaders(),\n        data: _this.retrieveData(),\n        onSelect: _this.handleOnSelect,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.getHeaders = function () {\n      return [_this.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.time'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.amount'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.trade.header.recentTrades.content.price'\n      })];\n    };\n\n    _this.retrieveData = function () {\n      var list = _this.props.list;\n      return _toConsumableArray(list).length > 0 ? _toConsumableArray(list).map(_this.renderRow) : [[[''], _this.props.intl.formatMessage({\n        id: 'page.noDataToShow'\n      })]];\n    };\n\n    _this.renderRow = function (item, i) {\n      var _this$props = _this.props,\n          currentMarket = _this$props.currentMarket,\n          list = _this$props.list;\n      var id = item.id,\n          created_at = item.created_at,\n          price = item.price,\n          amount = item.amount,\n          side = item.side;\n      var priceFixed = currentMarket ? currentMarket.price_precision : 0;\n      var amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n      var orderSide = side === 'sell' ? 'sell' : 'buy';\n      var higlightedDate = handleHighlightValue(String(localeDate(_toConsumableArray(list)[i - 1] ? _toConsumableArray(list)[i - 1].created_at : '', 'time')), String(localeDate(created_at, 'time')));\n      return [/*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: setTradesType(orderSide).color\n        },\n        key: id,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, higlightedDate), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: setTradesType(orderSide).color\n        },\n        key: id,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: amountFixed,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, amount)), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: setTradesType(orderSide).color\n        },\n        key: id,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: priceFixed,\n        thousSep: \",\",\n        prevValue: _toConsumableArray(list)[i - 1] ? _toConsumableArray(list)[i - 1].price : 0,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, price))];\n    };\n\n    _this.handleOnSelect = function (index) {\n      var _this$props2 = _this.props,\n          list = _this$props2.list,\n          currentPrice = _this$props2.currentPrice;\n      var priceToSet = list[Number(index)] ? Number(list[Number(index)].price) : 0;\n\n      if (currentPrice !== priceToSet) {\n        _this.props.setCurrentPrice(priceToSet);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RecentTradesYoursContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentMarket = this.props.currentMarket;\n\n      if (currentMarket) {\n        this.props.fetchHistory({\n          type: 'trades',\n          page: 0,\n          time_from: timeFrom,\n          market: currentMarket.id\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (next.currentMarket && this.props.currentMarket !== next.currentMarket) {\n        this.props.fetchHistory({\n          type: 'trades',\n          page: 0,\n          time_from: timeFrom,\n          market: next.currentMarket.id\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return JSON.stringify(nextProps.list) !== JSON.stringify(this.props.list);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fetching = this.props.fetching;\n      var className = classnames({\n        'cr-tab-content__noData': this.retrieveData()[0][1] === this.props.intl.formatMessage({\n          id: 'page.noDataToShow'\n        })\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, fetching ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-tab-content-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 69\n        }\n      })) : this.renderContent());\n    }\n  }]);\n\n  return RecentTradesYoursContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: selectHistory(state),\n    fetching: selectHistoryLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchHistory: function fetchHistory(params) {\n      return dispatch(_fetchHistory(params));\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\n\nexport var RecentTradesYours = compose(injectIntl, connect(mapStateToProps, mapDispatchToProps))(RecentTradesYoursContainer); // tslint:disable-line","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/RecentTrades/Yours.tsx"],"names":["classnames","React","Spinner","injectIntl","connect","compose","Decimal","Table","localeDate","setTradesType","fetchHistory","selectCurrentMarket","selectCurrentPrice","selectHistory","selectHistoryLoading","setCurrentPrice","handleHighlightValue","timeFrom","String","Math","floor","Date","now","RecentTradesYoursContainer","renderContent","getHeaders","retrieveData","handleOnSelect","props","intl","formatMessage","id","list","length","map","renderRow","item","i","currentMarket","created_at","price","amount","side","priceFixed","price_precision","amountFixed","amount_precision","orderSide","higlightedDate","color","index","currentPrice","priceToSet","Number","type","page","time_from","market","next","nextProps","JSON","stringify","fetching","className","Component","mapStateToProps","state","mapDispatchToProps","dispatch","params","payload","RecentTradesYours"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { Decimal, Table } from '../../components';\nimport { localeDate, setTradesType } from '../../helpers';\nimport {\n    fetchHistory,\n    Market,\n    RootState,\n    selectCurrentMarket,\n    selectCurrentPrice,\n    selectHistory,\n    selectHistoryLoading,\n    setCurrentPrice,\n    WalletHistoryList,\n} from '../../modules';\nimport { handleHighlightValue } from './Market';\n\ninterface ReduxProps {\n    list: WalletHistoryList;\n    fetching: boolean;\n    currentMarket: Market | undefined;\n    currentPrice: number | undefined;\n}\n\ninterface DispatchProps {\n    fetchHistory: typeof fetchHistory;\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nconst timeFrom = String(Math.floor((Date.now() - 1000 * 60 * 60 * 24) / 1000));\n\nclass RecentTradesYoursContainer extends React.Component<Props> {\n\n    public componentDidMount() {\n        const { currentMarket } = this.props;\n        if (currentMarket) {\n            this.props.fetchHistory({ type: 'trades', page: 0, time_from: timeFrom, market: currentMarket.id} as any);\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (next.currentMarket && this.props.currentMarket !== next.currentMarket) {\n            this.props.fetchHistory({ type: 'trades', page: 0, time_from: timeFrom, market: next.currentMarket.id });\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: Props) {\n        return JSON.stringify(nextProps.list) !== JSON.stringify(this.props.list);\n    }\n\n    public render() {\n        const { fetching } = this.props;\n        const className = classnames({\n            'cr-tab-content__noData': this.retrieveData()[0][1] === this.props.intl.formatMessage({ id: 'page.noDataToShow' }),\n        });\n\n        return (\n            <div className={className}>\n                {fetching ? <div className=\"cr-tab-content-loading\"><Spinner animation=\"border\" variant=\"primary\" /></div> : this.renderContent()}\n            </div>\n        );\n    }\n\n    public renderContent = () => {\n        return (\n            <React.Fragment>\n                <Table\n                    header={this.getHeaders()}\n                    data={this.retrieveData()}\n                    onSelect={this.handleOnSelect}\n                />\n            </React.Fragment>\n        );\n    };\n\n    private getHeaders = () => {\n        return [\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.time' }),\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.amount' }),\n            this.props.intl.formatMessage({ id: 'page.body.trade.header.recentTrades.content.price' }),\n        ];\n    };\n\n    private retrieveData = () => {\n        const { list } = this.props;\n\n        return [...list].length > 0\n            ? [...list].map(this.renderRow)\n            : [[[''], this.props.intl.formatMessage({ id: 'page.noDataToShow' })]];\n    };\n\n    private renderRow = (item, i) => {\n        const { currentMarket, list } = this.props;\n        const { id, created_at, price, amount, side } = item;\n        const priceFixed = currentMarket ? currentMarket.price_precision : 0;\n        const amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n        const orderSide = side === 'sell' ?  'sell' : 'buy';\n        const higlightedDate = handleHighlightValue(String(localeDate([...list][i - 1] ? [...list][i - 1].created_at : '', 'time')), String(localeDate(created_at, 'time')));\n\n        return [\n            <span style={{ color: setTradesType(orderSide).color }} key={id}>{higlightedDate}</span>,\n            <span style={{ color: setTradesType(orderSide).color }} key={id}>\n                <Decimal key={id} fixed={amountFixed} thousSep=\",\">{amount}</Decimal>\n            </span>,\n            <span style={{ color: setTradesType(orderSide).color }} key={id}>\n                <Decimal key={id} fixed={priceFixed} thousSep=\",\" prevValue={[...list][i - 1] ? [...list][i - 1].price : 0}>{price}</Decimal>\n            </span>,\n        ];\n    };\n\n    private handleOnSelect = (index: string) => {\n        const { list, currentPrice } = this.props;\n        const priceToSet = list[Number(index)] ? Number(list[Number(index)].price) : 0;\n\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    list: selectHistory(state),\n    fetching: selectHistoryLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        fetchHistory: params => dispatch(fetchHistory(params)),\n        setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    });\n\nexport const RecentTradesYours = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(RecentTradesYoursContainer) as any; // tslint:disable-line\n"]},"metadata":{},"sourceType":"module"}