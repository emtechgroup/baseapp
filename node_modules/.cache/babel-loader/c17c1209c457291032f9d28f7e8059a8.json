{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(ordersHistorySaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { userOrdersHistoryData, userOrdersHistoryError } from '../actions';\nvar ordersOptions = {\n  apiVersion: 'peatio'\n};\nexport function ordersHistorySaga(action) {\n  var _action$payload, pageIndex, limit, type, params, data, nextPageExists, checkData;\n\n  return _regeneratorRuntime.wrap(function ordersHistorySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, pageIndex = _action$payload.pageIndex, limit = _action$payload.limit, type = _action$payload.type;\n          params = \"\".concat(type === 'all' ? '' : '&state=wait');\n          _context.next = 5;\n          return call(API.get(ordersOptions), \"/market/orders?page=\".concat(pageIndex + 1, \"&limit=\").concat(limit).concat(params));\n\n        case 5:\n          data = _context.sent;\n          nextPageExists = false;\n\n          if (!(data.length === limit)) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.next = 10;\n          return call(API.get(ordersOptions), \"/market/orders?page=\".concat((pageIndex + 1) * limit + 1, \"&limit=\", 1).concat(params));\n\n        case 10:\n          checkData = _context.sent;\n\n          if (checkData.length === 1) {\n            nextPageExists = true;\n          }\n\n        case 12:\n          _context.next = 14;\n          return put(userOrdersHistoryData({\n            list: data,\n            nextPageExists,\n            pageIndex\n          }));\n\n        case 14:\n          _context.next = 20;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 20;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: userOrdersHistoryError\n            }\n          }));\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 16]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/ordersHistory/sagas/ordersHistorySaga.ts"],"names":["ordersHistorySaga","call","put","sendError","API","userOrdersHistoryData","userOrdersHistoryError","ordersOptions","apiVersion","action","payload","pageIndex","limit","type","params","get","data","nextPageExists","length","checkData","list","error","processingType","extraOptions","actionError"],"mappings":";;oDASiBA,iB;;AATjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAAsF,YAAtF;AAEA,IAAMC,aAA6B,GAAG;AAClCC,EAAAA,UAAU,EAAE;AADsB,CAAtC;AAIA,OAAO,SAAUR,iBAAV,CAA4BS,MAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEoCA,MAAM,CAACC,OAF3C,EAESC,SAFT,mBAESA,SAFT,EAEoBC,KAFpB,mBAEoBA,KAFpB,EAE2BC,IAF3B,mBAE2BA,IAF3B;AAGOC,UAAAA,MAHP,aAGmBD,IAAI,KAAK,KAAT,GAAiB,EAAjB,GAAsB,aAHzC;AAAA;AAIc,iBAAMZ,IAAI,CAACG,GAAG,CAACW,GAAJ,CAAQR,aAAR,CAAD,gCAAgDI,SAAS,GAAG,CAA5D,oBAAuEC,KAAvE,SAA+EE,MAA/E,EAAV;;AAJd;AAIOE,UAAAA,IAJP;AAKKC,UAAAA,cALL,GAKsB,KALtB;;AAAA,gBAOKD,IAAI,CAACE,MAAL,KAAgBN,KAPrB;AAAA;AAAA;AAAA;;AAAA;AAQuB,iBAAMX,IAAI,CAACG,GAAG,CAACW,GAAJ,CAAQR,aAAR,CAAD,gCAAgD,CAACI,SAAS,GAAG,CAAb,IAAkBC,KAAlB,GAA0B,CAA1E,aAAqF,CAArF,SAAyFE,MAAzF,EAAV;;AARvB;AAQWK,UAAAA,SARX;;AAUK,cAAIA,SAAS,CAACD,MAAV,KAAqB,CAAzB,EAA4B;AACxBD,YAAAA,cAAc,GAAG,IAAjB;AACH;;AAZN;AAAA;AAeC,iBAAMf,GAAG,CAACG,qBAAqB,CAAC;AAAEe,YAAAA,IAAI,EAAEJ,IAAR;AAAcC,YAAAA,cAAd;AAA8BN,YAAAA;AAA9B,WAAD,CAAtB,CAAT;;AAfD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiBC,iBAAMT,GAAG,CAACC,SAAS,CAAC;AAChBkB,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAElB;AADH;AAHE,WAAD,CAAV,CAAT;;AAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { userOrdersHistoryData, userOrdersHistoryError, UserOrdersHistoryFetch } from '../actions';\n\nconst ordersOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* ordersHistorySaga(action: UserOrdersHistoryFetch) {\n    try {\n        const { pageIndex, limit, type } = action.payload;\n        const params = `${type === 'all' ? '' : '&state=wait'}`;\n        const data = yield call(API.get(ordersOptions), `/market/orders?page=${pageIndex + 1}&limit=${limit}${params}`);\n        let nextPageExists = false;\n\n        if (data.length === limit) {\n            const checkData = yield call(API.get(ordersOptions), `/market/orders?page=${(pageIndex + 1) * limit + 1}&limit=${1}${params}`);\n\n            if (checkData.length === 1) {\n                nextPageExists = true;\n            }\n        }\n\n        yield put(userOrdersHistoryData({ list: data, nextPageExists, pageIndex }));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: userOrdersHistoryError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}