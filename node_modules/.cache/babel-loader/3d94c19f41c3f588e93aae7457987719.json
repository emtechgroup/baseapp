{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CONFIGS_DATA, CONFIGS_ERROR, CONFIGS_FETCH } from './constants';\nvar defaultConfigs = {\n  captcha_type: 'none',\n  password_min_entropy: 0\n};\nexport var initialConfigsState = {\n  loading: false,\n  success: false,\n  data: defaultConfigs\n};\nexport var configsReducer = function configsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialConfigsState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONFIGS_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        success: false\n      });\n\n    case CONFIGS_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        success: true,\n        data: action.payload\n      });\n\n    case CONFIGS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        success: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/configs/reducer.ts"],"names":["CONFIGS_DATA","CONFIGS_ERROR","CONFIGS_FETCH","defaultConfigs","captcha_type","password_min_entropy","initialConfigsState","loading","success","data","configsReducer","state","action","type","payload","error"],"mappings":";AAEA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,aAHJ,QAIO,aAJP;AAcA,IAAMC,cAAuB,GAAG;AAC5BC,EAAAA,YAAY,EAAE,MADc;AAE5BC,EAAAA,oBAAoB,EAAE;AAFM,CAAhC;AAKA,OAAO,IAAMC,mBAAiC,GAAG;AAC7CC,EAAAA,OAAO,EAAE,KADoC;AAE7CC,EAAAA,OAAO,EAAE,KAFoC;AAG7CC,EAAAA,IAAI,EAAEN;AAHuC,CAA1C;AAMP,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAwD;AAAA,MAAvDC,KAAuD,uEAA/CL,mBAA+C;AAAA,MAA1BM,MAA0B;;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,aAAL;AACI,6CACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKR,YAAL;AACI,6CACOW,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,IAHb;AAIIC,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAJjB;;AAMJ,SAAKb,aAAL;AACI,6CACOU,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIO,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAJlB;;AAMJ;AACI,aAAOJ,KAAP;AAtBR;AAwBH,CAzBM","sourcesContent":["import { CommonError, CommonState } from '../../types';\nimport { ConfigsAction } from './actions';\nimport {\n    CONFIGS_DATA,\n    CONFIGS_ERROR,\n    CONFIGS_FETCH,\n} from './constants';\nimport { Configs } from './types';\n\nexport interface ConfigsState extends CommonState {\n    data: Configs;\n    loading: boolean;\n    success: boolean;\n    error?: CommonError;\n}\n\nconst defaultConfigs: Configs = {\n    captcha_type: 'none',\n    password_min_entropy: 0,\n};\n\nexport const initialConfigsState: ConfigsState = {\n    loading: false,\n    success: false,\n    data: defaultConfigs,\n};\n\nexport const configsReducer = (state = initialConfigsState, action: ConfigsAction) => {\n    switch (action.type) {\n        case CONFIGS_FETCH:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n            };\n        case CONFIGS_DATA:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n            };\n        case CONFIGS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}