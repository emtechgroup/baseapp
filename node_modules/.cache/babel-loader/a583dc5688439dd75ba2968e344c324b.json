{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signInSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { changeLanguage } from '../../../public/i18n';\nimport { userData } from '../../profile';\nimport { signInData, signInError, signInRequire2FA, signUpRequireVerification } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function signInSaga(action) {\n  var user;\n  return _regeneratorRuntime.wrap(function signInSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(sessionsConfig), '/identity/sessions', action.payload);\n\n        case 3:\n          user = _context.sent;\n\n          if (!(user.data && JSON.parse(user.data).language)) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 7;\n          return put(changeLanguage(JSON.parse(user.data).language));\n\n        case 7:\n          _context.next = 9;\n          return put(userData({\n            user\n          }));\n\n        case 9:\n          if (!(user.state === 'pending')) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 12;\n          return put(signUpRequireVerification({\n            requireVerification: true\n          }));\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          localStorage.setItem('csrfToken', user.csrf_token);\n          _context.next = 17;\n          return put(signInRequire2FA({\n            require2fa: user.otp\n          }));\n\n        case 17:\n          _context.next = 19;\n          return put(signInData());\n\n        case 19:\n          _context.next = 32;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!(_context.t0.code === 401 && _context.t0.message.indexOf('identity.session.missing_otp') > -1)) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 26;\n          return put(signInRequire2FA({\n            require2fa: true\n          }));\n\n        case 26:\n          _context.next = 28;\n          return put(signInData());\n\n        case 28:\n          _context.next = 32;\n          break;\n\n        case 30:\n          _context.next = 32;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: signInError\n            }\n          }));\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 21]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/auth/sagas/signInSaga.ts"],"names":["signInSaga","call","put","sendError","API","changeLanguage","userData","signInData","signInError","signInRequire2FA","signUpRequireVerification","sessionsConfig","apiVersion","action","post","payload","user","data","JSON","parse","language","state","requireVerification","localStorage","setItem","csrf_token","require2fa","otp","code","message","indexOf","error","processingType","extraOptions","actionError"],"mappings":";;oDAiBiBA,U;;AAjBjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SACIC,UADJ,EAEIC,WAFJ,EAIIC,gBAJJ,EAKIC,yBALJ,QAMO,YANP;AAQA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUZ,UAAV,CAAqBa,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMZ,IAAI,CAACG,GAAG,CAACU,IAAJ,CAASH,cAAT,CAAD,EAA2B,oBAA3B,EAAiDE,MAAM,CAACE,OAAxD,CAAV;;AAFd;AAEOC,UAAAA,IAFP;;AAAA,gBAGKA,IAAI,CAACC,IAAL,IAAaC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,IAAhB,EAAsBG,QAHxC;AAAA;AAAA;AAAA;;AAAA;AAIK,iBAAMlB,GAAG,CAACG,cAAc,CAACa,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACC,IAAhB,EAAsBG,QAAvB,CAAf,CAAT;;AAJL;AAAA;AAMC,iBAAMlB,GAAG,CAACI,QAAQ,CAAC;AAAEU,YAAAA;AAAF,WAAD,CAAT,CAAT;;AAND;AAAA,gBAQKA,IAAI,CAACK,KAAL,KAAe,SARpB;AAAA;AAAA;AAAA;;AAAA;AASK,iBAAMnB,GAAG,CAACQ,yBAAyB,CAAC;AAAEY,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAA1B,CAAT;;AATL;AAAA;AAAA;;AAAA;AAWKC,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCR,IAAI,CAACS,UAAvC;AAXL;AAYK,iBAAMvB,GAAG,CAACO,gBAAgB,CAAC;AAAEiB,YAAAA,UAAU,EAAEV,IAAI,CAACW;AAAnB,WAAD,CAAjB,CAAT;;AAZL;AAAA;AAcC,iBAAMzB,GAAG,CAACK,UAAU,EAAX,CAAT;;AAdD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,gBAgBK,YAAMqB,IAAN,KAAe,GAAf,IAAsB,YAAMC,OAAN,CAAcC,OAAd,CAAsB,8BAAtB,IAAwD,CAAC,CAhBpF;AAAA;AAAA;AAAA;;AAAA;AAiBK,iBAAM5B,GAAG,CAACO,gBAAgB,CAAC;AAAEiB,YAAAA,UAAU,EAAE;AAAd,WAAD,CAAjB,CAAT;;AAjBL;AAAA;AAkBK,iBAAMxB,GAAG,CAACK,UAAU,EAAX,CAAT;;AAlBL;AAAA;AAAA;;AAAA;AAAA;AAoBG,iBAAML,GAAG,CAACC,SAAS,CAAC;AAChB4B,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAE1B;AADH;AAHE,WAAD,CAAV,CAAT;;AApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { changeLanguage } from '../../../public/i18n';\nimport { userData } from '../../profile';\nimport {\n    signInData,\n    signInError,\n    SignInFetch,\n    signInRequire2FA,\n    signUpRequireVerification,\n} from '../actions';\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* signInSaga(action: SignInFetch) {\n    try {\n        const user = yield call(API.post(sessionsConfig), '/identity/sessions', action.payload);\n        if (user.data && JSON.parse(user.data).language) {\n            yield put(changeLanguage(JSON.parse(user.data).language));\n        }\n        yield put(userData({ user }));\n\n        if (user.state === 'pending') {\n            yield put(signUpRequireVerification({ requireVerification: true }));\n        } else {\n            localStorage.setItem('csrfToken', user.csrf_token);\n            yield put(signInRequire2FA({ require2fa: user.otp }));\n        }\n        yield put(signInData());\n    } catch (error) {\n        if (error.code === 401 && error.message.indexOf('identity.session.missing_otp') > -1) {\n            yield put(signInRequire2FA({ require2fa: true }));\n            yield put(signInData());\n        } else {\n          yield put(sendError({\n              error: error,\n              processingType: 'alert',\n              extraOptions: {\n                  actionError: signInError,\n              },\n          }));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}