{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(forgotPasswordSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { alertPush, sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { forgotPasswordError, forgotPasswordSuccess } from '../actions';\nvar forgotPasswordConfig = {\n  apiVersion: 'barong'\n};\nexport function forgotPasswordSaga(action) {\n  return _regeneratorRuntime.wrap(function forgotPasswordSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(forgotPasswordConfig), '/identity/users/password/generate_code', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(forgotPasswordSuccess());\n\n        case 5:\n          _context.next = 7;\n          return put(alertPush({\n            message: ['success.password.forgot'],\n            type: 'success'\n          }));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: forgotPasswordError\n            }\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/password/sagas/forgotPasswordSaga.ts"],"names":["forgotPasswordSaga","call","put","alertPush","sendError","API","forgotPasswordError","forgotPasswordSuccess","forgotPasswordConfig","apiVersion","action","post","payload","message","type","error","processingType","extraOptions","actionError"],"mappings":";;oDASiBA,kB;;AATjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,mBAAT,EAAmDC,qBAAnD,QAAgF,YAAhF;AAEA,IAAMC,oBAAoC,GAAG;AACzCC,EAAAA,UAAU,EAAE;AAD6B,CAA7C;AAIA,OAAO,SAAUT,kBAAV,CAA6BU,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMT,IAAI,CAACI,GAAG,CAACM,IAAJ,CAASH,oBAAT,CAAD,EAAiC,wCAAjC,EAA2EE,MAAM,CAACE,OAAlF,CAAV;;AAFD;AAAA;AAGC,iBAAMV,GAAG,CAACK,qBAAqB,EAAtB,CAAT;;AAHD;AAAA;AAIC,iBAAML,GAAG,CAACC,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,CAAC,yBAAD,CAAV;AAAuCC,YAAAA,IAAI,EAAE;AAA7C,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMZ,GAAG,CAACE,SAAS,CAAC;AAChBW,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEZ;AADH;AAHE,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { alertPush, sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { forgotPasswordError, ForgotPasswordFetch, forgotPasswordSuccess } from '../actions';\n\nconst forgotPasswordConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* forgotPasswordSaga(action: ForgotPasswordFetch) {\n    try {\n        yield call(API.post(forgotPasswordConfig), '/identity/users/password/generate_code', action.payload);\n        yield put(forgotPasswordSuccess());\n        yield put(alertPush({message: ['success.password.forgot'], type: 'success'}));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: forgotPasswordError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}