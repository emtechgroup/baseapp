{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _inputCore = require('input-core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * React-MaskInput component\n * Params:\n * `mask`: String. Format:\n *   0 — any number 0-9\n *   * — any symbol\n *   a — A-Z, a-z\n *   q — \"q\" letter, 2 — \"2\" letter etc.\n *   \\a — \"a\" letter\n * default is undefined\n *\n * [function] `reformat`: user function, if you want use custom reformat logic. It's userfull for numeric inputs.\n * If reformat defined mask'll be ignored. Reformat function must receive object with several fields:\n * function reformat({data: data, selection: {start, end}, input}) {\n *     // realisation\n *\n *     return {\n *         [any] value: value that store and calling in input core funcitons (such as reformat). value may have any format,\n *         [String] visibleValue: value that displayed to user in input if showMask is false,\n *         [String] maskedValue: value that  displayed to user in input if showMask is true,\n *         [{[integer] start, [integer] end}] selection: {start, end} — new selection range\n *     }\n * }\n *\n * if `reformat` and `mask` is undefined, input allow to enter any values.\n *\n * You can define custom mask by passing `maskFormat`. This prop must be an array,\n * each object in array have several fields:\n * str: matched char for mask\n * regexp: validation rule as regexp\n * type: special\n *\n * `maskChar`: Character to cover unfilled editable parts of mask. Default value is ''.\n * `maskString`: String to cover unfilled editable parts of mask. Default is undefined. If maskString define maskChar ignored.\n *\n * showMask: show mask in input. It's possible only if mask have not cyclic. Default value = false\n * alwaysShowMask: show mask when input inactive\n *\n * Callbacks:\n *   onValueChange(event). event is:\n *     unformattedValue: unformatted value,\n *     value: visible value\n *   getReference: callback to get input ref\n * All other props'll passed to input directly\n */\n\nvar MaskInput = function (_Component) {\n  _inherits(MaskInput, _Component);\n\n  function MaskInput(props, context) {\n    _classCallCheck(this, MaskInput);\n\n    var _this = _possibleConstructorReturn(this, (MaskInput.__proto__ || Object.getPrototypeOf(MaskInput)).call(this, props, context));\n\n    _this.showValue = function () {\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.refs.input.value = _this.input.getMaskedValue();\n        return;\n      }\n\n      _this.refs.input.value = _this.input.getVisibleValue();\n    };\n\n    _this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n\n      var selection = _this.input.getSelection();\n\n      _this.refs.input.setSelectionRange(selection.start, selection.end);\n\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      }; // For android\n\n\n      raf(function () {\n        return _this.refs.input.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    _this.onPaste = function (e) {\n      e.preventDefault();\n\n      _this.getSelection(); // getData value needed for IE also works in FF & Chrome\n\n\n      _this.input.paste(e.clipboardData.getData('Text'));\n\n      _this.showValue(); // Timeout needed for IE\n\n\n      setTimeout(_this.setSelection, 0);\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onChange = function (e) {\n      var currentValue = void 0;\n\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getMaskedValue();\n      } else {\n        currentValue = _this.input.getVisibleValue();\n      } // fix conflict by update value in mask model\n\n\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n\n        _this.input.setValue(e.target.value);\n\n        _this.showValue();\n\n        setTimeout(_this.setSelection, 0);\n      }\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n\n      _this.getSelection();\n\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n\n      _this.showValue();\n\n      _this.setSelection();\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n\n        _this.getSelection();\n\n        _this.input.removePreviosOrSelected();\n\n        _this.showValue();\n\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n\n        _this.getSelection();\n\n        _this.input.removeNextOrSelected();\n\n        _this.showValue();\n\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n    };\n\n    _this.onFocus = function (e) {\n      _this.canSetSelection = true;\n      _this.props.onFocus && _this.props.onFocus(e);\n    };\n\n    _this.onBlur = function (e) {\n      _this.canSetSelection = false;\n      _this.props.onBlur && _this.props.onBlur(e);\n    };\n\n    _this.input = (0, _inputCore.createInput)({\n      value: props.value || props.defaultValue || '',\n      reformat: props.reformat,\n      maskString: props.maskString,\n      maskChar: props.maskChar || _inputCore.defaults.maskChar,\n      mask: props.mask || _inputCore.defaults.mask,\n      maskFormat: props.maskFormat || _inputCore.defaults.maskFormat\n    });\n    _this.state = {\n      showMask: props.alwaysShowMask || props.showMask\n    };\n\n    _this.applyValue = function (value) {\n      _this.input.setValue(value);\n\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.refs.input.value = _this.input.getMaskedValue();\n        return;\n      }\n\n      _this.refs.input.value = _this.input.getVisibleValue();\n    };\n\n    return _this;\n  }\n\n  _createClass(MaskInput, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var updated = false;\n\n      if (this.props.alwaysShowMask !== nextProps.alwaysShowMask || this.props.showMask !== nextProps.showMask) {\n        this.setState({\n          showMask: nextProps.alwaysShowMask || nextProps.showMask\n        });\n      }\n\n      if (nextProps.reformat !== this.props.reformat) {\n        this.input.setReformat(nextProps.reformat);\n        updated = true;\n      }\n\n      if (nextProps.maskFormat && nextProps.maskFormat !== this.props.maskFormat) {\n        this.input.setMaskFormat(nextProps.maskFormat);\n        updated = true;\n      }\n\n      if (nextProps.mask !== this.props.mask) {\n        this.input.setMask(nextProps.mask);\n        updated = true;\n      }\n\n      if (nextProps.maskString !== this.props.maskString) {\n        this.input.setMaskString(nextProps.maskString);\n      }\n\n      if (nextProps.maskChar !== this.props.maskChar) {\n        this.input.setMaskChar(nextProps.maskChar);\n        updated = true;\n      }\n\n      if (nextProps.value !== this.props.value) {\n        this.input.setValue(nextProps.value);\n        updated = true;\n      }\n\n      if (updated) {\n        if (this.canSetSelection && nextProps.showMask || nextProps.alwaysShowMask) {\n          this.refs.input.value = this.input.getMaskedValue();\n        } else {\n          this.refs.input.value = this.input.getVisibleValue();\n        }\n\n        this.setSelection();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.showValue();\n      this.props.getReference && this.props.getReference(this.refs.input);\n    }\n  }, {\n    key: 'getSelection',\n    value: function getSelection() {\n      this.input.setSelection({\n        start: this.refs.input.selectionStart,\n        end: this.refs.input.selectionEnd\n      });\n    }\n  }, {\n    key: 'keyPressPropName',\n    value: function keyPressPropName() {\n      if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n        return 'onBeforeInput';\n      }\n\n      return 'onKeyPress';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          onChange = _props.onChange,\n          onValueChange = _props.onValueChange,\n          mask = _props.mask,\n          direction = _props.direction,\n          getReference = _props.getReference,\n          showMask = _props.showMask,\n          maskChar = _props.maskChar,\n          alwaysShowMask = _props.alwaysShowMask,\n          customMaskFormat = _props.customMaskFormat,\n          maskString = _props.maskString,\n          reformat = _props.reformat,\n          value = _props.value,\n          defaultValue = _props.defaultValue,\n          inputProps = _objectWithoutProperties(_props, ['onChange', 'onValueChange', 'mask', 'direction', 'getReference', 'showMask', 'maskChar', 'alwaysShowMask', 'customMaskFormat', 'maskString', 'reformat', 'value', 'defaultValue']);\n\n      var keyPressEvent = _defineProperty({}, this.keyPressPropName(), this.onKeyPress);\n\n      return _react2.default.createElement('input', _extends({}, inputProps, {\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onPaste: this.onPaste,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }, keyPressEvent, {\n        ref: 'input'\n      }));\n    }\n  }]);\n\n  return MaskInput;\n}(_react.Component);\n\nexports.default = MaskInput;","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/node_modules/react-maskinput/lib/maskInput.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_inputCore","obj","__esModule","default","_defineProperty","_objectWithoutProperties","keys","indexOf","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","KEYBOARD","BACKSPACE","DELETE","MaskInput","_Component","context","_this","getPrototypeOf","showValue","state","showMask","canSetSelection","alwaysShowMask","refs","input","getMaskedValue","getVisibleValue","setSelection","selection","getSelection","setSelectionRange","start","end","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","fn","setTimeout","onPaste","e","preventDefault","paste","clipboardData","getData","onChange","currentValue","setValue","onKeyPress","metaKey","altKey","ctrlKey","data","String","fromCharCode","which","onKeyDown","removePreviosOrSelected","removeNextOrSelected","onFocus","onBlur","createInput","defaultValue","reformat","maskString","maskChar","defaults","mask","maskFormat","applyValue","componentWillReceiveProps","nextProps","updated","setState","setReformat","setMaskFormat","setMask","setMaskString","setMaskChar","componentDidMount","getReference","selectionStart","selectionEnd","keyPressPropName","navigator","userAgent","match","render","_props","onValueChange","direction","customMaskFormat","inputProps","keyPressEvent","createElement","ref","Component"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _inputCore = require('input-core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * React-MaskInput component\n * Params:\n * `mask`: String. Format:\n *   0 — any number 0-9\n *   * — any symbol\n *   a — A-Z, a-z\n *   q — \"q\" letter, 2 — \"2\" letter etc.\n *   \\a — \"a\" letter\n * default is undefined\n *\n * [function] `reformat`: user function, if you want use custom reformat logic. It's userfull for numeric inputs.\n * If reformat defined mask'll be ignored. Reformat function must receive object with several fields:\n * function reformat({data: data, selection: {start, end}, input}) {\n *     // realisation\n *\n *     return {\n *         [any] value: value that store and calling in input core funcitons (such as reformat). value may have any format,\n *         [String] visibleValue: value that displayed to user in input if showMask is false,\n *         [String] maskedValue: value that  displayed to user in input if showMask is true,\n *         [{[integer] start, [integer] end}] selection: {start, end} — new selection range\n *     }\n * }\n *\n * if `reformat` and `mask` is undefined, input allow to enter any values.\n *\n * You can define custom mask by passing `maskFormat`. This prop must be an array,\n * each object in array have several fields:\n * str: matched char for mask\n * regexp: validation rule as regexp\n * type: special\n *\n * `maskChar`: Character to cover unfilled editable parts of mask. Default value is ''.\n * `maskString`: String to cover unfilled editable parts of mask. Default is undefined. If maskString define maskChar ignored.\n *\n * showMask: show mask in input. It's possible only if mask have not cyclic. Default value = false\n * alwaysShowMask: show mask when input inactive\n *\n * Callbacks:\n *   onValueChange(event). event is:\n *     unformattedValue: unformatted value,\n *     value: visible value\n *   getReference: callback to get input ref\n * All other props'll passed to input directly\n */\n\nvar MaskInput = function (_Component) {\n  _inherits(MaskInput, _Component);\n\n  function MaskInput(props, context) {\n    _classCallCheck(this, MaskInput);\n\n    var _this = _possibleConstructorReturn(this, (MaskInput.__proto__ || Object.getPrototypeOf(MaskInput)).call(this, props, context));\n\n    _this.showValue = function () {\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.refs.input.value = _this.input.getMaskedValue();\n        return;\n      }\n      _this.refs.input.value = _this.input.getVisibleValue();\n    };\n\n    _this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n      var selection = _this.input.getSelection();\n      _this.refs.input.setSelectionRange(selection.start, selection.end);\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      };\n      // For android\n      raf(function () {\n        return _this.refs.input.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    _this.onPaste = function (e) {\n      e.preventDefault();\n      _this.getSelection();\n\n      // getData value needed for IE also works in FF & Chrome\n      _this.input.paste(e.clipboardData.getData('Text'));\n\n      _this.showValue();\n\n      // Timeout needed for IE\n      setTimeout(_this.setSelection, 0);\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onChange = function (e) {\n      var currentValue = void 0;\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getMaskedValue();\n      } else {\n        currentValue = _this.input.getVisibleValue();\n      }\n\n      // fix conflict by update value in mask model\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n        _this.input.setValue(e.target.value);\n\n        _this.showValue();\n\n        setTimeout(_this.setSelection, 0);\n      }\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this.getSelection();\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n      _this.showValue();\n      _this.setSelection();\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    _this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removePreviosOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removeNextOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n    };\n\n    _this.onFocus = function (e) {\n      _this.canSetSelection = true;\n      _this.props.onFocus && _this.props.onFocus(e);\n    };\n\n    _this.onBlur = function (e) {\n      _this.canSetSelection = false;\n      _this.props.onBlur && _this.props.onBlur(e);\n    };\n\n    _this.input = (0, _inputCore.createInput)({\n      value: props.value || props.defaultValue || '',\n      reformat: props.reformat,\n      maskString: props.maskString,\n      maskChar: props.maskChar || _inputCore.defaults.maskChar,\n      mask: props.mask || _inputCore.defaults.mask,\n      maskFormat: props.maskFormat || _inputCore.defaults.maskFormat\n    });\n\n    _this.state = {\n      showMask: props.alwaysShowMask || props.showMask\n    };\n\n    _this.applyValue = function (value) {\n      _this.input.setValue(value);\n\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.refs.input.value = _this.input.getMaskedValue();\n        return;\n      }\n      _this.refs.input.value = _this.input.getVisibleValue();\n    };\n    return _this;\n  }\n\n  _createClass(MaskInput, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var updated = false;\n\n      if (this.props.alwaysShowMask !== nextProps.alwaysShowMask || this.props.showMask !== nextProps.showMask) {\n        this.setState({\n          showMask: nextProps.alwaysShowMask || nextProps.showMask\n        });\n      }\n\n      if (nextProps.reformat !== this.props.reformat) {\n        this.input.setReformat(nextProps.reformat);\n        updated = true;\n      }\n\n      if (nextProps.maskFormat && nextProps.maskFormat !== this.props.maskFormat) {\n        this.input.setMaskFormat(nextProps.maskFormat);\n        updated = true;\n      }\n\n      if (nextProps.mask !== this.props.mask) {\n        this.input.setMask(nextProps.mask);\n        updated = true;\n      }\n\n      if (nextProps.maskString !== this.props.maskString) {\n        this.input.setMaskString(nextProps.maskString);\n      }\n\n      if (nextProps.maskChar !== this.props.maskChar) {\n        this.input.setMaskChar(nextProps.maskChar);\n        updated = true;\n      }\n\n      if (nextProps.value !== this.props.value) {\n        this.input.setValue(nextProps.value);\n        updated = true;\n      }\n\n      if (updated) {\n        if (this.canSetSelection && nextProps.showMask || nextProps.alwaysShowMask) {\n          this.refs.input.value = this.input.getMaskedValue();\n        } else {\n          this.refs.input.value = this.input.getVisibleValue();\n        }\n        this.setSelection();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.showValue();\n      this.props.getReference && this.props.getReference(this.refs.input);\n    }\n  }, {\n    key: 'getSelection',\n    value: function getSelection() {\n      this.input.setSelection({\n        start: this.refs.input.selectionStart,\n        end: this.refs.input.selectionEnd\n      });\n    }\n  }, {\n    key: 'keyPressPropName',\n    value: function keyPressPropName() {\n      if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n        return 'onBeforeInput';\n      }\n      return 'onKeyPress';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          onChange = _props.onChange,\n          onValueChange = _props.onValueChange,\n          mask = _props.mask,\n          direction = _props.direction,\n          getReference = _props.getReference,\n          showMask = _props.showMask,\n          maskChar = _props.maskChar,\n          alwaysShowMask = _props.alwaysShowMask,\n          customMaskFormat = _props.customMaskFormat,\n          maskString = _props.maskString,\n          reformat = _props.reformat,\n          value = _props.value,\n          defaultValue = _props.defaultValue,\n          inputProps = _objectWithoutProperties(_props, ['onChange', 'onValueChange', 'mask', 'direction', 'getReference', 'showMask', 'maskChar', 'alwaysShowMask', 'customMaskFormat', 'maskString', 'reformat', 'value', 'defaultValue']);\n\n      var keyPressEvent = _defineProperty({}, this.keyPressPropName(), this.onKeyPress);\n\n      return _react2.default.createElement('input', _extends({}, inputProps, {\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onPaste: this.onPaste,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }, keyPressEvent, {\n        ref: 'input'\n      }));\n    }\n  }]);\n\n  return MaskInput;\n}(_react.Component);\n\nexports.default = MaskInput;"]},"metadata":{},"sourceType":"script"}