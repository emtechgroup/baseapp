{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileAccountActivity/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Pagination, Table } from '../../components';\nimport { getUserAgent, localeDate } from '../../helpers';\nimport { getUserActivity as _getUserActivity, selectTotalNumber, selectUserActivity, selectUserActivityCurrentPage, selectUserActivityFirstElemIndex, selectUserActivityLastElemIndex, selectUserActivityLoading, selectUserActivityNextPageExists, selectUserActivityPageCount } from '../../modules';\nvar paginationLimit = 25;\n\nvar ProfileAccountActivityComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileAccountActivityComponent, _React$Component);\n\n  var _super = _createSuper(ProfileAccountActivityComponent);\n\n  function ProfileAccountActivityComponent() {\n    var _this;\n\n    _classCallCheck(this, ProfileAccountActivityComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderContent = function () {\n      var _this$props = _this.props,\n          total = _this$props.total,\n          firstElemIndex = _this$props.firstElemIndex,\n          lastElemIndex = _this$props.lastElemIndex,\n          page = _this$props.page,\n          nextPageExists = _this$props.nextPageExists,\n          userActivity = _this$props.userActivity;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        header: _this.getHeaders(),\n        data: _this.getActivityData(userActivity),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        firstElemIndex: firstElemIndex,\n        lastElemIndex: lastElemIndex,\n        total: total,\n        page: page,\n        nextPageExists: nextPageExists,\n        onClickPrevPage: _this.onClickPrevPage,\n        onClickNextPage: _this.onClickNextPage,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.getHeaders = function () {\n      return [_this.props.intl.formatMessage({\n        id: 'page.body.profile.header.accountActivity.content.date'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.accountActivity.content.action'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.accountActivity.content.result'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.accountActivity.content.addressip'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.accountActivity.content.userAgent'\n      })];\n    };\n\n    _this.getResultOfUserAction = function (value) {\n      switch (value) {\n        case 'login':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.login'\n          });\n\n        case 'logout':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.logout'\n          });\n\n        case 'request QR code for 2FA':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.request2fa'\n          });\n\n        case 'enable 2FA':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.enable2fa'\n          });\n\n        case 'login::2fa':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.login.2fa'\n          });\n\n        case 'request password reset':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.requestPasswordReset'\n          });\n\n        case 'password reset':\n          return _this.props.intl.formatMessage({\n            id: 'page.body.profile.content.action.passwordReset'\n          });\n\n        default:\n          return value;\n      }\n    };\n\n    _this.onClickPrevPage = function () {\n      var page = _this.props.page;\n\n      _this.props.getUserActivity({\n        page: Number(page) - 1,\n        limit: paginationLimit\n      });\n    };\n\n    _this.onClickNextPage = function () {\n      var page = _this.props.page;\n\n      _this.props.getUserActivity({\n        page: Number(page) + 1,\n        limit: paginationLimit\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileAccountActivityComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUserActivity({\n        page: 0,\n        limit: paginationLimit\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          userActivity = _this$props2.userActivity;\n      var emptyMsg = this.props.intl.formatMessage({\n        id: 'page.noDataToShow'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__activity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.accountActivity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-history-elem \".concat(userActivity.length ? '' : 'pg-history-empty'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, userActivity.length ? this.renderContent() : null, !userActivity.length && !loading ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-history-elem__empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 57\n        }\n      }, emptyMsg) : null));\n    }\n  }, {\n    key: \"getActivityData\",\n    value: function getActivityData(userData) {\n      var _this2 = this;\n\n      return userData.map(function (item) {\n        return [localeDate(item.created_at, 'fullDate'), _this2.getResultOfUserAction(item.action), _this2.renderResult(_this2.props.intl.formatMessage({\n          id: \"page.body.profile.content.result.\".concat(item.result)\n        })), item.user_ip, getUserAgent(item.user_agent)];\n      });\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult(result) {\n      var className = classnames({\n        'pg-profile-page__activity-result-succeed': result === this.props.intl.formatMessage({\n          id: 'page.body.profile.content.result.succeed'\n        }),\n        'pg-profile-page__activity-result-failed': result === this.props.intl.formatMessage({\n          id: 'page.body.profile.content.result.failed'\n        }) || result === this.props.intl.formatMessage({\n          id: 'page.body.profile.content.result.denied'\n        })\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }\n      }, result);\n    }\n  }]);\n\n  return ProfileAccountActivityComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userActivity: selectUserActivity(state),\n    loading: selectUserActivityLoading(state),\n    total: selectTotalNumber(state),\n    page: selectUserActivityCurrentPage(state),\n    pageCount: selectUserActivityPageCount(state, paginationLimit),\n    firstElemIndex: selectUserActivityFirstElemIndex(state, paginationLimit),\n    lastElemIndex: selectUserActivityLastElemIndex(state, paginationLimit),\n    nextPageExists: selectUserActivityNextPageExists(state, paginationLimit)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getUserActivity: function getUserActivity(params) {\n      return dispatch(_getUserActivity(params));\n    }\n  };\n};\n\nexport var ProfileAccountActivity = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAccountActivityComponent));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileAccountActivity/index.tsx"],"names":["classnames","React","FormattedMessage","injectIntl","connect","Pagination","Table","getUserAgent","localeDate","getUserActivity","selectTotalNumber","selectUserActivity","selectUserActivityCurrentPage","selectUserActivityFirstElemIndex","selectUserActivityLastElemIndex","selectUserActivityLoading","selectUserActivityNextPageExists","selectUserActivityPageCount","paginationLimit","ProfileAccountActivityComponent","renderContent","props","total","firstElemIndex","lastElemIndex","page","nextPageExists","userActivity","getHeaders","getActivityData","onClickPrevPage","onClickNextPage","intl","formatMessage","id","getResultOfUserAction","value","Number","limit","loading","emptyMsg","length","userData","map","item","created_at","action","renderResult","result","user_ip","user_agent","className","Component","mapStateToProps","state","pageCount","mapDispatchToProps","dispatch","params","ProfileAccountActivity"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { Pagination, Table } from '../../components';\nimport { getUserAgent, localeDate } from '../../helpers';\nimport {\n    getUserActivity,\n    RootState,\n    selectTotalNumber,\n    selectUserActivity,\n    selectUserActivityCurrentPage,\n    selectUserActivityFirstElemIndex,\n    selectUserActivityLastElemIndex,\n    selectUserActivityLoading,\n    selectUserActivityNextPageExists,\n    selectUserActivityPageCount,\n    UserActivityDataInterface,\n} from '../../modules';\n\ninterface ReduxProps {\n    loading: boolean;\n    total: number;\n    page: number;\n    pageCount: number;\n    firstElemIndex: number;\n    lastElemIndex: number;\n    nextPageExists: boolean;\n    userActivity: UserActivityDataInterface[];\n}\n\ninterface DispatchProps {\n    getUserActivity: typeof getUserActivity;\n}\n\nconst paginationLimit = 25;\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nclass ProfileAccountActivityComponent extends React.Component<Props> {\n    public componentDidMount() {\n        this.props.getUserActivity({ page: 0, limit: paginationLimit });\n    }\n\n    public render() {\n        const { loading, userActivity } = this.props;\n        const emptyMsg = this.props.intl.formatMessage({id: 'page.noDataToShow'});\n\n        return (\n            <div className=\"pg-profile-page__activity\">\n                <div className=\"pg-profile-page-header\">\n                    <h3><FormattedMessage id=\"page.body.profile.header.accountActivity\" /></h3>\n                </div>\n                <div className={`pg-history-elem ${userActivity.length ? '' : 'pg-history-empty'}`}>\n                    {userActivity.length ? this.renderContent() : null}\n                    {!userActivity.length && !loading ? <p className=\"pg-history-elem__empty\">{emptyMsg}</p> : null}\n                </div>\n            </div>\n        );\n    }\n\n    public renderContent = () => {\n        const { total, firstElemIndex, lastElemIndex, page, nextPageExists, userActivity } = this.props;\n\n        return (\n            <React.Fragment>\n                <Table\n                    header={this.getHeaders()}\n                    data={this.getActivityData(userActivity)}\n                />\n                <Pagination\n                    firstElemIndex={firstElemIndex}\n                    lastElemIndex={lastElemIndex}\n                    total={total}\n                    page={page}\n                    nextPageExists={nextPageExists}\n                    onClickPrevPage={this.onClickPrevPage}\n                    onClickNextPage={this.onClickNextPage}\n                />\n            </React.Fragment>\n        );\n    };\n\n    private getHeaders = () => {\n        return [\n            this.props.intl.formatMessage({id: 'page.body.profile.header.accountActivity.content.date'}),\n            this.props.intl.formatMessage({id: 'page.body.profile.header.accountActivity.content.action'}),\n            this.props.intl.formatMessage({id: 'page.body.profile.header.accountActivity.content.result'}),\n            this.props.intl.formatMessage({id: 'page.body.profile.header.accountActivity.content.addressip'}),\n            this.props.intl.formatMessage({id: 'page.body.profile.header.accountActivity.content.userAgent'}),\n        ];\n    };\n\n    private getActivityData(userData: UserActivityDataInterface[]) {\n        return userData.map(item => {\n            return [\n                localeDate(item.created_at, 'fullDate'),\n                this.getResultOfUserAction(item.action),\n                this.renderResult(this.props.intl.formatMessage({ id: `page.body.profile.content.result.${item.result}`})),\n                item.user_ip,\n                getUserAgent(item.user_agent),\n            ];\n        });\n    }\n\n    private renderResult(result: string) {\n        const className = classnames({\n            'pg-profile-page__activity-result-succeed': result === this.props.intl.formatMessage({id: 'page.body.profile.content.result.succeed'}),\n            'pg-profile-page__activity-result-failed':  result === this.props.intl.formatMessage({id: 'page.body.profile.content.result.failed'}) ||\n                                                        result === this.props.intl.formatMessage({id: 'page.body.profile.content.result.denied'}),\n        });\n\n        return <span className={className}>{result}</span>;\n    }\n\n    private getResultOfUserAction = (value: string) => {\n        switch (value) {\n            case 'login':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.login'});\n            case 'logout':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.logout'});\n            case 'request QR code for 2FA':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.request2fa'});\n            case 'enable 2FA':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.enable2fa'});\n            case 'login::2fa':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.login.2fa'});\n            case 'request password reset':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.requestPasswordReset'});\n            case 'password reset':\n                return this.props.intl.formatMessage({ id: 'page.body.profile.content.action.passwordReset'});\n            default:\n                return value;\n        }\n    };\n\n    private onClickPrevPage = () => {\n        const { page } = this.props;\n        this.props.getUserActivity({ page: Number(page) - 1, limit: paginationLimit });\n    };\n\n    private onClickNextPage = () => {\n        const { page } = this.props;\n        this.props.getUserActivity({ page: Number(page) + 1, limit: paginationLimit });\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    userActivity: selectUserActivity(state),\n    loading: selectUserActivityLoading(state),\n    total: selectTotalNumber(state),\n    page: selectUserActivityCurrentPage(state),\n    pageCount: selectUserActivityPageCount(state, paginationLimit),\n    firstElemIndex: selectUserActivityFirstElemIndex(state, paginationLimit),\n    lastElemIndex: selectUserActivityLastElemIndex(state, paginationLimit),\n    nextPageExists: selectUserActivityNextPageExists(state, paginationLimit),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        getUserActivity: params => dispatch(getUserActivity(params)),\n    });\n\nexport const ProfileAccountActivity = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAccountActivityComponent)) as any;\n"]},"metadata":{},"sourceType":"module"}