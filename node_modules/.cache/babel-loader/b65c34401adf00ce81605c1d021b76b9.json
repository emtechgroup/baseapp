{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/OrderBook/index.tsx\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CombinedOrderBook, Decimal } from '../../components';\nimport { colors } from '../../constants';\nimport { accumulateVolume, calcMaxVolume } from '../../helpers';\nimport { selectCurrentColorTheme, selectCurrentMarket, selectCurrentPrice, selectDepthAsks, selectDepthBids, selectDepthLoading, selectMarketTickers, selectMobileDeviceState, selectOpenOrdersList, setCurrentPrice as _setCurrentPrice } from '../../modules';\n// render big/small breakpoint\nvar breakpoint = 634;\n\nvar OrderBookContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(OrderBookContainer, _React$Component);\n\n  var _super = _createSuper(OrderBookContainer);\n\n  function OrderBookContainer(props) {\n    var _this;\n\n    _classCallCheck(this, OrderBookContainer);\n\n    _this = _super.call(this, props);\n    _this.orderRef = void 0;\n\n    _this.orderBook = function (bids, asks) {\n      var _this$props = _this.props,\n          forceLarge = _this$props.forceLarge,\n          colorTheme = _this$props.colorTheme,\n          currentMarket = _this$props.currentMarket;\n      var isLarge = forceLarge || _this.state.width > breakpoint;\n      var asksData = isLarge ? asks : asks.slice(0).reverse();\n      return /*#__PURE__*/React.createElement(CombinedOrderBook, {\n        maxVolume: calcMaxVolume(bids, asks),\n        orderBookEntryAsks: accumulateVolume(asks),\n        orderBookEntryBids: accumulateVolume(bids),\n        rowBackgroundColorAsks: colors[colorTheme].orderBook.asks,\n        rowBackgroundColorBids: colors[colorTheme].orderBook.bids,\n        dataAsks: _this.renderOrderBook(asksData, 'asks', _this.props.intl.formatMessage({\n          id: 'page.noDataToShow'\n        }), currentMarket),\n        dataBids: _this.renderOrderBook(bids, 'bids', _this.props.intl.formatMessage({\n          id: 'page.noDataToShow'\n        }), currentMarket),\n        headers: _this.renderHeaders(),\n        lastPrice: _this.lastPrice(),\n        onSelectAsks: _this.handleOnSelectAsks,\n        onSelectBids: _this.handleOnSelectBids,\n        isLarge: isLarge,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.lastPrice = function () {\n      var _this$props2 = _this.props,\n          currentMarket = _this$props2.currentMarket,\n          isMobileDevice = _this$props2.isMobileDevice,\n          marketTickers = _this$props2.marketTickers;\n\n      var currentTicker = currentMarket && _this.getTickerValue(currentMarket, marketTickers);\n\n      if (currentMarket && currentTicker) {\n        var cn = classNames('', {\n          'cr-combined-order-book__market-negative': currentTicker.price_change_percent.includes('-'),\n          'cr-combined-order-book__market-positive': currentTicker.price_change_percent.includes('+')\n        });\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: cn,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, Decimal.format(+currentTicker.last, currentMarket.price_precision, ','), \"\\xA0\", isMobileDevice ? null : currentMarket.quote_unit.toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }\n        }, _this.props.intl.formatMessage({\n          id: 'page.body.trade.orderbook.lastMarket'\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: 'cr-combined-order-book__market-negative',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 34\n          }\n        }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 102\n          }\n        }, _this.props.intl.formatMessage({\n          id: 'page.body.trade.orderbook.lastMarket'\n        })));\n      }\n    };\n\n    _this.renderHeaders = function () {\n      var _this$props3 = _this.props,\n          currentMarket = _this$props3.currentMarket,\n          intl = _this$props3.intl,\n          isMobileDevice = _this$props3.isMobileDevice;\n      var formattedBaseUnit = currentMarket && currentMarket.base_unit ? \"(\".concat(currentMarket.base_unit.toUpperCase(), \")\") : '';\n      var formattedQuoteUnit = currentMarket && currentMarket.quote_unit ? \"(\".concat(currentMarket.quote_unit.toUpperCase(), \")\") : '';\n\n      if (isMobileDevice) {\n        return [\"\".concat(intl.formatMessage({\n          id: 'page.body.trade.orderbook.header.price'\n        }), \"\\n\").concat(formattedQuoteUnit), \"\".concat(intl.formatMessage({\n          id: 'page.body.trade.orderbook.header.amount'\n        }), \"\\n\").concat(formattedBaseUnit)];\n      }\n\n      return [\"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.price'\n      }), \"\\n\").concat(formattedQuoteUnit), \"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.amount'\n      }), \"\\n\").concat(formattedBaseUnit), \"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.volume'\n      }), \"\\n\").concat(formattedBaseUnit)];\n    };\n\n    _this.renderOrderBook = function (array, side, message, currentMarket) {\n      var _this$props4 = _this.props,\n          isMobileDevice = _this$props4.isMobileDevice,\n          forceLarge = _this$props4.forceLarge;\n      var total = accumulateVolume(array);\n      var isLarge = forceLarge || _this.state.width > breakpoint;\n      var priceFixed = currentMarket ? currentMarket.price_precision : 0;\n      var amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n      return array.length > 0 ? array.map(function (item, i) {\n        var _item = _slicedToArray(item, 2),\n            price = _item[0],\n            volume = _item[1];\n\n        switch (side) {\n          case 'asks':\n            total = isLarge ? accumulateVolume(array) : accumulateVolume(array.slice(0).reverse()).slice(0).reverse();\n\n            if (isMobileDevice) {\n              return [/*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i + 1] ? array[i + 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }\n              }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 29\n                }\n              }, total[i])];\n            }\n\n            return [/*#__PURE__*/React.createElement(\"span\", {\n              key: i,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Decimal, {\n              fixed: priceFixed,\n              thousSep: \",\",\n              prevValue: array[i + 1] ? array[i + 1][0] : 0,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }\n            }, price)), /*#__PURE__*/React.createElement(Decimal, {\n              key: i,\n              fixed: amountFixed,\n              thousSep: \",\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 25\n              }\n            }, volume), /*#__PURE__*/React.createElement(Decimal, {\n              key: i,\n              fixed: amountFixed,\n              thousSep: \",\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }\n            }, total[i])];\n\n          default:\n            if (isLarge) {\n              if (isMobileDevice) {\n                return [/*#__PURE__*/React.createElement(Decimal, {\n                  key: i,\n                  fixed: amountFixed,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 33\n                  }\n                }, total[i]), /*#__PURE__*/React.createElement(\"span\", {\n                  key: i,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(Decimal, {\n                  fixed: priceFixed,\n                  thousSep: \",\",\n                  prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 37\n                  }\n                }, price))];\n              }\n\n              return [/*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 29\n                }\n              }, total[i]), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 29\n                }\n              }, volume), /*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 33\n                }\n              }, price))];\n            } else {\n              if (isMobileDevice) {\n                return [/*#__PURE__*/React.createElement(\"span\", {\n                  key: i,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(Decimal, {\n                  fixed: priceFixed,\n                  thousSep: \",\",\n                  prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 37\n                  }\n                }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                  key: i,\n                  fixed: amountFixed,\n                  thousSep: \",\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 33\n                  }\n                }, total[i])];\n              }\n\n              return [/*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 33\n                }\n              }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 29\n                }\n              }, volume), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 29\n                }\n              }, total[i])];\n            }\n\n        }\n      }) : [[[''], message, ['']]];\n    };\n\n    _this.handleOnSelectBids = function (index) {\n      var _this$props5 = _this.props,\n          currentPrice = _this$props5.currentPrice,\n          bids = _this$props5.bids;\n      var priceToSet = bids[Number(index)] && Number(bids[Number(index)][0]);\n\n      if (currentPrice !== priceToSet) {\n        _this.props.setCurrentPrice(priceToSet);\n      }\n    };\n\n    _this.handleOnSelectAsks = function (index) {\n      var _this$props6 = _this.props,\n          asks = _this$props6.asks,\n          currentPrice = _this$props6.currentPrice,\n          forceLarge = _this$props6.forceLarge;\n      var isLarge = forceLarge || _this.state.width >= breakpoint;\n      var asksData = isLarge ? asks : asks.slice(0).reverse();\n      var priceToSet = asksData[Number(index)] && Number(asksData[Number(index)][0]);\n\n      if (currentPrice !== priceToSet) {\n        _this.props.setCurrentPrice(priceToSet);\n      }\n    };\n\n    _this.getTickerValue = function (currentMarket, tickers) {\n      var defaultTicker = {\n        amount: 0,\n        low: 0,\n        last: 0,\n        high: 0,\n        volume: 0,\n        open: 0,\n        price_change_percent: '+0.00%'\n      };\n      return tickers[currentMarket.id] || defaultTicker;\n    };\n\n    _this.state = {\n      width: 0\n    };\n    _this.orderRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(OrderBookContainer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n        this.setState({\n          width: this.orderRef.current.clientWidth\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props7 = this.props,\n          asks = _this$props7.asks,\n          bids = _this$props7.bids,\n          currentMarket = _this$props7.currentMarket,\n          openOrdersList = _this$props7.openOrdersList,\n          marketTickers = _this$props7.marketTickers,\n          orderBookLoading = _this$props7.orderBookLoading,\n          size = _this$props7.size;\n      var lastPrice = currentMarket && this.getTickerValue(currentMarket, marketTickers).last;\n      var nextLastPrice = nextProps.currentMarket && this.getTickerValue(nextProps.currentMarket, nextProps.marketTickers).last;\n      return JSON.stringify(nextProps.asks) !== JSON.stringify(asks) || JSON.stringify(nextProps.bids) !== JSON.stringify(bids) || (nextProps.currentMarket && nextProps.currentMarket.id) !== (currentMarket && currentMarket.id) || nextLastPrice !== lastPrice || nextProps.openOrdersList !== openOrdersList || nextProps.orderBookLoading !== orderBookLoading || nextProps.size !== size;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          asks = _this$props8.asks,\n          bids = _this$props8.bids,\n          forceLarge = _this$props8.forceLarge,\n          orderBookLoading = _this$props8.orderBookLoading;\n      var isLarge = forceLarge || this.state.width > breakpoint;\n      var cn = classNames('pg-combined-order-book ', {\n        'cr-combined-order-book--data-loading': orderBookLoading,\n        'pg-combined-order-book--no-data-first': !asks.length && !isLarge || !bids.length && isLarge,\n        'pg-combined-order-book--no-data-second': !bids.length && !isLarge || !asks.length && isLarge\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cn,\n        ref: this.orderRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'cr-table-header__content',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.trade.orderbook'\n      })), orderBookLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-combined-order-book-loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 84\n        }\n      })) : this.orderBook(bids, asks));\n    }\n  }]);\n\n  return OrderBookContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    colorTheme: selectCurrentColorTheme(state),\n    orderBookLoading: selectDepthLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n    marketTickers: selectMarketTickers(state),\n    openOrdersList: selectOpenOrdersList(state),\n    isMobileDevice: selectMobileDeviceState(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\n\nexport var OrderBook = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderBookContainer));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/OrderBook/index.tsx"],"names":["classNames","React","Spinner","injectIntl","connect","CombinedOrderBook","Decimal","colors","accumulateVolume","calcMaxVolume","selectCurrentColorTheme","selectCurrentMarket","selectCurrentPrice","selectDepthAsks","selectDepthBids","selectDepthLoading","selectMarketTickers","selectMobileDeviceState","selectOpenOrdersList","setCurrentPrice","breakpoint","OrderBookContainer","props","orderRef","orderBook","bids","asks","forceLarge","colorTheme","currentMarket","isLarge","state","width","asksData","slice","reverse","renderOrderBook","intl","formatMessage","id","renderHeaders","lastPrice","handleOnSelectAsks","handleOnSelectBids","isMobileDevice","marketTickers","currentTicker","getTickerValue","cn","price_change_percent","includes","format","last","price_precision","quote_unit","toUpperCase","formattedBaseUnit","base_unit","formattedQuoteUnit","array","side","message","total","priceFixed","amountFixed","amount_precision","length","map","item","i","price","volume","index","currentPrice","priceToSet","Number","tickers","defaultTicker","amount","low","high","open","createRef","current","clientWidth","setState","nextProps","openOrdersList","orderBookLoading","size","nextLastPrice","JSON","stringify","Component","mapStateToProps","mapDispatchToProps","dispatch","payload","OrderBook"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { CombinedOrderBook, Decimal } from '../../components';\nimport { colors } from '../../constants';\nimport { accumulateVolume, calcMaxVolume } from '../../helpers';\nimport {\n    Market,\n    RootState,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectCurrentPrice,\n    selectDepthAsks,\n    selectDepthBids,\n    selectDepthLoading,\n    selectMarketTickers,\n    selectMobileDeviceState,\n    selectOpenOrdersList,\n    setCurrentPrice,\n    Ticker,\n} from '../../modules';\nimport { OrderCommon } from '../../modules/types';\n\ninterface ReduxProps {\n    asks: string[][];\n    bids: string[][];\n    colorTheme: string;\n    currentMarket?: Market;\n    currentPrice?: number;\n    openOrdersList: OrderCommon[];\n    orderBookLoading: boolean;\n    isMobileDevice: boolean;\n}\n\ninterface DispatchProps {\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ninterface State {\n    width: number;\n}\n\ninterface OwnProps {\n    marketTickers: {\n        [key: string]: Ticker;\n    };\n    forceLarge?: boolean;\n    size: number;\n}\n\ntype Props = ReduxProps & DispatchProps & OwnProps & IntlProps;\n\n// render big/small breakpoint\nconst breakpoint = 634;\n\nclass OrderBookContainer extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            width: 0,\n        };\n\n        this.orderRef = React.createRef();\n    }\n\n    private orderRef;\n\n    public componentDidUpdate() {\n        if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n            this.setState({\n                width: this.orderRef.current.clientWidth,\n            });\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: Props) {\n        const { asks, bids, currentMarket, openOrdersList, marketTickers, orderBookLoading, size } = this.props;\n\n        const lastPrice = currentMarket && this.getTickerValue(currentMarket, marketTickers).last;\n        const nextLastPrice = nextProps.currentMarket && this.getTickerValue(nextProps.currentMarket, nextProps.marketTickers).last;\n\n        return (\n            JSON.stringify(nextProps.asks) !== JSON.stringify(asks) ||\n            JSON.stringify(nextProps.bids) !== JSON.stringify(bids) ||\n            (nextProps.currentMarket && nextProps.currentMarket.id) !== (currentMarket && currentMarket.id) ||\n            nextLastPrice !== lastPrice ||\n            nextProps.openOrdersList !== openOrdersList ||\n            nextProps.orderBookLoading !== orderBookLoading ||\n            nextProps.size !== size\n        );\n    }\n\n    public render() {\n        const {\n            asks,\n            bids,\n            forceLarge,\n            orderBookLoading,\n        } = this.props;\n\n        const isLarge = forceLarge || (this.state.width > breakpoint);\n\n        const cn = classNames('pg-combined-order-book ', {\n            'cr-combined-order-book--data-loading': orderBookLoading,\n            'pg-combined-order-book--no-data-first': (!asks.length && !isLarge) || (!bids.length && isLarge),\n            'pg-combined-order-book--no-data-second': (!bids.length && !isLarge) || (!asks.length && isLarge),\n        });\n\n        return (\n            <div className={cn} ref={this.orderRef}>\n                <div className={'cr-table-header__content'}>\n                    {this.props.intl.formatMessage({id: 'page.body.trade.orderbook'})}\n                </div>\n                {orderBookLoading ? <div className=\"pg-combined-order-book-loader\"><Spinner animation=\"border\" variant=\"primary\" /></div> : this.orderBook(bids, asks)}\n            </div>\n        );\n    }\n\n    private orderBook = (bids, asks) => {\n        const {\n            forceLarge,\n            colorTheme,\n            currentMarket,\n        } = this.props;\n\n        const isLarge = forceLarge || this.state.width > breakpoint;\n        const asksData = isLarge ? asks : asks.slice(0).reverse();\n\n        return (\n            <CombinedOrderBook\n                maxVolume={calcMaxVolume(bids, asks)}\n                orderBookEntryAsks={accumulateVolume(asks)}\n                orderBookEntryBids={accumulateVolume(bids)}\n                rowBackgroundColorAsks={colors[colorTheme].orderBook.asks}\n                rowBackgroundColorBids={colors[colorTheme].orderBook.bids}\n                dataAsks={this.renderOrderBook(asksData, 'asks', this.props.intl.formatMessage({id: 'page.noDataToShow'}), currentMarket)}\n                dataBids={this.renderOrderBook(bids, 'bids', this.props.intl.formatMessage({id: 'page.noDataToShow'}), currentMarket)}\n                headers={this.renderHeaders()}\n                lastPrice={this.lastPrice()}\n                onSelectAsks={this.handleOnSelectAsks}\n                onSelectBids={this.handleOnSelectBids}\n                isLarge={isLarge}\n            />\n        );\n    };\n\n    private lastPrice = () => {\n        const { currentMarket, isMobileDevice, marketTickers } = this.props;\n        const currentTicker = currentMarket && this.getTickerValue(currentMarket, marketTickers);\n\n        if (currentMarket && currentTicker) {\n            const cn = classNames('', {\n                'cr-combined-order-book__market-negative': currentTicker.price_change_percent.includes('-'),\n                'cr-combined-order-book__market-positive': currentTicker.price_change_percent.includes('+'),\n            });\n\n            return (\n                <React.Fragment>\n                    <span className={cn}>\n                        {Decimal.format(+(currentTicker.last), currentMarket.price_precision, ',')}&nbsp;\n                        {isMobileDevice ? null : currentMarket.quote_unit.toUpperCase()}\n                    </span>\n                    <span>{this.props.intl.formatMessage({id: 'page.body.trade.orderbook.lastMarket'})}</span>\n                </React.Fragment>\n            );\n        } else {\n          return <React.Fragment><span className={'cr-combined-order-book__market-negative'}>0</span><span>{this.props.intl.formatMessage({id: 'page.body.trade.orderbook.lastMarket'})}</span></React.Fragment>;\n        }\n    };\n\n    private renderHeaders = () => {\n        const {\n            currentMarket,\n            intl,\n            isMobileDevice,\n        } = this.props;\n        const formattedBaseUnit = (currentMarket && currentMarket.base_unit) ? `(${currentMarket.base_unit.toUpperCase()})` : '';\n        const formattedQuoteUnit = (currentMarket && currentMarket.quote_unit) ? `(${currentMarket.quote_unit.toUpperCase()})` : '';\n\n        if (isMobileDevice) {\n            return [\n                `${intl.formatMessage({id: 'page.body.trade.orderbook.header.price'})}\\n${formattedQuoteUnit}`,\n                `${intl.formatMessage({id: 'page.body.trade.orderbook.header.amount'})}\\n${formattedBaseUnit}`,\n            ];\n        }\n\n        return [\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.price'})}\\n${formattedQuoteUnit}`,\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.amount'})}\\n${formattedBaseUnit}`,\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.volume'})}\\n${formattedBaseUnit}`,\n        ];\n    };\n\n    private renderOrderBook = (array: string[][], side: string, message: string, currentMarket?: Market) => {\n        const { isMobileDevice, forceLarge } = this.props;\n        let total = accumulateVolume(array);\n        const isLarge = forceLarge || this.state.width > breakpoint;\n        const priceFixed = currentMarket ? currentMarket.price_precision : 0;\n        const amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n\n        return (array.length > 0) ? array.map((item, i) => {\n            const [price, volume] = item;\n            switch (side) {\n                case 'asks':\n                    total = isLarge ? accumulateVolume(array) : accumulateVolume(array.slice(0).reverse()).slice(0).reverse();\n\n                    if (isMobileDevice) {\n                        return [\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i + 1] ? array[i + 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                        ];\n                    }\n\n                    return [\n                        <span key={i}>\n                            <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i + 1] ? array[i + 1][0] : 0}>{price}</Decimal>\n                        </span>,\n                        <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                        <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                    ];\n                default:\n                    if (isLarge) {\n                        if (isMobileDevice) {\n                            return [\n                                <Decimal key={i} fixed={amountFixed}>{total[i]}</Decimal>,\n                                <span key={i}>\n                                    <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                                </span>,\n                            ];\n                        }\n\n                        return [\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                        ];\n                    } else {\n                        if (isMobileDevice) {\n                            return [\n                                <span key={i}>\n                                    <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                                </span>,\n                                <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                            ];\n                        }\n\n                        return [\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                        ];\n                    }\n            }\n        }) : [[[''], message, ['']]];\n    };\n\n    private handleOnSelectBids = (index: string) => {\n        const { currentPrice, bids } = this.props;\n        const priceToSet = bids[Number(index)] && Number(bids[Number(index)][0]);\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n\n    private handleOnSelectAsks = (index: string) => {\n        const { asks, currentPrice, forceLarge } = this.props;\n        const isLarge = forceLarge || this.state.width >= breakpoint;\n        const asksData = isLarge ? asks : asks.slice(0).reverse();\n        const priceToSet = asksData[Number(index)] && Number(asksData[Number(index)][0]);\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n\n    private getTickerValue = (currentMarket: Market, tickers: { [key: string]: Ticker }) => {\n        const defaultTicker = { amount: 0, low: 0, last: 0, high: 0, volume: 0, open: 0, price_change_percent: '+0.00%' };\n\n        return tickers[currentMarket.id] || defaultTicker;\n    };\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    colorTheme: selectCurrentColorTheme(state),\n    orderBookLoading: selectDepthLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n    marketTickers: selectMarketTickers(state),\n    openOrdersList: selectOpenOrdersList(state),\n    isMobileDevice: selectMobileDeviceState(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    });\n\nexport const OrderBook = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderBookContainer)) as any;\nexport type OrderBookProps = ReduxProps;\n"]},"metadata":{},"sourceType":"module"}