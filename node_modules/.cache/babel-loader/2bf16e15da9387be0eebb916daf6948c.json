{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/OpenOrders/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Table } from '../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nexport var OpenOrders = /*#__PURE__*/function (_React$Component) {\n  _inherits(OpenOrders, _React$Component);\n\n  var _super = _createSuper(OpenOrders);\n\n  function OpenOrders() {\n    var _this;\n\n    _classCallCheck(this, OpenOrders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.defaultHeaders = ['Date', 'Action', 'Price', 'Amount', ''];\n    _this.defaultHeadersKeys = ['Date', 'Action', 'Price', 'Amount', ''];\n\n    _this.renderCell = function (rowIndex) {\n      return function (cell, index, row) {\n        var _this$props$headersKe = _this.props.headersKeys,\n            headersKeys = _this$props$headersKe === void 0 ? _this.defaultHeadersKeys : _this$props$headersKe;\n        var actionIndex = headersKeys.findIndex(function (header) {\n          return header === 'Action';\n        });\n        var orderIndex = headersKeys.findIndex(function (header) {\n          return header === 'Order Type';\n        });\n        var buySellIndex = headersKeys.findIndex(function (header) {\n          return header === '';\n        });\n\n        switch (index) {\n          case actionIndex:\n            return _this.renderAction(row[actionIndex], row[buySellIndex]);\n\n          case orderIndex:\n            return _this.renderOrder(row[buySellIndex]);\n\n          case buySellIndex:\n            return _this.renderCancelButton(rowIndex);\n\n          default:\n            return cell;\n        }\n      };\n    };\n\n    _this.renderRow = function (row, index) {\n      return row.map(_this.renderCell(index)); // format cells and remove first column of order side\n    };\n\n    _this.renderCancelButton = function (index) {\n      return /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: _this.handleCancel(index),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      });\n    };\n\n    _this.handleCancel = function (index) {\n      return function () {\n        _this.props.onCancel(index);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(OpenOrders, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$headers = this.props.headers,\n          headers = _this$props$headers === void 0 ? this.defaultHeaders : _this$props$headers;\n      var _this$props$headersKe2 = this.props.headersKeys,\n          headersKeys = _this$props$headersKe2 === void 0 ? this.defaultHeadersKeys : _this$props$headersKe2;\n      var tableData = this.props.data.map(this.renderRow);\n      var orderIndex = headersKeys.findIndex(function (header) {\n        return header === 'Order Type';\n      });\n\n      if (headersKeys[orderIndex] === 'Order Type') {\n        headers[orderIndex] = /*#__PURE__*/React.createElement(\"span\", {\n          onClick: this.props.function,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 34\n          }\n        }, \"Order Type\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-open-orders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        header: headers,\n        data: tableData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderAction\",\n    value: function renderAction(actionName, actionType) {\n      var action = actionType ? actionType.toLowerCase() : actionType;\n      var classNames = classnames('cr-open-orders__price', {\n        'cr-open-orders__price--buy': action === 'buy',\n        'cr-open-orders__price--sell': action === 'sell'\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      }, actionName);\n    }\n  }, {\n    key: \"renderOrder\",\n    value: function renderOrder(orderType) {\n      // tslint:disable-next-line:no-magic-numbers\n      var type = orderType ? orderType.toLowerCase().slice(0, 3) : orderType;\n      var classNames = classnames('cr-open-orders__order', {\n        'cr-open-orders__order--buy': type === 'buy',\n        'cr-open-orders__order--sell': type === 'sel'\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }\n      }, orderType);\n    }\n  }]);\n\n  return OpenOrders;\n}(React.Component);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/OpenOrders/index.tsx"],"names":["classnames","React","Table","CloseIcon","OpenOrders","defaultHeaders","defaultHeadersKeys","renderCell","rowIndex","cell","index","row","props","headersKeys","actionIndex","findIndex","header","orderIndex","buySellIndex","renderAction","renderOrder","renderCancelButton","renderRow","map","handleCancel","onCancel","headers","tableData","data","function","actionName","actionType","action","toLowerCase","classNames","orderType","type","slice","Component"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { CellData, Table } from '../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\n\nexport interface OpenOrdersProps {\n    /**\n     * List of open orders, takes order side ('buy' | 'sell') as last element of a row\n     */\n    data: CellData[][];\n    /**\n     * Callback that is called when cancel button of order row is clicked\n     */\n    onCancel: (index: number) => void;\n    /**\n     * List of headers for open orders table\n     */\n    headers?: React.ReactNode[];\n    /**\n     * List of headers keys for open orders table\n     */\n    headersKeys?: React.ReactNode[];\n    /**\n     * toggleByOrderType function\n     */\n    function?: () => void;\n}\n\n\nexport class OpenOrders extends React.Component<OpenOrdersProps> {\n    private defaultHeaders = ['Date', 'Action', 'Price', 'Amount', ''];\n    private defaultHeadersKeys = ['Date', 'Action', 'Price', 'Amount', ''];\n\n    public render() {\n        const { headers = this.defaultHeaders } = this.props;\n        const { headersKeys = this.defaultHeadersKeys } = this.props;\n        const tableData = this.props.data.map(this.renderRow);\n        const orderIndex = headersKeys.findIndex(header => header === 'Order Type');\n\n        if (headersKeys[orderIndex] === 'Order Type'){\n           headers[orderIndex] = <span onClick={this.props.function}>Order Type</span>;\n        }\n\n        return (\n            <div className=\"cr-open-orders\">\n                <Table\n                    header={headers}\n                    data={tableData as CellData[][]}\n                />\n            </div>\n        );\n    }\n\n    public renderCell = (rowIndex: number) => (cell: CellData, index: number, row: CellData[]) => {\n        const { headersKeys = this.defaultHeadersKeys } = this.props;\n        const actionIndex = headersKeys.findIndex(header => header === 'Action');\n        const orderIndex = headersKeys.findIndex(header => header === 'Order Type');\n        const buySellIndex = headersKeys.findIndex(header => header === '');\n        switch (index) {\n            case actionIndex:\n                return this.renderAction(row[actionIndex] as string, row[buySellIndex] as string);\n            case orderIndex:\n                return this.renderOrder(row[buySellIndex] as string);\n            case buySellIndex:\n                return this.renderCancelButton(rowIndex);\n            default:\n                return cell;\n        }\n    };\n\n    public renderRow = (row: CellData[], index: number) => {\n        return row.map(this.renderCell(index)); // format cells and remove first column of order side\n    };\n\n    public renderAction(actionName: string, actionType: string) {\n        const action = actionType ? actionType.toLowerCase() : actionType;\n        const classNames = classnames('cr-open-orders__price', {\n            'cr-open-orders__price--buy': action === 'buy',\n            'cr-open-orders__price--sell': action === 'sell',\n        });\n\n        return <span className={classNames}>{actionName}</span>;\n    }\n\n    public renderOrder(orderType: string) {\n        // tslint:disable-next-line:no-magic-numbers\n        const type = orderType ? orderType.toLowerCase().slice(0,3) : orderType;\n        const classNames = classnames('cr-open-orders__order', {\n            'cr-open-orders__order--buy': type === 'buy',\n            'cr-open-orders__order--sell': type === 'sel',\n        });\n\n        return <span className={classNames}>{orderType}</span>;\n    }\n\n    public renderCancelButton = (index: number) => {\n        return <CloseIcon onClick={this.handleCancel(index)} />;\n    };\n\n    private handleCancel = (index: number) => () => {\n        this.props.onCancel(index);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}