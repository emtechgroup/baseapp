{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeSelectedRange;\n\nvar _charTypesEnum = require('../constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction removeSelectedRange(_ref) {\n  var value = _ref.value,\n      selection = _ref.selection,\n      reformat = _ref.reformat,\n      mask = _ref.mask,\n      maskChar = _ref.maskChar,\n      maskString = _ref.maskString;\n\n  var copyMaskChar = function copyMaskChar(count) {\n    var res = [];\n\n    for (var i = 0; i < count; i++) {\n      res.push({\n        char: maskChar,\n        type: _charTypesEnum2.default.MASK\n      });\n    }\n\n    return res;\n  };\n\n  var pasteMaskSymbols = function pasteMaskSymbols() {\n    if (reformat) {\n      return '';\n    }\n\n    if (maskString) {\n      var res = [];\n\n      for (var i = selection.start; i < selection.end; i++) {\n        res.push({\n          char: maskString[i],\n          type: _charTypesEnum2.default.MASK\n        });\n      }\n\n      return res;\n    }\n\n    return copyMaskChar(selection.end - selection.start);\n  };\n\n  if (selection.end < selection.start) {\n    var tmp = selection.end;\n    selection.end = selection.start;\n    selection.start = tmp;\n  }\n\n  if (selection.start === selection.end) {\n    return value;\n  }\n\n  if (value.length > selection.start) {\n    return value.slice(0, selection.start).concat(pasteMaskSymbols(), value.slice(selection.end, value.length));\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/node_modules/input-core/lib/functions/removeSelectedRange.js"],"names":["Object","defineProperty","exports","value","default","removeSelectedRange","_charTypesEnum","require","_charTypesEnum2","_interopRequireDefault","obj","__esModule","_ref","selection","reformat","mask","maskChar","maskString","copyMaskChar","count","res","i","push","char","type","MASK","pasteMaskSymbols","start","end","tmp","length","slice","concat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,IAAIC,cAAc,GAAGC,OAAO,CAAC,4BAAD,CAA5B;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACH,cAAD,CAA5C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,SAASL,mBAAT,CAA6BO,IAA7B,EAAmC;AAC/B,MAAIT,KAAK,GAAGS,IAAI,CAACT,KAAjB;AAAA,MACIU,SAAS,GAAGD,IAAI,CAACC,SADrB;AAAA,MAEIC,QAAQ,GAAGF,IAAI,CAACE,QAFpB;AAAA,MAGIC,IAAI,GAAGH,IAAI,CAACG,IAHhB;AAAA,MAIIC,QAAQ,GAAGJ,IAAI,CAACI,QAJpB;AAAA,MAKIC,UAAU,GAAGL,IAAI,CAACK,UALtB;;AAOA,MAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC5C,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC5BD,MAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,QAAAA,IAAI,EAAEP,QADD;AAELQ,QAAAA,IAAI,EAAEhB,eAAe,CAACJ,OAAhB,CAAwBqB;AAFzB,OAAT;AAIH;;AACD,WAAOL,GAAP;AACH,GATD;;AAWA,MAAIM,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;AAC/C,QAAIZ,QAAJ,EAAc;AACV,aAAO,EAAP;AACH;;AAED,QAAIG,UAAJ,EAAgB;AACZ,UAAIG,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAGR,SAAS,CAACc,KAAvB,EAA8BN,CAAC,GAAGR,SAAS,CAACe,GAA5C,EAAiDP,CAAC,EAAlD,EAAsD;AAClDD,QAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,UAAAA,IAAI,EAAEN,UAAU,CAACI,CAAD,CADX;AAELG,UAAAA,IAAI,EAAEhB,eAAe,CAACJ,OAAhB,CAAwBqB;AAFzB,SAAT;AAIH;;AACD,aAAOL,GAAP;AACH;;AAED,WAAOF,YAAY,CAACL,SAAS,CAACe,GAAV,GAAgBf,SAAS,CAACc,KAA3B,CAAnB;AACH,GAjBD;;AAmBA,MAAId,SAAS,CAACe,GAAV,GAAgBf,SAAS,CAACc,KAA9B,EAAqC;AACjC,QAAIE,GAAG,GAAGhB,SAAS,CAACe,GAApB;AACAf,IAAAA,SAAS,CAACe,GAAV,GAAgBf,SAAS,CAACc,KAA1B;AACAd,IAAAA,SAAS,CAACc,KAAV,GAAkBE,GAAlB;AACH;;AAED,MAAIhB,SAAS,CAACc,KAAV,KAAoBd,SAAS,CAACe,GAAlC,EAAuC;AACnC,WAAOzB,KAAP;AACH;;AAED,MAAIA,KAAK,CAAC2B,MAAN,GAAejB,SAAS,CAACc,KAA7B,EAAoC;AAChC,WAAOxB,KAAK,CAAC4B,KAAN,CAAY,CAAZ,EAAelB,SAAS,CAACc,KAAzB,EAAgCK,MAAhC,CAAuCN,gBAAgB,EAAvD,EAA2DvB,KAAK,CAAC4B,KAAN,CAAYlB,SAAS,CAACe,GAAtB,EAA2BzB,KAAK,CAAC2B,MAAjC,CAA3D,CAAP;AACH;;AAED,SAAO3B,KAAP;AACH","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = removeSelectedRange;\n\nvar _charTypesEnum = require('../constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction removeSelectedRange(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection,\n        reformat = _ref.reformat,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var copyMaskChar = function copyMaskChar(count) {\n        var res = [];\n        for (var i = 0; i < count; i++) {\n            res.push({\n                char: maskChar,\n                type: _charTypesEnum2.default.MASK\n            });\n        }\n        return res;\n    };\n\n    var pasteMaskSymbols = function pasteMaskSymbols() {\n        if (reformat) {\n            return '';\n        }\n\n        if (maskString) {\n            var res = [];\n            for (var i = selection.start; i < selection.end; i++) {\n                res.push({\n                    char: maskString[i],\n                    type: _charTypesEnum2.default.MASK\n                });\n            }\n            return res;\n        }\n\n        return copyMaskChar(selection.end - selection.start);\n    };\n\n    if (selection.end < selection.start) {\n        var tmp = selection.end;\n        selection.end = selection.start;\n        selection.start = tmp;\n    }\n\n    if (selection.start === selection.end) {\n        return value;\n    }\n\n    if (value.length > selection.start) {\n        return value.slice(0, selection.start).concat(pasteMaskSymbols(), value.slice(selection.end, value.length));\n    }\n\n    return value;\n}"]},"metadata":{},"sourceType":"script"}