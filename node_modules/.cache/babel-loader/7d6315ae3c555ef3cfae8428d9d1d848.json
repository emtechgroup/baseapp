{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/Errors/index.tsx\";\nimport * as Sentry from '@sentry/browser';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\n\nvar HandleErrorWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(HandleErrorWrapper, _React$Component);\n\n  var _super = _createSuper(HandleErrorWrapper);\n\n  function HandleErrorWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, HandleErrorWrapper);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      eventId: null,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(HandleErrorWrapper, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      var _this2 = this;\n\n      Sentry.withScope(function (scope) {\n        scope.setExtras(info);\n        var eventId = Sentry.captureException(error);\n\n        _this2.setState({\n          eventId\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.hasError) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            return Sentry.showReportDialog({\n              eventId: _this3.state.eventId\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, this.props.intl.formatMessage({\n          id: 'sentry.report_feedback'\n        }));\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError() {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return HandleErrorWrapper;\n}(React.Component);\n\nexport var ErrorWrapper = injectIntl(HandleErrorWrapper);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/Errors/index.tsx"],"names":["Sentry","React","injectIntl","HandleErrorWrapper","props","state","eventId","hasError","error","info","withScope","scope","setExtras","captureException","setState","showReportDialog","intl","formatMessage","id","children","Component","ErrorWrapper"],"mappings":";;;;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,iBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;;IAcMC,kB;;;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAHe;AAOlB;;;;sCAMwBC,K,EAAOC,I,EAAM;AAAA;;AAClCT,MAAAA,MAAM,CAACU,SAAP,CAAiB,UAAAC,KAAK,EAAI;AACtBA,QAAAA,KAAK,CAACC,SAAN,CAAgBH,IAAhB;AACA,YAAMH,OAAO,GAAGN,MAAM,CAACa,gBAAP,CAAwBL,KAAxB,CAAhB;;AACA,QAAA,MAAI,CAACM,QAAL,CAAc;AAACR,UAAAA;AAAD,SAAd;AACH,OAJD;AAKH;;;6BAEe;AAAA;;AACZ,UAAI,KAAKD,KAAL,CAAWE,QAAf,EAAyB;AACrB,4BACI;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMP,MAAM,CAACe,gBAAP,CAAwB;AAAET,cAAAA,OAAO,EAAE,MAAI,CAACD,KAAL,CAAWC;AAAtB,aAAxB,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKF,KAAL,CAAWY,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADL,CADJ;AAKH;;AAED,aAAO,KAAKd,KAAL,CAAWe,QAAlB;AACH;;;+CAtBwC;AACrC,aAAO;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACH;;;;EAZ4BN,KAAK,CAACmB,S;;AAmCvC,OAAO,IAAMC,YAAY,GAAGnB,UAAU,CAACC,kBAAD,CAA/B","sourcesContent":["import * as Sentry from '@sentry/browser';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from '../../';\n\ninterface ErrorWrapperState {\n    eventId: any; // tslint:disable-line\n    hasError: boolean;\n}\n\ninterface ErrorWrapperProps {\n    children: React.ReactNode;\n}\n\ntype ErrorProps = ErrorWrapperProps & IntlProps;\n\nclass HandleErrorWrapper extends React.Component<ErrorProps, ErrorWrapperState> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            eventId: null,\n            hasError: false,\n        };\n    }\n\n    public static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    public componentDidCatch(error, info) {\n        Sentry.withScope(scope => {\n            scope.setExtras(info);\n            const eventId = Sentry.captureException(error);\n            this.setState({eventId});\n        });\n    }\n\n    public render() {\n        if (this.state.hasError) {\n            return (\n                <button onClick={() => Sentry.showReportDialog({ eventId: this.state.eventId })}>\n                    {this.props.intl.formatMessage({ id: 'sentry.report_feedback' })}\n                </button>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport const ErrorWrapper = injectIntl(HandleErrorWrapper);\n"]},"metadata":{},"sourceType":"module"}