{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/OrderInput/index.tsx\";\n\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../../components';\nimport { areEqualProps } from '../../../helpers/areEqualProps';\n/* Icons */\n\nimport { MinusIcon } from '../../assets/images/MinusIcon';\nimport { PlusIcon } from '../../assets/images/PlusIcon';\nexport var OrderInput = React.memo(function (props) {\n  var className = props.className,\n      handleChangeValue = props.handleChangeValue,\n      _handleFocusInput = props.handleFocusInput,\n      isFocused = props.isFocused,\n      isWrong = props.isWrong,\n      label = props.label,\n      onKeyPress = props.onKeyPress,\n      placeholder = props.placeholder,\n      precision = props.precision,\n      value = props.value;\n  var cx = cr('cr-order-input-mobile', className);\n  var fieldsetFocusedClass = cr('cr-order-input-mobile__fieldset', {\n    'cr-order-input-mobile__fieldset--focused': isFocused,\n    'cr-order-input-mobile__fieldset--wrong': isWrong\n  });\n\n  var handleChangeValueByButton = function handleChangeValueByButton(increase) {\n    var updatedValue = value;\n    var increasedValue = (+updatedValue + Math.pow(10, -precision)).toFixed(precision);\n    var decreasedValue = (+updatedValue - Math.pow(10, -precision)).toFixed(precision);\n    updatedValue = increase ? increasedValue : +decreasedValue >= 0 ? decreasedValue : updatedValue;\n    props.handleChangeValue(String(updatedValue));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-order-input-mobile__button\",\n    onClick: function onClick() {\n      return handleChangeValueByButton(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MinusIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: fieldsetFocusedClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"number\",\n    inputValue: value,\n    placeholder: placeholder || '0',\n    handleChangeInput: handleChangeValue,\n    label: value && placeholder ? placeholder : '',\n    defaultLabel: value && placeholder ? placeholder : '',\n    onKeyPress: onKeyPress,\n    handleFocusInput: function handleFocusInput() {\n      return _handleFocusInput(label);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-order-input-mobile__button\",\n    onClick: function onClick() {\n      return handleChangeValueByButton(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlusIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })));\n}, areEqualProps);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/OrderInput/index.tsx"],"names":["cr","React","CustomInput","areEqualProps","MinusIcon","PlusIcon","OrderInput","memo","props","className","handleChangeValue","handleFocusInput","isFocused","isWrong","label","onKeyPress","placeholder","precision","value","cx","fieldsetFocusedClass","handleChangeValueByButton","increase","updatedValue","increasedValue","toFixed","decreasedValue","String"],"mappings":"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","sourcesContent":["import cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../../components';\nimport { areEqualProps} from '../../../helpers/areEqualProps';\n\n/* Icons */\nimport { MinusIcon } from '../../assets/images/MinusIcon';\nimport { PlusIcon } from '../../assets/images/PlusIcon';\n\nexport interface OrderInputProps {\n    className?: string;\n    isFocused: boolean;\n    isWrong?: boolean;\n    label?: string;\n    placeholder?: string;\n    value: string | number;\n    precision: number;\n    handleChangeValue: (text: string) => void;\n    handleFocusInput: (value?: string) => void;\n    onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nexport const OrderInput: React.FunctionComponent<OrderInputProps> = React.memo((props: OrderInputProps) => {\n    const {\n        className,\n        handleChangeValue,\n        handleFocusInput,\n        isFocused,\n        isWrong,\n        label,\n        onKeyPress,\n        placeholder,\n        precision,\n        value,\n    } = props;\n    const cx = cr('cr-order-input-mobile', className);\n\n    const fieldsetFocusedClass = cr('cr-order-input-mobile__fieldset', {\n        'cr-order-input-mobile__fieldset--focused': isFocused,\n        'cr-order-input-mobile__fieldset--wrong': isWrong,\n    });\n\n    const handleChangeValueByButton = (increase: boolean) => {\n        let updatedValue = value;\n        const increasedValue = (+updatedValue + (10 ** -precision)).toFixed(precision);\n        const decreasedValue = (+updatedValue - (10 ** -precision)).toFixed(precision);\n\n        updatedValue = increase ?\n            increasedValue :\n            +decreasedValue >= 0 ? decreasedValue : updatedValue;\n\n        props.handleChangeValue(String(updatedValue));\n    };\n\n    return (\n        <div className={cx}>\n            <div className=\"cr-order-input-mobile__button\" onClick={() => handleChangeValueByButton(false)}>\n                <MinusIcon />\n            </div>\n            <fieldset className={fieldsetFocusedClass}>\n                <CustomInput\n                    type=\"number\"\n                    inputValue={value}\n                    placeholder={placeholder || '0'}\n                    handleChangeInput={handleChangeValue}\n                    label={value && placeholder ? placeholder : ''}\n                    defaultLabel={value && placeholder ? placeholder : ''}\n                    onKeyPress={onKeyPress}\n                    handleFocusInput={() => handleFocusInput(label)}\n                />\n            </fieldset>\n            <div className=\"cr-order-input-mobile__button\" onClick={() => handleChangeValueByButton(true)}>\n                <PlusIcon />\n            </div>\n        </div>\n    );\n}, areEqualProps);\n"]},"metadata":{},"sourceType":"module"}