{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { DEFAULT_KYC_STEPS, ORDER_BOOK_DEFAULT_SIDE_LIMIT, STORAGE_DEFAULT_LIMIT } from '../constants';\nexport var defaultConfig = {\n  api: {\n    authUrl: '',\n    tradeUrl: '',\n    applogicUrl: '',\n    rangerUrl: '',\n    finexUrl: ''\n  },\n  minutesUntilAutoLogout: '5',\n  rangerReconnectPeriod: '1',\n  withCredentials: true,\n  storage: {},\n  gaTrackerKey: '',\n  msAlertDisplayTime: '5000',\n  incrementalOrderBook: false,\n  finex: false,\n  isResizable: false,\n  isDraggable: false,\n  languages: ['en'],\n  sessionCheckInterval: '15000',\n  balancesFetchInterval: '3000',\n  passwordEntropyStep: 0,\n  showLanding: true,\n  sentryEnabled: false,\n  kycSteps: ['email', 'phone', 'profile', 'document', 'address']\n};\nexport var Cryptobase = {\n  config: defaultConfig\n};\nwindow.env = window.env || defaultConfig;\nCryptobase.config = _objectSpread({}, window.env);\nCryptobase.config.storage = Cryptobase.config.storage || {};\nexport var tradeUrl = function tradeUrl() {\n  return Cryptobase.config.api.tradeUrl;\n};\nexport var authUrl = function authUrl() {\n  return Cryptobase.config.api.authUrl;\n};\nexport var applogicUrl = function applogicUrl() {\n  return Cryptobase.config.api.applogicUrl;\n};\nexport var rangerUrl = function rangerUrl() {\n  return Cryptobase.config.api.rangerUrl;\n};\nexport var finexUrl = function finexUrl() {\n  return Cryptobase.config.api.finexUrl || tradeUrl();\n};\nexport var minutesUntilAutoLogout = function minutesUntilAutoLogout() {\n  return Cryptobase.config.minutesUntilAutoLogout || '5';\n};\nexport var withCredentials = function withCredentials() {\n  return Cryptobase.config.withCredentials;\n};\nexport var defaultStorageLimit = function defaultStorageLimit() {\n  return Cryptobase.config.storage.defaultStorageLimit || STORAGE_DEFAULT_LIMIT;\n};\nexport var orderBookSideLimit = function orderBookSideLimit() {\n  return Cryptobase.config.storage.orderBookSideLimit || ORDER_BOOK_DEFAULT_SIDE_LIMIT;\n};\nexport var gaTrackerKey = function gaTrackerKey() {\n  return Cryptobase.config.gaTrackerKey || '';\n};\nexport var msAlertDisplayTime = function msAlertDisplayTime() {\n  return Cryptobase.config.msAlertDisplayTime || '5000';\n};\nexport var rangerReconnectPeriod = function rangerReconnectPeriod() {\n  return Cryptobase.config.rangerReconnectPeriod ? Number(Cryptobase.config.rangerReconnectPeriod) : 1;\n};\nexport var incrementalOrderBook = function incrementalOrderBook() {\n  return Cryptobase.config.incrementalOrderBook || false;\n};\nexport var isResizableGrid = function isResizableGrid() {\n  return Cryptobase.config.isResizable || false;\n};\nexport var isDraggableGrid = function isDraggableGrid() {\n  return Cryptobase.config.isDraggable || false;\n};\nexport var languages = Cryptobase.config.languages && Cryptobase.config.languages.length > 0 ? Cryptobase.config.languages : ['en'];\nexport var sessionCheckInterval = function sessionCheckInterval() {\n  return Cryptobase.config.sessionCheckInterval || '15000';\n};\nexport var balancesFetchInterval = function balancesFetchInterval() {\n  return Cryptobase.config.balancesFetchInterval || '3000';\n};\nexport var isFinexEnabled = function isFinexEnabled() {\n  return Cryptobase.config.finex || false;\n};\nexport var passwordEntropyStep = function passwordEntropyStep() {\n  return Cryptobase.config.passwordEntropyStep;\n};\nexport var showLanding = function showLanding() {\n  return Cryptobase.config.showLanding;\n};\nexport var sentryEnabled = function sentryEnabled() {\n  return Cryptobase.config.sentryEnabled || defaultConfig.sentryEnabled;\n};\nexport var kycSteps = function kycSteps() {\n  return Cryptobase.config.kycSteps || DEFAULT_KYC_STEPS;\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/api/config.ts"],"names":["DEFAULT_KYC_STEPS","ORDER_BOOK_DEFAULT_SIDE_LIMIT","STORAGE_DEFAULT_LIMIT","defaultConfig","api","authUrl","tradeUrl","applogicUrl","rangerUrl","finexUrl","minutesUntilAutoLogout","rangerReconnectPeriod","withCredentials","storage","gaTrackerKey","msAlertDisplayTime","incrementalOrderBook","finex","isResizable","isDraggable","languages","sessionCheckInterval","balancesFetchInterval","passwordEntropyStep","showLanding","sentryEnabled","kycSteps","Cryptobase","config","window","env","defaultStorageLimit","orderBookSideLimit","Number","isResizableGrid","isDraggableGrid","length","isFinexEnabled"],"mappings":"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","sourcesContent":["import {\n    DEFAULT_KYC_STEPS,\n    ORDER_BOOK_DEFAULT_SIDE_LIMIT,\n    STORAGE_DEFAULT_LIMIT,\n} from '../constants';\nimport { Config } from './types';\n\nexport const defaultConfig: Config = {\n    api: {\n        authUrl: '',\n        tradeUrl: '',\n        applogicUrl: '',\n        rangerUrl: '',\n        finexUrl: '',\n    },\n    minutesUntilAutoLogout: '5',\n    rangerReconnectPeriod: '1',\n    withCredentials: true,\n    storage: {},\n    gaTrackerKey: '',\n    msAlertDisplayTime: '5000',\n    incrementalOrderBook: false,\n    finex: false,\n    isResizable: false,\n    isDraggable: false,\n    languages: ['en'],\n    sessionCheckInterval: '15000',\n    balancesFetchInterval: '3000',\n    passwordEntropyStep: 0,\n    showLanding: true,\n    sentryEnabled: false,\n    kycSteps: [\n        'email',\n        'phone',\n        'profile',\n        'document',\n        'address',\n    ],\n};\n\nexport const Cryptobase = {\n    config: defaultConfig,\n};\n\ndeclare global {\n    interface Window {\n        env: Config;\n    }\n}\n\nwindow.env = window.env || defaultConfig;\nCryptobase.config = { ...window.env };\nCryptobase.config.storage = Cryptobase.config.storage || {};\n\nexport const tradeUrl = () => Cryptobase.config.api.tradeUrl;\nexport const authUrl = () => Cryptobase.config.api.authUrl;\nexport const applogicUrl = () => Cryptobase.config.api.applogicUrl;\nexport const rangerUrl = () => Cryptobase.config.api.rangerUrl;\nexport const finexUrl = () => Cryptobase.config.api.finexUrl || tradeUrl();\nexport const minutesUntilAutoLogout = (): string => Cryptobase.config.minutesUntilAutoLogout || '5';\nexport const withCredentials = () => Cryptobase.config.withCredentials;\nexport const defaultStorageLimit = () => Cryptobase.config.storage.defaultStorageLimit || STORAGE_DEFAULT_LIMIT;\nexport const orderBookSideLimit = () => Cryptobase.config.storage.orderBookSideLimit || ORDER_BOOK_DEFAULT_SIDE_LIMIT;\nexport const gaTrackerKey = (): string => Cryptobase.config.gaTrackerKey || '';\nexport const msAlertDisplayTime = (): string => Cryptobase.config.msAlertDisplayTime || '5000';\nexport const rangerReconnectPeriod = (): number => Cryptobase.config.rangerReconnectPeriod ? Number(Cryptobase.config.rangerReconnectPeriod) : 1;\nexport const incrementalOrderBook = (): boolean => Cryptobase.config.incrementalOrderBook || false;\nexport const isResizableGrid = ():boolean => Cryptobase.config.isResizable || false;\nexport const isDraggableGrid = ():boolean => Cryptobase.config.isDraggable || false;\nexport const languages = Cryptobase.config.languages && Cryptobase.config.languages.length > 0 ? Cryptobase.config.languages : ['en'];\nexport const sessionCheckInterval = (): string => Cryptobase.config.sessionCheckInterval || '15000';\nexport const balancesFetchInterval = (): string => Cryptobase.config.balancesFetchInterval || '3000';\nexport const isFinexEnabled = (): boolean => Cryptobase.config.finex || false;\nexport const passwordEntropyStep = ():number => Cryptobase.config.passwordEntropyStep;\nexport const showLanding = (): boolean => Cryptobase.config.showLanding;\nexport const sentryEnabled = () => Cryptobase.config.sentryEnabled || defaultConfig.sentryEnabled;\nexport const kycSteps = (): string[] => Cryptobase.config.kycSteps || DEFAULT_KYC_STEPS;\n"]},"metadata":{},"sourceType":"module"}