{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(changeUserDataSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { getCsrfToken } from '../../../../helpers';\nimport { changeUserData, changeUserDataError } from '../actions';\n\nvar changeUserDataOptions = function changeUserDataOptions(csrfToken) {\n  return {\n    apiVersion: 'barong',\n    headers: {\n      'X-CSRF-Token': csrfToken\n    }\n  };\n};\n\nexport function changeUserDataSaga(action) {\n  var user;\n  return _regeneratorRuntime.wrap(function changeUserDataSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.put(changeUserDataOptions(getCsrfToken())), '/resource/users/me', action.payload.user);\n\n        case 3:\n          user = _context.sent;\n          _context.next = 6;\n          return put(changeUserData({\n            user\n          }));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: changeUserDataError\n            }\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/profile/sagas/changeUserDataSaga.ts"],"names":["changeUserDataSaga","call","put","sendError","API","getCsrfToken","changeUserData","changeUserDataError","changeUserDataOptions","csrfToken","apiVersion","headers","action","payload","user","error","processingType","extraOptions","actionError"],"mappings":";;oDAaiBA,kB;;AAbjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAyE,YAAzE;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAwC;AAClE,SAAO;AACHC,IAAAA,UAAU,EAAE,QADT;AAEHC,IAAAA,OAAO,EAAE;AAAE,sBAAgBF;AAAlB;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,SAAUT,kBAAV,CAA6BY,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMX,IAAI,CAACG,GAAG,CAACF,GAAJ,CAAQM,qBAAqB,CAACH,YAAY,EAAb,CAA7B,CAAD,EAAiD,oBAAjD,EAAuEO,MAAM,CAACC,OAAP,CAAeC,IAAtF,CAAV;;AAFd;AAEOA,UAAAA,IAFP;AAAA;AAGC,iBAAMZ,GAAG,CAACI,cAAc,CAAC;AAAEQ,YAAAA;AAAF,WAAD,CAAf,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMZ,GAAG,CAACC,SAAS,CAAC;AAChBY,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEX;AADH;AAHE,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { getCsrfToken } from '../../../../helpers';\nimport { changeUserData, changeUserDataError, ChangeUserDataFetch } from '../actions';\n\nconst changeUserDataOptions = (csrfToken?: string): RequestOptions => {\n    return {\n        apiVersion: 'barong',\n        headers: { 'X-CSRF-Token': csrfToken },\n    };\n};\n\nexport function* changeUserDataSaga(action: ChangeUserDataFetch) {\n    try {\n        const user = yield call(API.put(changeUserDataOptions(getCsrfToken())), '/resource/users/me', action.payload.user);\n        yield put(changeUserData({ user }));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: changeUserDataError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}