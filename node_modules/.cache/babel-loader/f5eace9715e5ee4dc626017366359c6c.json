{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ORDER_EXECUTE_DATA, ORDER_EXECUTE_ERROR, ORDER_EXECUTE_FETCH, ORDERS_SET_AMOUNT, ORDERS_SET_CURRENT_PRICE, ORDERS_SET_ORDER_TYPE } from './constants';\nvar initialState = {\n  executeLoading: false,\n  currentPrice: undefined,\n  amount: '',\n  orderType: ''\n};\nexport var ordersReducer = function ordersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ORDER_EXECUTE_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        executeLoading: true,\n        executeError: undefined\n      });\n\n    case ORDER_EXECUTE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        executeLoading: false,\n        executeError: undefined\n      });\n\n    case ORDER_EXECUTE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        executeLoading: false,\n        executeError: action.error\n      });\n\n    case ORDERS_SET_CURRENT_PRICE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentPrice: action.payload\n      });\n\n    case ORDERS_SET_AMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        amount: action.payload\n      });\n\n    case ORDERS_SET_ORDER_TYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orderType: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/orders/reducer.ts"],"names":["ORDER_EXECUTE_DATA","ORDER_EXECUTE_ERROR","ORDER_EXECUTE_FETCH","ORDERS_SET_AMOUNT","ORDERS_SET_CURRENT_PRICE","ORDERS_SET_ORDER_TYPE","initialState","executeLoading","currentPrice","undefined","amount","orderType","ordersReducer","state","action","type","executeError","error","payload"],"mappings":";AAEA,SACIA,kBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,iBAJJ,EAKIC,wBALJ,EAMIC,qBANJ,QAOO,aAPP;AAmBA,IAAMC,YAAyB,GAAG;AAC9BC,EAAAA,cAAc,EAAE,KADc;AAE9BC,EAAAA,YAAY,EAAEC,SAFgB;AAG9BC,EAAAA,MAAM,EAAE,EAHsB;AAI9BC,EAAAA,SAAS,EAAE;AAJmB,CAAlC;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAgD;AAAA,MAA/CC,KAA+C,uEAAvCP,YAAuC;AAAA,MAAzBQ,MAAyB;;AACzE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,mBAAL;AACI,6CACOW,KADP;AACcN,QAAAA,cAAc,EAAE,IAD9B;AAEIS,QAAAA,YAAY,EAAEP;AAFlB;;AAIJ,SAAKT,kBAAL;AACI,6CACOa,KADP;AACcN,QAAAA,cAAc,EAAE,KAD9B;AAEIS,QAAAA,YAAY,EAAEP;AAFlB;;AAIJ,SAAKR,mBAAL;AACI,6CACOY,KADP;AACcN,QAAAA,cAAc,EAAE,KAD9B;AAEIS,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAFzB;;AAIJ,SAAKb,wBAAL;AACI,6CACOS,KADP;AAEIL,QAAAA,YAAY,EAAEM,MAAM,CAACI;AAFzB;;AAIJ,SAAKf,iBAAL;AACI,6CACOU,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACI;AAFnB;;AAIJ,SAAKb,qBAAL;AACI,6CACOQ,KADP;AAEIF,QAAAA,SAAS,EAAEG,MAAM,CAACI;AAFtB;;AAIJ;AACI,aAAOL,KAAP;AAhCR;AAkCH,CAnCM","sourcesContent":["import { CommonError, CommonState } from '../../types';\nimport { OrdersAction } from './actions';\nimport {\n    ORDER_EXECUTE_DATA,\n    ORDER_EXECUTE_ERROR,\n    ORDER_EXECUTE_FETCH,\n    ORDERS_SET_AMOUNT,\n    ORDERS_SET_CURRENT_PRICE,\n    ORDERS_SET_ORDER_TYPE,\n} from './constants';\n\n\nexport interface OrdersState extends CommonState {\n    executeLoading: boolean;\n    executeError?: CommonError;\n    currentPrice: number | undefined;\n    amount: string;\n    orderType: string;\n}\n\n\nconst initialState: OrdersState = {\n    executeLoading: false,\n    currentPrice: undefined,\n    amount: '',\n    orderType: '',\n};\n\nexport const ordersReducer = (state = initialState, action: OrdersAction) => {\n    switch (action.type) {\n        case ORDER_EXECUTE_FETCH:\n            return {\n                ...state, executeLoading: true,\n                executeError: undefined,\n            };\n        case ORDER_EXECUTE_DATA:\n            return {\n                ...state, executeLoading: false,\n                executeError: undefined,\n            };\n        case ORDER_EXECUTE_ERROR:\n            return {\n                ...state, executeLoading: false,\n                executeError: action.error,\n            };\n        case ORDERS_SET_CURRENT_PRICE:\n            return {\n                ...state,\n                currentPrice: action.payload,\n            };\n        case ORDERS_SET_AMOUNT:\n            return {\n                ...state,\n                amount: action.payload,\n            };\n        case ORDERS_SET_ORDER_TYPE:\n            return {\n                ...state,\n                orderType: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}