{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(openOrdersCancelSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { alertPush, sendError } from '../../../';\nimport { API, isFinexEnabled } from '../../../../api';\nimport { getCsrfToken, getOrderAPI } from '../../../../helpers';\nimport { openOrdersCancelError } from '../actions';\n\nvar ordersCancelOptions = function ordersCancelOptions(csrfToken) {\n  return {\n    apiVersion: getOrderAPI(),\n    headers: {\n      'X-CSRF-Token': csrfToken\n    }\n  };\n};\n\nexport function openOrdersCancelSaga(action) {\n  var _action$payload$order, id, uuid;\n\n  return _regeneratorRuntime.wrap(function openOrdersCancelSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload$order = action.payload.order, id = _action$payload$order.id, uuid = _action$payload$order.uuid;\n\n          if (!isFinexEnabled()) {\n            _context.next = 12;\n            break;\n          }\n\n          if (!uuid) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 6;\n          return call(API.post(ordersCancelOptions(getCsrfToken())), \"/market/orders/cancel/\".concat(uuid), {\n            uuid\n          });\n\n        case 6:\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.next = 10;\n          return call(API.post(ordersCancelOptions(getCsrfToken())), \"/market/orders/cancel/\".concat(id), {\n            id\n          });\n\n        case 10:\n          _context.next = 19;\n          break;\n\n        case 12:\n          if (!uuid) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 15;\n          return call(API.post(ordersCancelOptions(getCsrfToken())), \"/market/orders/\".concat(uuid, \"/cancel\"), {\n            uuid\n          });\n\n        case 15:\n          _context.next = 19;\n          break;\n\n        case 17:\n          _context.next = 19;\n          return call(API.post(ordersCancelOptions(getCsrfToken())), \"/market/orders/\".concat(id, \"/cancel\"), {\n            id\n          });\n\n        case 19:\n          _context.next = 21;\n          return put(alertPush({\n            message: ['success.order.cancelling'],\n            type: 'success'\n          }));\n\n        case 21:\n          _context.next = 27;\n          break;\n\n        case 23:\n          _context.prev = 23;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 27;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: openOrdersCancelError\n            }\n          }));\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 23]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/openOrders/sagas/openOrdersCancelSaga.ts"],"names":["openOrdersCancelSaga","call","put","alertPush","sendError","API","isFinexEnabled","getCsrfToken","getOrderAPI","openOrdersCancelError","ordersCancelOptions","csrfToken","apiVersion","headers","action","payload","order","id","uuid","post","message","type","error","processingType","extraOptions","actionError"],"mappings":";;oDAaiBA,oB;;AAbjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoD,iBAApD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,qBAAT,QAA6D,YAA7D;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAwC;AAChE,SAAO;AACHC,IAAAA,UAAU,EAAEJ,WAAW,EADpB;AAEHK,IAAAA,OAAO,EAAE;AAAE,sBAAgBF;AAAlB;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,SAAUX,oBAAV,CAA+Bc,MAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEiCA,MAAM,CAACC,OAFxC,CAESC,KAFT,EAEkBC,EAFlB,yBAEkBA,EAFlB,EAEsBC,IAFtB,yBAEsBA,IAFtB;;AAAA,eAIKZ,cAAc,EAJnB;AAAA;AAAA;AAAA;;AAAA,eAKSY,IALT;AAAA;AAAA;AAAA;;AAAA;AAMS,iBAAMjB,IAAI,CAACI,GAAG,CAACc,IAAJ,CAAST,mBAAmB,CAACH,YAAY,EAAb,CAA5B,CAAD,kCAAyEW,IAAzE,GAAiF;AAAEA,YAAAA;AAAF,WAAjF,CAAV;;AANT;AAAA;AAAA;;AAAA;AAAA;AAQS,iBAAMjB,IAAI,CAACI,GAAG,CAACc,IAAJ,CAAST,mBAAmB,CAACH,YAAY,EAAb,CAA5B,CAAD,kCAAyEU,EAAzE,GAA+E;AAAEA,YAAAA;AAAF,WAA/E,CAAV;;AART;AAAA;AAAA;;AAAA;AAAA,eAWSC,IAXT;AAAA;AAAA;AAAA;;AAAA;AAYS,iBAAMjB,IAAI,CAACI,GAAG,CAACc,IAAJ,CAAST,mBAAmB,CAACH,YAAY,EAAb,CAA5B,CAAD,2BAAkEW,IAAlE,cAAiF;AAAEA,YAAAA;AAAF,WAAjF,CAAV;;AAZT;AAAA;AAAA;;AAAA;AAAA;AAcS,iBAAMjB,IAAI,CAACI,GAAG,CAACc,IAAJ,CAAST,mBAAmB,CAACH,YAAY,EAAb,CAA5B,CAAD,2BAAkEU,EAAlE,cAA+E;AAAEA,YAAAA;AAAF,WAA/E,CAAV;;AAdT;AAAA;AAkBC,iBAAMf,GAAG,CAACC,SAAS,CAAC;AAAEiB,YAAAA,OAAO,EAAE,CAAC,0BAAD,CAAX;AAAyCC,YAAAA,IAAI,EAAE;AAA/C,WAAD,CAAV,CAAT;;AAlBD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoBC,iBAAMnB,GAAG,CAACE,SAAS,CAAC;AAChBkB,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEhB;AADH;AAHE,WAAD,CAAV,CAAT;;AApBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { alertPush, sendError } from '../../../';\nimport { API, isFinexEnabled, RequestOptions } from '../../../../api';\nimport { getCsrfToken, getOrderAPI } from '../../../../helpers';\nimport { openOrdersCancelError, OpenOrdersCancelFetch } from '../actions';\n\nconst ordersCancelOptions = (csrfToken?: string): RequestOptions => {\n    return {\n        apiVersion: getOrderAPI(),\n        headers: { 'X-CSRF-Token': csrfToken },\n    };\n};\n\nexport function* openOrdersCancelSaga(action: OpenOrdersCancelFetch) {\n    try {\n        const { order: { id, uuid } } = action.payload;\n\n        if (isFinexEnabled()) {\n            if (uuid) {\n                yield call(API.post(ordersCancelOptions(getCsrfToken())), `/market/orders/cancel/${uuid}`, { uuid });\n            } else {\n                yield call(API.post(ordersCancelOptions(getCsrfToken())), `/market/orders/cancel/${id}`, { id });\n            }\n        } else {\n            if (uuid) {\n                yield call(API.post(ordersCancelOptions(getCsrfToken())), `/market/orders/${uuid}/cancel`, { uuid });\n            } else {\n                yield call(API.post(ordersCancelOptions(getCsrfToken())), `/market/orders/${id}/cancel`, { id });\n            }\n        }\n\n        yield put(alertPush({ message: ['success.order.cancelling'], type: 'success'}));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: openOrdersCancelError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}