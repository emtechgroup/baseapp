{"ast":null,"code":"import UAParser from 'ua-parser-js';\n// tslint:disable-next-line\nexport var getUserAgent = function getUserAgent(userAgentData) {\n  var parser = new UAParser();\n  parser.setUA(userAgentData);\n  var userBrowserData = parser.getResult().browser;\n  var userOSData = parser.getResult().os;\n  var userAgent = userBrowserData.name && userOSData.name ? \"\".concat(userBrowserData.name, \" \").concat(userBrowserData.major ? userBrowserData.major : '', \" \").concat(userOSData.name, \" \").concat(userOSData.version ? userOSData.version : '') : parser.getResult().ua;\n  return userAgent;\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/helpers/getUserAgent.ts"],"names":["UAParser","getUserAgent","userAgentData","parser","setUA","userBrowserData","getResult","browser","userOSData","os","userAgent","name","major","version","ua"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAQA;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAA2B;AACnD,MAAMC,MAAM,GAAG,IAAIH,QAAJ,EAAf;AACAG,EAAAA,MAAM,CAACC,KAAP,CAAaF,aAAb;AACA,MAAMG,eAAe,GAAGF,MAAM,CAACG,SAAP,GAAmBC,OAA3C;AACA,MAAMC,UAAU,GAAGL,MAAM,CAACG,SAAP,GAAmBG,EAAtC;AACA,MAAMC,SAAS,GAAGL,eAAe,CAACM,IAAhB,IAAwBH,UAAU,CAACG,IAAnC,aACXN,eAAe,CAACM,IADL,cACaN,eAAe,CAACO,KAAhB,GAAwBP,eAAe,CAACO,KAAxC,GAAgD,EAD7D,cACmEJ,UAAU,CAACG,IAD9E,cACsFH,UAAU,CAACK,OAAX,GAAqBL,UAAU,CAACK,OAAhC,GAA0C,EADhI,IAEdV,MAAM,CAACG,SAAP,GAAmBQ,EAFvB;AAIA,SAAOJ,SAAP;AACH,CAVM","sourcesContent":["import UAParser from 'ua-parser-js';\n\ninterface AgentContext {\n    name: string;\n    version: string;\n    major?: string;\n}\n\n// tslint:disable-next-line\nexport const getUserAgent = (userAgentData: string) => {\n    const parser = new UAParser();\n    parser.setUA(userAgentData);\n    const userBrowserData = parser.getResult().browser as AgentContext;\n    const userOSData = parser.getResult().os as AgentContext;\n    const userAgent = userBrowserData.name && userOSData.name ?\n        `${userBrowserData.name} ${userBrowserData.major ? userBrowserData.major : ''} ${userOSData.name} ${userOSData.version ? userOSData.version : ''}` :\n        parser.getResult().ua;\n\n    return userAgent;\n};\n"]},"metadata":{},"sourceType":"module"}