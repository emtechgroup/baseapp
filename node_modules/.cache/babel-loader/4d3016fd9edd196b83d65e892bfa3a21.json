{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/Withdraw/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Beneficiaries, CustomInput, SummaryField } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { cleanPositiveFloatInput, precisionRegExp } from '../../helpers';\nvar defaultBeneficiary = {\n  id: 0,\n  currency: '',\n  name: '',\n  state: '',\n  data: {\n    address: ''\n  }\n};\nexport var Withdraw = /*#__PURE__*/function (_React$Component) {\n  _inherits(Withdraw, _React$Component);\n\n  var _super = _createSuper(Withdraw);\n\n  function Withdraw() {\n    var _this;\n\n    _classCallCheck(this, Withdraw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      amount: '',\n      beneficiary: defaultBeneficiary,\n      otpCode: '',\n      withdrawAmountFocused: false,\n      withdrawCodeFocused: false,\n      total: ''\n    };\n\n    _this.handleCheckButtonDisabled = function (total, beneficiary, otpCode) {\n      var isPending = beneficiary.state && beneficiary.state.toLowerCase() === 'pending';\n      return Number(total) <= 0 || !Boolean(beneficiary.id) || isPending || !Boolean(otpCode);\n    };\n\n    _this.renderFee = function () {\n      var _this$props = _this.props,\n          fee = _this$props.fee,\n          fixed = _this$props.fixed,\n          currency = _this$props.currency;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Decimal, {\n        fixed: fixed,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, fee.toString()), \" \", currency.toUpperCase());\n    };\n\n    _this.renderTotal = function () {\n      var total = _this.state.total;\n      var _this$props2 = _this.props,\n          fixed = _this$props2.fixed,\n          currency = _this$props2.currency;\n      return total ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Decimal, {\n        fixed: fixed,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, total.toString()), \" \", currency.toUpperCase()) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"0 \", currency.toUpperCase());\n    };\n\n    _this.renderOtpCodeInput = function () {\n      var _this$state = _this.state,\n          otpCode = _this$state.otpCode,\n          withdrawCodeFocused = _this$state.withdrawCodeFocused;\n      var withdraw2faLabel = _this.props.withdraw2faLabel;\n      var withdrawCodeClass = classnames('cr-withdraw__group__code', {\n        'cr-withdraw__group__code--focused': withdrawCodeFocused\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: withdrawCodeClass,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"number\",\n        label: withdraw2faLabel || '2FA code',\n        placeholder: withdraw2faLabel || '2FA code',\n        defaultLabel: \"2FA code\",\n        handleChangeInput: _this.handleChangeInputOtpCode,\n        inputValue: otpCode,\n        handleFocusInput: function handleFocusInput() {\n          return _this.handleFieldFocus('code');\n        },\n        classNameLabel: \"cr-withdraw__label\",\n        classNameInput: \"cr-withdraw__input\",\n        autoFocus: false,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw__divider cr-withdraw__divider-two\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }));\n    };\n\n    _this.handleClick = function () {\n      return _this.props.onClick(_this.state.amount, _this.state.total, _this.state.beneficiary, _this.state.otpCode);\n    };\n\n    _this.handleFieldFocus = function (field) {\n      switch (field) {\n        case 'amount':\n          _this.setState(function (prev) {\n            return {\n              withdrawAmountFocused: !prev.withdrawAmountFocused\n            };\n          });\n\n          break;\n\n        case 'code':\n          _this.setState(function (prev) {\n            return {\n              withdrawCodeFocused: !prev.withdrawCodeFocused\n            };\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleChangeInputAmount = function (value) {\n      var fixed = _this.props.fixed;\n      var convertedValue = cleanPositiveFloatInput(String(value));\n\n      if (convertedValue.match(precisionRegExp(fixed))) {\n        var _amount = convertedValue !== '' ? Number(parseFloat(convertedValue).toFixed(fixed)) : '';\n\n        var _total = _amount !== '' ? (_amount - _this.props.fee).toFixed(fixed) : '';\n\n        if (Number(_total) <= 0) {\n          _this.setTotal(0 .toFixed(fixed));\n        } else {\n          _this.setTotal(_total);\n        }\n\n        _this.setState({\n          amount: convertedValue\n        });\n      }\n    };\n\n    _this.setTotal = function (value) {\n      _this.setState({\n        total: value\n      });\n    };\n\n    _this.handleChangeBeneficiary = function (value) {\n      _this.setState({\n        beneficiary: value\n      });\n    };\n\n    _this.handleChangeInputOtpCode = function (otpCode) {\n      _this.setState({\n        otpCode\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Withdraw, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props3 = this.props,\n          currency = _this$props3.currency,\n          withdrawDone = _this$props3.withdrawDone;\n\n      if (nextProps && JSON.stringify(nextProps.currency) !== JSON.stringify(currency) || nextProps.withdrawDone && !withdrawDone) {\n        this.setState({\n          amount: '',\n          otpCode: '',\n          total: ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          amount = _this$state2.amount,\n          beneficiary = _this$state2.beneficiary,\n          total = _this$state2.total,\n          withdrawAmountFocused = _this$state2.withdrawAmountFocused,\n          otpCode = _this$state2.otpCode;\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          currency = _this$props4.currency,\n          type = _this$props4.type,\n          twoFactorAuthRequired = _this$props4.twoFactorAuthRequired,\n          withdrawAmountLabel = _this$props4.withdrawAmountLabel,\n          withdrawFeeLabel = _this$props4.withdrawFeeLabel,\n          withdrawTotalLabel = _this$props4.withdrawTotalLabel,\n          withdrawButtonLabel = _this$props4.withdrawButtonLabel,\n          isMobileDevice = _this$props4.isMobileDevice;\n      var cx = classnames('cr-withdraw', className);\n      var lastDividerClassName = classnames('cr-withdraw__divider', {\n        'cr-withdraw__divider-one': twoFactorAuthRequired,\n        'cr-withdraw__divider-two': !twoFactorAuthRequired\n      });\n      var withdrawAmountClass = classnames('cr-withdraw__group__amount', {\n        'cr-withdraw__group__amount--focused': withdrawAmountFocused\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw__group__address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Beneficiaries, {\n        currency: currency,\n        type: type,\n        onChangeValue: this.handleChangeBeneficiary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw__divider cr-withdraw__divider-one\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: withdrawAmountClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"number\",\n        label: withdrawAmountLabel || 'Withdrawal Amount',\n        defaultLabel: \"Withdrawal Amount\",\n        inputValue: amount,\n        placeholder: withdrawAmountLabel || 'Amount',\n        classNameInput: \"cr-withdraw__input\",\n        handleChangeInput: this.handleChangeInputAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: lastDividerClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }), !isMobileDevice && twoFactorAuthRequired && this.renderOtpCodeInput()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SummaryField, {\n        className: \"cr-withdraw__summary-field\",\n        message: withdrawFeeLabel ? withdrawFeeLabel : 'Fee',\n        content: this.renderFee(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(SummaryField, {\n        className: \"cr-withdraw__summary-field\",\n        message: withdrawTotalLabel ? withdrawTotalLabel : 'Total Withdraw Amount',\n        content: this.renderTotal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      })), isMobileDevice && twoFactorAuthRequired && this.renderOtpCodeInput(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-withdraw__deep\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        onClick: this.handleClick,\n        disabled: this.handleCheckButtonDisabled(total, beneficiary, otpCode),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, withdrawButtonLabel ? withdrawButtonLabel : 'Withdraw'))));\n    }\n  }]);\n\n  return Withdraw;\n}(React.Component);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/Withdraw/index.tsx"],"names":["classnames","React","Button","Beneficiaries","CustomInput","SummaryField","Decimal","cleanPositiveFloatInput","precisionRegExp","defaultBeneficiary","id","currency","name","state","data","address","Withdraw","amount","beneficiary","otpCode","withdrawAmountFocused","withdrawCodeFocused","total","handleCheckButtonDisabled","isPending","toLowerCase","Number","Boolean","renderFee","props","fee","fixed","toString","toUpperCase","renderTotal","renderOtpCodeInput","withdraw2faLabel","withdrawCodeClass","handleChangeInputOtpCode","handleFieldFocus","handleClick","onClick","field","setState","prev","handleChangeInputAmount","value","convertedValue","String","match","parseFloat","toFixed","setTotal","handleChangeBeneficiary","nextProps","withdrawDone","JSON","stringify","className","type","twoFactorAuthRequired","withdrawAmountLabel","withdrawFeeLabel","withdrawTotalLabel","withdrawButtonLabel","isMobileDevice","cx","lastDividerClassName","withdrawAmountClass","Component"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    Beneficiaries,\n    CustomInput,\n    SummaryField,\n} from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { cleanPositiveFloatInput, precisionRegExp } from '../../helpers';\nimport { Beneficiary } from '../../modules';\n\nexport interface WithdrawProps {\n    currency: string;\n    fee: number;\n    onClick: (amount: string, total: string, beneficiary: Beneficiary, otpCode: string) => void;\n    fixed: number;\n    className?: string;\n    type: 'fiat' | 'coin';\n    twoFactorAuthRequired?: boolean;\n    withdrawAmountLabel?: string;\n    withdraw2faLabel?: string;\n    withdrawFeeLabel?: string;\n    withdrawTotalLabel?: string;\n    withdrawButtonLabel?: string;\n    withdrawDone: boolean;\n    isMobileDevice?: boolean;\n}\n\nconst defaultBeneficiary: Beneficiary = {\n    id: 0,\n    currency: '',\n    name: '',\n    state: '',\n    data: {\n        address: '',\n    },\n};\n\ninterface WithdrawState {\n    amount: string;\n    beneficiary: Beneficiary;\n    otpCode: string;\n    withdrawAmountFocused: boolean;\n    withdrawCodeFocused: boolean;\n    total: string;\n}\n\nexport class Withdraw extends React.Component<WithdrawProps, WithdrawState> {\n    public state = {\n        amount: '',\n        beneficiary: defaultBeneficiary,\n        otpCode: '',\n        withdrawAmountFocused: false,\n        withdrawCodeFocused: false,\n        total: '',\n    };\n\n    public componentWillReceiveProps(nextProps) {\n        const { currency, withdrawDone } = this.props;\n\n        if ((nextProps && (JSON.stringify(nextProps.currency) !== JSON.stringify(currency))) || (nextProps.withdrawDone && !withdrawDone)) {\n            this.setState({\n                amount: '',\n                otpCode: '',\n                total: '',\n            });\n        }\n    }\n\n    public render() {\n        const {\n            amount,\n            beneficiary,\n            total,\n            withdrawAmountFocused,\n            otpCode,\n        } = this.state;\n        const {\n            className,\n            currency,\n            type,\n            twoFactorAuthRequired,\n            withdrawAmountLabel,\n            withdrawFeeLabel,\n            withdrawTotalLabel,\n            withdrawButtonLabel,\n            isMobileDevice,\n        } = this.props;\n\n        const cx = classnames('cr-withdraw', className);\n        const lastDividerClassName = classnames('cr-withdraw__divider', {\n            'cr-withdraw__divider-one': twoFactorAuthRequired,\n            'cr-withdraw__divider-two': !twoFactorAuthRequired,\n        });\n\n        const withdrawAmountClass = classnames('cr-withdraw__group__amount', {\n          'cr-withdraw__group__amount--focused': withdrawAmountFocused,\n        });\n\n        return (\n            <div className={cx}>\n                <div className=\"cr-withdraw-column\">\n                    <div className=\"cr-withdraw__group__address\">\n                        <Beneficiaries\n                            currency={currency}\n                            type={type}\n                            onChangeValue={this.handleChangeBeneficiary}\n                        />\n                    </div>\n                    <div className=\"cr-withdraw__divider cr-withdraw__divider-one\" />\n                    <div className={withdrawAmountClass}>\n                        <CustomInput\n                            type=\"number\"\n                            label={withdrawAmountLabel || 'Withdrawal Amount'}\n                            defaultLabel=\"Withdrawal Amount\"\n                            inputValue={amount}\n                            placeholder={withdrawAmountLabel || 'Amount'}\n                            classNameInput=\"cr-withdraw__input\"\n                            handleChangeInput={this.handleChangeInputAmount}\n                        />\n                    </div>\n                    <div className={lastDividerClassName} />\n                    {!isMobileDevice && twoFactorAuthRequired && this.renderOtpCodeInput()}\n                </div>\n                <div className=\"cr-withdraw-column\">\n                    <div>\n                        <SummaryField\n                            className=\"cr-withdraw__summary-field\"\n                            message={withdrawFeeLabel ? withdrawFeeLabel : 'Fee'}\n                            content={this.renderFee()}\n                        />\n                        <SummaryField\n                            className=\"cr-withdraw__summary-field\"\n                            message={withdrawTotalLabel ? withdrawTotalLabel : 'Total Withdraw Amount'}\n                            content={this.renderTotal()}\n                        />\n                    </div>\n                    {isMobileDevice && twoFactorAuthRequired && this.renderOtpCodeInput()}\n                    <div className=\"cr-withdraw__deep\">\n                        <Button\n                            variant=\"primary\"\n                            size=\"lg\"\n                            onClick={this.handleClick}\n                            disabled={this.handleCheckButtonDisabled(total, beneficiary, otpCode)}\n                        >\n                            {withdrawButtonLabel ? withdrawButtonLabel : 'Withdraw'}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private handleCheckButtonDisabled = (total: string, beneficiary: Beneficiary, otpCode: string) => {\n        const isPending = beneficiary.state && beneficiary.state.toLowerCase() === 'pending';\n\n        return Number(total) <= 0 || !Boolean(beneficiary.id) || isPending || !Boolean(otpCode);\n    };\n\n    private renderFee = () => {\n        const { fee, fixed, currency } = this.props;\n\n        return (\n            <span>\n                <Decimal fixed={fixed} thousSep=\",\">{fee.toString()}</Decimal> {currency.toUpperCase()}\n            </span>\n        );\n    };\n\n    private renderTotal = () => {\n        const total = this.state.total;\n        const { fixed, currency } = this.props;\n\n        return total ? (\n            <span>\n                <Decimal fixed={fixed} thousSep=\",\">{total.toString()}</Decimal> {currency.toUpperCase()}\n            </span>\n        ) : <span>0 {currency.toUpperCase()}</span>;\n    };\n\n    private renderOtpCodeInput = () => {\n        const { otpCode, withdrawCodeFocused } = this.state;\n        const { withdraw2faLabel } = this.props;\n        const withdrawCodeClass = classnames('cr-withdraw__group__code', {\n          'cr-withdraw__group__code--focused': withdrawCodeFocused,\n        });\n\n        return (\n            <React.Fragment>\n              <div className={withdrawCodeClass}>\n                  <CustomInput\n                      type=\"number\"\n                      label={withdraw2faLabel || '2FA code'}\n                      placeholder={withdraw2faLabel || '2FA code'}\n                      defaultLabel=\"2FA code\"\n                      handleChangeInput={this.handleChangeInputOtpCode}\n                      inputValue={otpCode}\n                      handleFocusInput={() => this.handleFieldFocus('code')}\n                      classNameLabel=\"cr-withdraw__label\"\n                      classNameInput=\"cr-withdraw__input\"\n                      autoFocus={false}\n                  />\n              </div>\n              <div className=\"cr-withdraw__divider cr-withdraw__divider-two\" />\n            </React.Fragment>\n        );\n    };\n\n    private handleClick = () => this.props.onClick(\n        this.state.amount,\n        this.state.total,\n        this.state.beneficiary,\n        this.state.otpCode,\n    );\n\n    private handleFieldFocus = (field: string) => {\n        switch (field) {\n            case 'amount':\n                this.setState(prev => ({\n                    withdrawAmountFocused: !prev.withdrawAmountFocused,\n                }));\n                break;\n            case 'code':\n                this.setState(prev => ({\n                    withdrawCodeFocused: !prev.withdrawCodeFocused,\n                }));\n                break;\n            default:\n                break;\n        }\n    };\n\n    private handleChangeInputAmount = (value: string) => {\n        const { fixed } = this.props;\n        const convertedValue = cleanPositiveFloatInput(String(value));\n\n        if (convertedValue.match(precisionRegExp(fixed))) {\n            const amount = (convertedValue !== '') ? Number(parseFloat(convertedValue).toFixed(fixed)) : '';\n            const total = (amount !== '') ? (amount - this.props.fee).toFixed(fixed) : '';\n\n            if (Number(total) <= 0) {\n                this.setTotal((0).toFixed(fixed));\n            } else {\n                this.setTotal(total);\n            }\n\n            this.setState({\n                amount: convertedValue,\n            });\n        }\n    };\n\n    private setTotal = (value: string) => {\n        this.setState({ total: value });\n    };\n\n    private handleChangeBeneficiary = (value: Beneficiary) => {\n        this.setState({\n            beneficiary: value,\n        });\n    };\n\n    private handleChangeInputOtpCode = (otpCode: string) => {\n        this.setState({ otpCode });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}