{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/Orders/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { Pagination, TabPanel } from '../../../components';\nimport { useUserOrdersHistoryFetch } from '../../../hooks';\nimport { ordersCancelAllFetch, ordersHistoryCancelFetch, selectOrdersFirstElemIndex, selectOrdersHistory, selectOrdersLastElemIndex, selectOrdersNextPageExists, selectShouldFetchCancelAll, selectShouldFetchCancelSingle } from '../../../modules';\nimport { OrdersItem } from './OrdersItem';\nvar userOrdersHistoryTabs = ['open', 'all'];\n\nvar OrdersComponent = function OrdersComponent() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentTabIndex = _React$useState2[0],\n      setCurrentTabIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentPageIndex = _React$useState4[0],\n      setPageIndex = _React$useState4[1];\n\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var orders = useSelector(selectOrdersHistory);\n  var shouldFetchCancelAll = useSelector(selectShouldFetchCancelAll);\n  var shouldFetchCancelSingle = useSelector(selectShouldFetchCancelSingle);\n  var firstElemIndex = useSelector(function (state) {\n    return selectOrdersFirstElemIndex(state, 25);\n  });\n  var lastElemIndex = useSelector(function (state) {\n    return selectOrdersLastElemIndex(state, 25);\n  });\n  var ordersNextPageExists = useSelector(selectOrdersNextPageExists);\n  var filteredOrders = currentTabIndex === 0 ? orders.filter(function (o) {\n    return ['wait', 'pending'].includes(o.state);\n  }) : orders;\n  useUserOrdersHistoryFetch(currentPageIndex, userOrdersHistoryTabs[currentTabIndex], 25);\n\n  var handleCancelAllOrders = function handleCancelAllOrders() {\n    if (shouldFetchCancelAll) {\n      dispatch(ordersCancelAllFetch());\n    }\n  };\n\n  var handleCancelSingleOrder = function handleCancelSingleOrder(id) {\n    return function () {\n      if (shouldFetchCancelAll && shouldFetchCancelSingle) {\n        dispatch(ordersHistoryCancelFetch({\n          id,\n          type: userOrdersHistoryTabs[currentTabIndex],\n          list: filteredOrders\n        }));\n      }\n    };\n  };\n\n  var onClickPrevPage = function onClickPrevPage() {\n    setPageIndex(currentPageIndex - 1);\n  };\n\n  var onClickNextPage = function onClickNextPage() {\n    setPageIndex(currentPageIndex + 1);\n  };\n\n  var renderOptionalHead = function renderOptionalHead() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-mobile-orders__optional-head\",\n      onClick: handleCancelAllOrders,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, intl.formatMessage({\n      id: 'page.mobile.orders.cancelAll'\n    })), /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  var renderTab = function renderTab(tabIndex) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tabIndex,\n      className: \"pg-mobile-orders__content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, filteredOrders.length ? filteredOrders.map(function (order, index) {\n      return /*#__PURE__*/React.createElement(OrdersItem, {\n        key: index,\n        order: order,\n        handleCancel: handleCancelSingleOrder,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      });\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"no-data\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, intl.formatMessage({\n      id: 'page.noDataToShow'\n    })), /*#__PURE__*/React.createElement(Pagination, {\n      firstElemIndex: firstElemIndex,\n      lastElemIndex: lastElemIndex,\n      page: currentPageIndex,\n      nextPageExists: ordersNextPageExists,\n      onClickPrevPage: onClickPrevPage,\n      onClickNextPage: onClickNextPage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  var renderTabs = function renderTabs() {\n    return [{\n      content: currentTabIndex === 0 ? renderTab(currentTabIndex) : null,\n      label: intl.formatMessage({\n        id: 'page.mobile.orders.tabs.open'\n      })\n    }, {\n      content: currentTabIndex === 1 ? renderTab(currentTabIndex) : null,\n      label: intl.formatMessage({\n        id: 'page.mobile.orders.tabs.all'\n      })\n    }];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabPanel, {\n    panels: renderTabs(),\n    currentTabIndex: currentTabIndex,\n    onCurrentTabChange: setCurrentTabIndex,\n    optionalHead: filteredOrders.length ? renderOptionalHead() : null,\n    isMobileDevice: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var Orders = React.memo(OrdersComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/Orders/index.tsx"],"names":["React","useIntl","useDispatch","useSelector","CloseIcon","Pagination","TabPanel","useUserOrdersHistoryFetch","ordersCancelAllFetch","ordersHistoryCancelFetch","selectOrdersFirstElemIndex","selectOrdersHistory","selectOrdersLastElemIndex","selectOrdersNextPageExists","selectShouldFetchCancelAll","selectShouldFetchCancelSingle","OrdersItem","userOrdersHistoryTabs","OrdersComponent","useState","currentTabIndex","setCurrentTabIndex","currentPageIndex","setPageIndex","dispatch","intl","orders","shouldFetchCancelAll","shouldFetchCancelSingle","firstElemIndex","state","lastElemIndex","ordersNextPageExists","filteredOrders","filter","o","includes","handleCancelAllOrders","handleCancelSingleOrder","id","type","list","onClickPrevPage","onClickNextPage","renderOptionalHead","formatMessage","renderTab","tabIndex","length","map","order","index","renderTabs","content","label","Orders","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { Pagination, TabPanel } from '../../../components';\nimport { useUserOrdersHistoryFetch } from '../../../hooks';\nimport {\n    ordersCancelAllFetch,\n    ordersHistoryCancelFetch,\n    RootState,\n    selectOrdersFirstElemIndex,\n    selectOrdersHistory,\n    selectOrdersLastElemIndex,\n    selectOrdersNextPageExists,\n    selectShouldFetchCancelAll,\n    selectShouldFetchCancelSingle,\n} from '../../../modules';\nimport { OrdersItem } from './OrdersItem';\n\nconst userOrdersHistoryTabs = ['open', 'all'];\n\nconst OrdersComponent: React.FC = () => {\n    const [currentTabIndex, setCurrentTabIndex] = React.useState(0);\n    const [currentPageIndex, setPageIndex] = React.useState(0);\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const orders = useSelector(selectOrdersHistory);\n    const shouldFetchCancelAll = useSelector(selectShouldFetchCancelAll);\n    const shouldFetchCancelSingle = useSelector(selectShouldFetchCancelSingle);\n    const firstElemIndex = useSelector((state: RootState) => selectOrdersFirstElemIndex(state, 25));\n    const lastElemIndex = useSelector((state: RootState) => selectOrdersLastElemIndex(state, 25));\n    const ordersNextPageExists = useSelector(selectOrdersNextPageExists);\n    const filteredOrders = currentTabIndex === 0 ? orders.filter(o => ['wait', 'pending'].includes(o.state)) : orders;\n    useUserOrdersHistoryFetch(currentPageIndex, userOrdersHistoryTabs[currentTabIndex], 25);\n\n    const handleCancelAllOrders = () => {\n        if (shouldFetchCancelAll) {\n            dispatch(ordersCancelAllFetch());\n        }\n    };\n\n    const handleCancelSingleOrder = (id: number) => () => {\n        if (shouldFetchCancelAll && shouldFetchCancelSingle) {\n            dispatch(ordersHistoryCancelFetch({\n                id,\n                type: userOrdersHistoryTabs[currentTabIndex],\n                list: filteredOrders,\n            }));\n        }\n    };\n\n    const onClickPrevPage = () => {\n        setPageIndex(currentPageIndex - 1);\n    };\n\n    const onClickNextPage = () => {\n        setPageIndex(currentPageIndex + 1);\n    };\n\n    const renderOptionalHead = () => (\n        <div className=\"pg-mobile-orders__optional-head\" onClick={handleCancelAllOrders}>\n            <span>{intl.formatMessage({id: 'page.mobile.orders.cancelAll'})}</span>\n            <CloseIcon />\n        </div>\n    );\n\n    const renderTab = (tabIndex: number) => (\n        <div key={tabIndex} className=\"pg-mobile-orders__content\">\n            {filteredOrders.length ? (\n                filteredOrders.map((order, index) => (\n                    <OrdersItem\n                        key={index}\n                        order={order}\n                        handleCancel={handleCancelSingleOrder}\n                    />\n                ))\n            ) : (\n                <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n            )}\n            <Pagination\n                firstElemIndex={firstElemIndex}\n                lastElemIndex={lastElemIndex}\n                page={currentPageIndex}\n                nextPageExists={ordersNextPageExists}\n                onClickPrevPage={onClickPrevPage}\n                onClickNextPage={onClickNextPage}\n            />\n        </div>\n    );\n\n    const renderTabs = () => [\n        {\n            content: currentTabIndex === 0 ? renderTab(currentTabIndex) : null,\n            label: intl.formatMessage({id: 'page.mobile.orders.tabs.open'}),\n        },\n        {\n            content: currentTabIndex === 1 ? renderTab(currentTabIndex) : null,\n            label: intl.formatMessage({id: 'page.mobile.orders.tabs.all'}),\n        },\n    ];\n\n    return (\n        <div className=\"pg-mobile-orders\">\n            <TabPanel\n                panels={renderTabs()}\n                currentTabIndex={currentTabIndex}\n                onCurrentTabChange={setCurrentTabIndex}\n                optionalHead={filteredOrders.length ? renderOptionalHead() : null}\n                isMobileDevice={true}\n            />\n        </div>\n    );\n};\n\nexport const Orders = React.memo(OrdersComponent);\n"]},"metadata":{},"sourceType":"module"}