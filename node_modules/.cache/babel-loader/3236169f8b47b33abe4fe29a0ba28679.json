{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileAuthDetails/index.tsx\";\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ProfileTwoFactorAuth } from '../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { ChangePassword, CustomInput, Modal } from '../../components';\nimport { entropyPasswordFetch, selectConfigs, selectCurrentPasswordEntropy, selectUserInfo } from '../../modules';\nimport { changePasswordFetch, selectChangePasswordSuccess, toggle2faFetch } from '../../modules/user/profile';\n\nvar ProfileAuthDetailsComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileAuthDetailsComponent, _React$Component);\n\n  var _super = _createSuper(ProfileAuthDetailsComponent);\n\n  function ProfileAuthDetailsComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileAuthDetailsComponent);\n\n    _this = _super.call(this, props);\n\n    _this.renderProfileTwoFactor = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ProfileTwoFactorAuth, {\n        is2faEnabled: _this.props.user.otp,\n        navigateTo2fa: _this.handleNavigateTo2fa,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this.renderModalHeader = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.content.twoFactorAuthentication.modalHeader\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__cros-icon\",\n        onClick: _this.closeModal,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        className: \"close-icon\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      })))));\n    };\n\n    _this.renderModalBody = function () {\n      var _this$state = _this.state,\n          code2FA = _this$state.code2FA,\n          code2FAFocus = _this$state.code2FAFocus;\n      var code2FAClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': code2FAFocus\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-exchange-modal-submit-body pg-exchange-modal-submit-body-2fa\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: code2FAClass,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"text\",\n        label: \"2FA code\",\n        placeholder: \"2FA code\",\n        defaultLabel: \"\",\n        handleFocusInput: _this.handleClickFieldFocus('code2FAFocus'),\n        handleChangeInput: _this.handleChange2FACode,\n        inputValue: code2FA,\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        autoFocus: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this.renderModalFooter = function () {\n      var code2FA = _this.state.code2FA;\n      var isValid2FA = code2FA.match('^[0-9]{6}$');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-exchange-modal-submit-footer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        disabled: !isValid2FA,\n        onClick: _this.handleDisable2FA,\n        size: \"lg\",\n        variant: \"primary\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.twoFactorAuthentication.disable'\n      })));\n    };\n\n    _this.handleChange2FACode = function (value) {\n      _this.setState({\n        code2FA: value\n      });\n    };\n\n    _this.handleDisable2FA = function () {\n      _this.props.toggle2fa({\n        code: _this.state.code2FA,\n        enable: false\n      });\n\n      _this.closeModal();\n\n      _this.handleChange2FACode('');\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    _this.toggleChangeModal = function () {\n      _this.setState({\n        showChangeModal: !_this.state.showChangeModal\n      });\n    };\n\n    _this.handleNavigateTo2fa = function (enable2fa) {\n      if (enable2fa) {\n        _this.props.history.push('/security/2fa', {\n          enable2fa\n        });\n      } else {\n        _this.setState({\n          showModal: !_this.state.showModal\n        });\n      }\n    };\n\n    _this.handleClickFieldFocus = function (field) {\n      return function () {\n        _this.handleFieldFocus(field);\n      };\n    };\n\n    _this.handleFieldFocus = function (field) {\n      // @ts-ignore\n      _this.setState(function (prev) {\n        return {\n          [field]: !prev[field]\n        };\n      });\n    };\n\n    _this.state = {\n      showChangeModal: false,\n      showModal: false,\n      code2FA: '',\n      code2FAFocus: false\n    };\n    return _this;\n  }\n\n  _createClass(ProfileAuthDetailsComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (next.passwordChangeSuccess) {\n        this.setState({\n          showChangeModal: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          configs = _this$props.configs,\n          currentPasswordEntropy = _this$props.currentPasswordEntropy;\n      var modal = this.state.showChangeModal ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"cr-email-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-change-password-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ChangePassword, {\n        handleChangePassword: this.props.changePassword,\n        title: this.props.intl.formatMessage({\n          id: 'page.body.profile.header.account.content.password.change'\n        }),\n        closeModal: this.toggleChangeModal,\n        configs: configs,\n        currentPasswordEntropy: currentPasswordEntropy,\n        fetchCurrentPasswordEntropy: this.props.fetchCurrentPasswordEntropy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }\n      })))) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__box pg-profile-page__left-col__basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__box-header pg-profile-page__left-col__basic__info-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__left-col__basic__info-row__block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row pg-profile-page__details-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, user.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, \"UID: \", user.uid)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.password'\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"************\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-block mt-3 mb-3 btn-lg btn btn-primary w-25\",\n        onClick: this.toggleChangeModal,\n        size: \"lg\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.password.button.change'\n      })), modal), this.renderProfileTwoFactor(), /*#__PURE__*/React.createElement(Modal, {\n        className: \"pg-profile-page__disable-2fa-modal\",\n        show: this.state.showModal,\n        header: this.renderModalHeader(),\n        content: this.renderModalBody(),\n        footer: this.renderModalFooter(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ProfileAuthDetailsComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state),\n    passwordChangeSuccess: selectChangePasswordSuccess(state),\n    currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n    configs: selectConfigs(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changePassword: function changePassword(_ref) {\n      var old_password = _ref.old_password,\n          new_password = _ref.new_password,\n          confirm_password = _ref.confirm_password;\n      return dispatch(changePasswordFetch({\n        old_password,\n        new_password,\n        confirm_password\n      }));\n    },\n    toggle2fa: function toggle2fa(_ref2) {\n      var code = _ref2.code,\n          enable = _ref2.enable;\n      return dispatch(toggle2faFetch({\n        code,\n        enable\n      }));\n    },\n    fetchCurrentPasswordEntropy: function fetchCurrentPasswordEntropy(payload) {\n      return dispatch(entropyPasswordFetch(payload));\n    }\n  };\n};\n\nvar ProfileAuthDetailsConnected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAuthDetailsComponent)); // tslint:disable-next-line:no-any\n\nvar ProfileAuthDetails = withRouter(ProfileAuthDetailsConnected);\nexport { ProfileAuthDetails };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileAuthDetails/index.tsx"],"names":["cr","React","Button","FormattedMessage","injectIntl","connect","withRouter","ProfileTwoFactorAuth","CloseIcon","ChangePassword","CustomInput","Modal","entropyPasswordFetch","selectConfigs","selectCurrentPasswordEntropy","selectUserInfo","changePasswordFetch","selectChangePasswordSuccess","toggle2faFetch","ProfileAuthDetailsComponent","props","renderProfileTwoFactor","user","otp","handleNavigateTo2fa","renderModalHeader","closeModal","renderModalBody","state","code2FA","code2FAFocus","code2FAClass","handleClickFieldFocus","handleChange2FACode","renderModalFooter","isValid2FA","match","handleDisable2FA","intl","formatMessage","id","value","setState","toggle2fa","code","enable","showModal","toggleChangeModal","showChangeModal","enable2fa","history","push","field","handleFieldFocus","prev","next","passwordChangeSuccess","configs","currentPasswordEntropy","modal","changePassword","fetchCurrentPasswordEntropy","email","uid","Component","mapStateToProps","mapDispatchToProps","dispatch","old_password","new_password","confirm_password","payload","ProfileAuthDetailsConnected","ProfileAuthDetails"],"mappings":"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","sourcesContent":["import cr from 'classnames';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ProfileTwoFactorAuth } from '../';\nimport { IntlProps } from '../../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { ChangePassword, CustomInput, Modal } from '../../components';\nimport {\n    Configs,\n    entropyPasswordFetch,\n    RootState,\n    selectConfigs,\n    selectCurrentPasswordEntropy,\n    selectUserInfo,\n    User,\n} from '../../modules';\nimport {\n    changePasswordFetch,\n    selectChangePasswordSuccess,\n    toggle2faFetch,\n} from '../../modules/user/profile';\n\n\ninterface ReduxProps {\n    user: User;\n    passwordChangeSuccess?: boolean;\n    configs: Configs;\n    currentPasswordEntropy: number;\n}\n\ninterface RouterProps {\n    history: History;\n}\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\n\ninterface DispatchProps {\n    changePassword: typeof changePasswordFetch;\n    clearPasswordChangeError: () => void;\n    toggle2fa: typeof toggle2faFetch;\n    fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n}\n\ninterface ProfileProps {\n    showModal: boolean;\n}\n\ninterface State {\n    showChangeModal: boolean;\n    showModal: boolean;\n    code2FA: string;\n    code2FAFocus: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & ProfileProps & IntlProps & OnChangeEvent;\n\nclass ProfileAuthDetailsComponent extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showChangeModal: false,\n            showModal: false,\n            code2FA: '',\n            code2FAFocus: false,\n        };\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (next.passwordChangeSuccess) {\n            this.setState({ showChangeModal: false });\n        }\n    }\n\n    public render() {\n        const {\n            user,\n            configs,\n            currentPasswordEntropy,\n        } = this.props;\n\n        const modal = this.state.showChangeModal ? (\n            <div className=\"cr-modal\">\n              <form className=\"cr-email-form\">\n                <div className=\"pg-change-password-screen\">\n                   <ChangePassword\n                        handleChangePassword={this.props.changePassword}\n                        title={this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password.change' })}\n                        closeModal={this.toggleChangeModal}\n                        configs={configs}\n                        currentPasswordEntropy={currentPasswordEntropy}\n                        fetchCurrentPasswordEntropy={this.props.fetchCurrentPasswordEntropy}\n                    />\n                </div>\n              </form>\n            </div>\n        ) : null;\n\n        return (\n            <div className=\"pg-profile-page__box pg-profile-page__left-col__basic\">\n                <div className=\"pg-profile-page__box-header pg-profile-page__left-col__basic__info-row\">\n                    <div className=\"pg-profile-page__left-col__basic__info-row__block\">\n                        <div className=\"pg-profile-page__row pg-profile-page__details-user\">\n                            <p>{user.email}</p>\n                        </div>\n                        <div className=\"pg-profile-page__row\">\n                            <h2>UID: {user.uid}</h2>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"pg-profile-page__row\">\n                    <div>\n                        <div className=\"pg-profile-page__label\">\n                            {this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password'})}\n                        </div>\n                        <div>\n                            ************\n                        </div>\n                    </div>\n                    <Button\n                        className=\"btn-block mt-3 mb-3 btn-lg btn btn-primary w-25\"\n                        onClick={this.toggleChangeModal}\n                        size=\"lg\"\n                        variant=\"primary\"\n                    >\n                        {this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password.button.change'})}\n                    </Button>\n                    {modal}\n                </div>\n                {this.renderProfileTwoFactor()}\n                <Modal\n                    className=\"pg-profile-page__disable-2fa-modal\"\n                    show={this.state.showModal}\n                    header={this.renderModalHeader()}\n                    content={this.renderModalBody()}\n                    footer={this.renderModalFooter()}\n                />\n            </div>\n        );\n    }\n\n    private renderProfileTwoFactor = () => {\n        return (\n            <React.Fragment>\n                <div className=\"pg-profile-page__row\">\n                    <ProfileTwoFactorAuth is2faEnabled={this.props.user.otp} navigateTo2fa={this.handleNavigateTo2fa}/>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    private renderModalHeader = () => {\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        <FormattedMessage id=\"page.body.profile.header.account.content.twoFactorAuthentication.modalHeader\"/>\n                        <div className=\"cr-email-form__cros-icon\" onClick={this.closeModal}>\n                            <CloseIcon className=\"close-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalBody = () => {\n        const { code2FA, code2FAFocus } = this.state;\n\n        const code2FAClass = cr('cr-email-form__group', {\n            'cr-email-form__group--focused': code2FAFocus,\n        });\n\n        return (\n            <div className=\"pg-exchange-modal-submit-body pg-exchange-modal-submit-body-2fa\">\n                <div className={code2FAClass}>\n                    <CustomInput\n                        type=\"text\"\n                        label=\"2FA code\"\n                        placeholder=\"2FA code\"\n                        defaultLabel=\"\"\n                        handleFocusInput={this.handleClickFieldFocus('code2FAFocus')}\n                        handleChangeInput={this.handleChange2FACode}\n                        inputValue={code2FA}\n                        classNameLabel=\"cr-email-form__label\"\n                        classNameInput=\"cr-email-form__input\"\n                        autoFocus={true}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalFooter = () => {\n        const { code2FA } = this.state;\n        const isValid2FA = code2FA.match('^[0-9]{6}$');\n\n        return (\n            <div className=\"pg-exchange-modal-submit-footer\">\n                <Button\n                    block={true}\n                    disabled={!isValid2FA}\n                    onClick={this.handleDisable2FA}\n                    size=\"lg\"\n                    variant=\"primary\"\n                >\n                    {this.props.intl.formatMessage({id: 'page.body.profile.header.account.content.twoFactorAuthentication.disable'})}\n                </Button>\n            </div>\n        );\n    };\n\n    private handleChange2FACode = (value: string) => {\n        this.setState({\n            code2FA: value,\n        });\n    };\n\n    private handleDisable2FA = () => {\n        this.props.toggle2fa({\n            code: this.state.code2FA,\n            enable: false,\n        });\n        this.closeModal();\n        this.handleChange2FACode('');\n    };\n\n    private closeModal = () => {\n        this.setState({\n            showModal: false,\n        });\n      };\n\n    private toggleChangeModal = () => {\n        this.setState({\n            showChangeModal: !this.state.showChangeModal,\n        });\n    };\n\n    private handleNavigateTo2fa = (enable2fa: boolean) => {\n        if (enable2fa) {\n            this.props.history.push('/security/2fa', { enable2fa });\n        } else {\n            this.setState({\n                showModal: !this.state.showModal,\n            });\n        }\n    };\n\n    private handleClickFieldFocus = (field: string) => () => {\n        this.handleFieldFocus(field);\n    };\n\n    private handleFieldFocus = (field: string) => {\n        // @ts-ignore\n        this.setState(prev => ({\n            [field]: !prev[field],\n        }));\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    user: selectUserInfo(state),\n    passwordChangeSuccess: selectChangePasswordSuccess(state),\n    currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n    configs: selectConfigs(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changePassword: ({ old_password, new_password, confirm_password }) =>\n        dispatch(changePasswordFetch({ old_password, new_password, confirm_password })),\n    toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n    fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n});\n\nconst ProfileAuthDetailsConnected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAuthDetailsComponent));\n// tslint:disable-next-line:no-any\nconst ProfileAuthDetails = withRouter(ProfileAuthDetailsConnected as any);\n\nexport {\n    ProfileAuthDetails,\n};\n"]},"metadata":{},"sourceType":"module"}