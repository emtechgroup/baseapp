{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/screens/TradingScreen/index.tsx\";\n\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { GridItem } from '../../components/GridItem';\nimport { MarketDepthsComponent, MarketsComponent, OpenOrdersComponent, OrderBook, OrderComponent, RecentTrades, ToolBar, TradingChart } from '../../containers';\nimport { getUrlPart, setDocumentTitle } from '../../helpers';\nimport { selectCurrentMarket, selectMarketTickers, selectUserInfo, selectUserLoggedIn, setCurrentMarket as _setCurrentMarket, setCurrentPrice as _setCurrentPrice } from '../../modules';\nimport { saveLayouts as _saveLayouts, selectGridLayoutState } from '../../modules/public/gridLayout';\nimport { marketsFetch as _marketsFetch, selectMarkets } from '../../modules/public/markets';\nimport { depthFetch as _depthFetch } from '../../modules/public/orderBook';\nimport { rangerConnectFetch } from '../../modules/public/ranger';\nimport { selectRanger } from '../../modules/public/ranger/selectors';\n\nvar _require = require('react-grid-layout'),\n    WidthProvider = _require.WidthProvider,\n    Responsive = _require.Responsive;\n\nvar breakpoints = {\n  lg: 1200,\n  md: 996,\n  sm: 768,\n  xs: 480,\n  xxs: 0\n};\nvar cols = {\n  lg: 24,\n  md: 24,\n  sm: 12,\n  xs: 12,\n  xxs: 12\n};\nvar ReactGridLayout = WidthProvider(Responsive);\n\nvar TradingWrapper = function TradingWrapper(props) {\n  var orderComponentResized = props.orderComponentResized,\n      orderBookComponentResized = props.orderBookComponentResized,\n      layouts = props.layouts,\n      handleResize = props.handleResize,\n      handeDrag = props.handeDrag;\n  var children = React.useMemo(function () {\n    var data = [{\n      i: 1,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(OrderComponent, {\n          size: orderComponentResized,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 2,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(TradingChart, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 3,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(OrderBook, {\n          size: orderBookComponentResized,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 4,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(MarketDepthsComponent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 5,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(OpenOrdersComponent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 6,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(RecentTrades, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 31\n          }\n        });\n      }\n    }, {\n      i: 7,\n      render: function render() {\n        return /*#__PURE__*/React.createElement(MarketsComponent, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }\n        });\n      }\n    }];\n    return data.map(function (child) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: child.i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, child.render ? child.render() : \"Child Body \".concat(child.i)));\n    });\n  }, [orderComponentResized, orderBookComponentResized]);\n  return /*#__PURE__*/React.createElement(ReactGridLayout, {\n    breakpoints: breakpoints,\n    cols: cols,\n    draggableHandle: \".cr-table-header__content, .pg-trading-screen__tab-panel, .draggable-container\",\n    rowHeight: 14,\n    layouts: layouts,\n    onLayoutChange: function onLayoutChange() {\n      return;\n    },\n    margin: [5, 5],\n    onResize: handleResize,\n    onDrag: handeDrag,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nvar Trading = /*#__PURE__*/function (_React$Component) {\n  _inherits(Trading, _React$Component);\n\n  var _super = _createSuper(Trading);\n\n  function Trading() {\n    var _this2;\n\n    _classCallCheck(this, Trading);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      orderComponentResized: 5,\n      orderBookComponentResized: 5\n    };\n\n    _this2.setMarketFromUrlIfExists = function (markets) {\n      var urlMarket = getUrlPart(2, window.location.pathname);\n      var market = markets.find(function (item) {\n        return item.id === urlMarket;\n      });\n\n      if (market) {\n        _this2.props.setCurrentMarket(market);\n      }\n    };\n\n    _this2.setTradingTitle = function (market, tickers) {\n      var tickerPrice = tickers[market.id] ? tickers[market.id].last : '0.0';\n      document.title = \"\".concat(Decimal.format(tickerPrice, market.price_precision, ','), \" \").concat(market.name);\n    };\n\n    _this2.handleResize = function (layout, oldItem, newItem) {\n      switch (oldItem.i) {\n        case '1':\n          _this2.setState({\n            orderComponentResized: newItem.w\n          });\n\n          break;\n\n        case '3':\n          _this2.setState({\n            orderBookComponentResized: newItem.w\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this2.handeDrag = function (layout, oldItem, newItem) {\n      var _iterator = _createForOfIteratorHelper(layout),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var elem = _step.value;\n\n          if (elem.y < 0) {\n            elem.y = 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(Trading, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setDocumentTitle('Trading');\n      var _this$props = this.props,\n          markets = _this$props.markets,\n          currentMarket = _this$props.currentMarket,\n          userLoggedIn = _this$props.userLoggedIn,\n          _this$props$rangerSta = _this$props.rangerState,\n          connected = _this$props$rangerSta.connected,\n          withAuth = _this$props$rangerSta.withAuth;\n\n      if (markets.length < 1) {\n        this.props.marketsFetch();\n      }\n\n      if (currentMarket && !incrementalOrderBook()) {\n        this.props.depthFetch(currentMarket);\n      }\n\n      if (!connected) {\n        this.props.rangerConnect({\n          withAuth: userLoggedIn\n        });\n      }\n\n      if (userLoggedIn && !withAuth) {\n        this.props.rangerConnect({\n          withAuth: userLoggedIn\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setCurrentPrice(undefined);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props2 = this.props,\n          history = _this$props2.history,\n          markets = _this$props2.markets,\n          userLoggedIn = _this$props2.userLoggedIn;\n\n      if (userLoggedIn !== nextProps.userLoggedIn) {\n        this.props.rangerConnect({\n          withAuth: nextProps.userLoggedIn\n        });\n      }\n\n      if (markets.length !== nextProps.markets.length) {\n        this.setMarketFromUrlIfExists(nextProps.markets);\n      }\n\n      if (nextProps.currentMarket) {\n        var marketFromUrl = history.location.pathname.split('/');\n        var marketNotMatched = nextProps.currentMarket.id !== marketFromUrl[marketFromUrl.length - 1];\n\n        if (marketNotMatched) {\n          history.replace(\"/trading/\".concat(nextProps.currentMarket.id));\n\n          if (!incrementalOrderBook()) {\n            this.props.depthFetch(nextProps.currentMarket);\n          }\n        }\n      }\n\n      if (nextProps.currentMarket && nextProps.tickers) {\n        this.setTradingTitle(nextProps.currentMarket, nextProps.tickers);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          orderComponentResized = _this$state.orderComponentResized,\n          orderBookComponentResized = _this$state.orderBookComponentResized;\n      var rgl = this.props.rgl;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'pg-trading-screen',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'pg-trading-wrap',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ToolBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-react-toolbox\": \"grid\",\n        className: 'cr-grid',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-grid__grid-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TradingWrapper, {\n        layouts: rgl.layouts,\n        orderComponentResized: orderComponentResized,\n        orderBookComponentResized: orderBookComponentResized,\n        handleResize: this.handleResize,\n        handeDrag: this.handeDrag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Trading;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    user: selectUserInfo(state),\n    rangerState: selectRanger(state),\n    userLoggedIn: selectUserLoggedIn(state),\n    rgl: selectGridLayoutState(state),\n    tickers: selectMarketTickers(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    marketsFetch: function marketsFetch() {\n      return dispatch(_marketsFetch());\n    },\n    depthFetch: function depthFetch(payload) {\n      return dispatch(_depthFetch(payload));\n    },\n    rangerConnect: function rangerConnect(payload) {\n      return dispatch(rangerConnectFetch(payload));\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    },\n    setCurrentMarket: function setCurrentMarket(payload) {\n      return dispatch(_setCurrentMarket(payload));\n    },\n    saveLayouts: function saveLayouts(payload) {\n      return dispatch(_saveLayouts(payload));\n    }\n  };\n};\n\nexport var TradingScreen = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(Trading);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/screens/TradingScreen/index.tsx"],"names":["React","injectIntl","connect","withRouter","compose","incrementalOrderBook","Decimal","GridItem","MarketDepthsComponent","MarketsComponent","OpenOrdersComponent","OrderBook","OrderComponent","RecentTrades","ToolBar","TradingChart","getUrlPart","setDocumentTitle","selectCurrentMarket","selectMarketTickers","selectUserInfo","selectUserLoggedIn","setCurrentMarket","setCurrentPrice","saveLayouts","selectGridLayoutState","marketsFetch","selectMarkets","depthFetch","rangerConnectFetch","selectRanger","require","WidthProvider","Responsive","breakpoints","lg","md","sm","xs","xxs","cols","ReactGridLayout","TradingWrapper","props","orderComponentResized","orderBookComponentResized","layouts","handleResize","handeDrag","children","useMemo","data","i","render","map","child","Trading","state","setMarketFromUrlIfExists","markets","urlMarket","window","location","pathname","market","find","item","id","setTradingTitle","tickers","tickerPrice","last","document","title","format","price_precision","name","layout","oldItem","newItem","setState","w","elem","y","currentMarket","userLoggedIn","rangerState","connected","withAuth","length","rangerConnect","undefined","nextProps","history","marketFromUrl","split","marketNotMatched","replace","rgl","Component","mapStateToProps","user","mapDispatchToProps","dispatch","payload","TradingScreen"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { GridChildInterface, GridItem } from '../../components/GridItem';\nimport {\n    MarketDepthsComponent,\n    MarketsComponent,\n    OpenOrdersComponent,\n    OrderBook,\n    OrderComponent,\n    RecentTrades,\n    ToolBar,\n    TradingChart,\n} from '../../containers';\nimport { getUrlPart, setDocumentTitle } from '../../helpers';\nimport {\n    RootState,\n    selectCurrentMarket,\n    selectMarketTickers,\n    selectUserInfo,\n    selectUserLoggedIn,\n    setCurrentMarket,\n    setCurrentPrice,\n    Ticker,\n    User,\n} from '../../modules';\nimport { GridLayoutState, saveLayouts, selectGridLayoutState } from '../../modules/public/gridLayout';\nimport { Market, marketsFetch, selectMarkets } from '../../modules/public/markets';\nimport { depthFetch } from '../../modules/public/orderBook';\nimport { rangerConnectFetch, RangerConnectFetch } from '../../modules/public/ranger';\nimport { RangerState } from '../../modules/public/ranger/reducer';\nimport { selectRanger } from '../../modules/public/ranger/selectors';\n\nconst { WidthProvider, Responsive } = require('react-grid-layout');\n\nconst breakpoints = {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0,\n};\n\nconst cols = {\n    lg: 24,\n    md: 24,\n    sm: 12,\n    xs: 12,\n    xxs: 12,\n};\n\ninterface ReduxProps {\n    currentMarket: Market | undefined;\n    markets: Market[];\n    user: User;\n    rangerState: RangerState;\n    userLoggedIn: boolean;\n    rgl: GridLayoutState;\n    tickers: {\n        [pair: string]: Ticker,\n    };\n}\n\ninterface DispatchProps {\n    depthFetch: typeof depthFetch;\n    marketsFetch: typeof marketsFetch;\n    rangerConnect: typeof rangerConnectFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n    setCurrentMarket: typeof setCurrentMarket;\n    saveLayouts: typeof saveLayouts;\n}\n\ninterface StateProps {\n    orderComponentResized: number;\n    orderBookComponentResized: number;\n}\n\nconst ReactGridLayout = WidthProvider(Responsive);\ntype Props = DispatchProps & ReduxProps & RouteComponentProps & IntlProps;\n\nconst TradingWrapper = props => {\n    const { orderComponentResized, orderBookComponentResized, layouts, handleResize, handeDrag } = props;\n    const children = React.useMemo(() => {\n        const data = [\n            {\n                i: 1,\n                render: () => <OrderComponent size={orderComponentResized} />,\n            },\n            {\n                i: 2,\n                render: () => <TradingChart />,\n            },\n            {\n                i: 3,\n                render: () => <OrderBook size={orderBookComponentResized} />,\n            },\n            {\n                i: 4,\n                render: () => <MarketDepthsComponent />,\n            },\n            {\n                i: 5,\n                render: () => <OpenOrdersComponent/>,\n            },\n            {\n                i: 6,\n                render: () => <RecentTrades/>,\n            },\n            {\n                i: 7,\n                render: () => <MarketsComponent/>,\n            },\n        ];\n\n        return data.map((child: GridChildInterface) => (\n            <div key={child.i}>\n                <GridItem>{child.render ? child.render() : `Child Body ${child.i}`}</GridItem>\n            </div>\n        ));\n    }, [orderComponentResized, orderBookComponentResized]);\n\n    return (\n        <ReactGridLayout\n            breakpoints={breakpoints}\n            cols={cols}\n            draggableHandle=\".cr-table-header__content, .pg-trading-screen__tab-panel, .draggable-container\"\n            rowHeight={14}\n            layouts={layouts}\n            onLayoutChange={() => {return;}}\n            margin={[5, 5]}\n            onResize={handleResize}\n            onDrag={handeDrag}\n        >\n            {children}\n        </ReactGridLayout>\n    );\n};\n\nclass Trading extends React.Component<Props, StateProps> {\n    public readonly state = {\n        orderComponentResized: 5,\n        orderBookComponentResized: 5,\n    };\n\n    public componentDidMount() {\n        setDocumentTitle('Trading');\n        const { markets, currentMarket, userLoggedIn, rangerState: { connected, withAuth } } = this.props;\n\n        if (markets.length < 1) {\n            this.props.marketsFetch();\n        }\n\n        if (currentMarket && !incrementalOrderBook()) {\n            this.props.depthFetch(currentMarket);\n        }\n\n        if (!connected) {\n            this.props.rangerConnect({ withAuth: userLoggedIn });\n        }\n\n        if (userLoggedIn && !withAuth) {\n            this.props.rangerConnect({ withAuth: userLoggedIn });\n        }\n    }\n\n    public componentWillUnmount() {\n        this.props.setCurrentPrice(undefined);\n    }\n\n    public componentWillReceiveProps(nextProps) {\n        const {\n            history,\n            markets,\n            userLoggedIn,\n        } = this.props;\n\n        if (userLoggedIn !== nextProps.userLoggedIn) {\n            this.props.rangerConnect({ withAuth: nextProps.userLoggedIn });\n        }\n\n        if (markets.length !== nextProps.markets.length) {\n            this.setMarketFromUrlIfExists(nextProps.markets);\n        }\n\n        if (nextProps.currentMarket) {\n            const marketFromUrl = history.location.pathname.split('/');\n            const marketNotMatched = nextProps.currentMarket.id !== marketFromUrl[marketFromUrl.length - 1];\n            if (marketNotMatched) {\n                history.replace(`/trading/${nextProps.currentMarket.id}`);\n\n                if (!incrementalOrderBook()) {\n                  this.props.depthFetch(nextProps.currentMarket);\n                }\n            }\n        }\n\n        if (nextProps.currentMarket && nextProps.tickers) {\n            this.setTradingTitle(nextProps.currentMarket, nextProps.tickers);\n        }\n    }\n\n    public render() {\n        const { orderComponentResized, orderBookComponentResized } = this.state;\n        const { rgl } = this.props;\n\n        return (\n            <div className={'pg-trading-screen'}>\n                <div className={'pg-trading-wrap'}>\n                    <ToolBar/>\n                    <div data-react-toolbox=\"grid\" className={'cr-grid'}>\n                        <div className=\"cr-grid__grid-wrapper\">\n                            <TradingWrapper\n                                layouts={rgl.layouts}\n                                orderComponentResized={orderComponentResized}\n                                orderBookComponentResized={orderBookComponentResized}\n                                handleResize={this.handleResize}\n                                handeDrag={this.handeDrag}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private setMarketFromUrlIfExists = (markets: Market[]): void => {\n        const urlMarket: string = getUrlPart(2, window.location.pathname);\n        const market: Market | undefined = markets.find(item => item.id === urlMarket);\n\n        if (market) {\n            this.props.setCurrentMarket(market);\n        }\n    };\n\n    private setTradingTitle = (market: Market, tickers: ReduxProps['tickers']) => {\n        const tickerPrice = tickers[market.id] ? tickers[market.id].last : '0.0';\n        document.title = `${Decimal.format(tickerPrice, market.price_precision, ',')} ${market.name}`;\n    };\n\n    private handleResize = (layout, oldItem, newItem) => {\n        switch (oldItem.i) {\n            case '1':\n                this.setState({\n                    orderComponentResized: newItem.w,\n                });\n                break;\n            case '3':\n                this.setState({\n                    orderBookComponentResized: newItem.w,\n                });\n                break;\n            default:\n                break;\n        }\n    };\n\n    private handeDrag = (layout, oldItem, newItem) => {\n        for (const elem of layout) {\n            if (elem.y < 0) {\n                elem.y = 0;\n            }\n        }\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    user: selectUserInfo(state),\n    rangerState: selectRanger(state),\n    userLoggedIn: selectUserLoggedIn(state),\n    rgl: selectGridLayoutState(state),\n    tickers: selectMarketTickers(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    marketsFetch: () => dispatch(marketsFetch()),\n    depthFetch: payload => dispatch(depthFetch(payload)),\n    rangerConnect: (payload: RangerConnectFetch['payload']) => dispatch(rangerConnectFetch(payload)),\n    setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    setCurrentMarket: payload => dispatch(setCurrentMarket(payload)),\n    saveLayouts: payload => dispatch(saveLayouts(payload)),\n});\n\nexport const TradingScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Trading) as React.ComponentClass;\n"]},"metadata":{},"sourceType":"module"}