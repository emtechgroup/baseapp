{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/PasswordStrengthMeter/index.tsx\";\n\nimport * as React from 'react';\nimport { passwordEntropyStep } from '../../api';\nimport { PasswordStrengthTip } from '../PasswordStrengthTip';\n\nvar renderPasswordStrengthMeter = function renderPasswordStrengthMeter(passwordStrengthMeterLength) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength-meter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength-meter__block \".concat(passwordStrengthClassName(passwordStrengthMeterLength)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar renderPasswordStrengthTip = function renderPasswordStrengthTip(props, passwordStrengthMeterLength) {\n  return props.passwordPopUp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, props.translate('page.header.signUp.strength.password')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength-status \".concat(passwordStrengthClassName(passwordStrengthMeterLength)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, passwordStrengthStatus(passwordStrengthMeterLength, props.translate))), /*#__PURE__*/React.createElement(PasswordStrengthTip, {\n    passwordErrorFirstSolved: props.passwordErrorFirstSolved,\n    passwordErrorSecondSolved: props.passwordErrorSecondSolved,\n    passwordErrorThirdSolved: props.passwordErrorThirdSolved,\n    passwordPopUp: props.passwordPopUp,\n    translate: props.translate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : null;\n};\n\nvar passwordStrengthClassName = function passwordStrengthClassName(passwordStrengthMeterLength) {\n  switch (passwordStrengthMeterLength) {\n    case 0:\n      return 'too-weak';\n\n    case 1:\n      return 'weak';\n\n    case 2:\n      return 'good';\n\n    case 3:\n      return 'strong';\n\n    case 4:\n      return 'very-strong';\n\n    default:\n      return 'too-weak';\n  }\n};\n\nvar passwordStrengthStatus = function passwordStrengthStatus(passwordStrengthMeterLength, translate) {\n  switch (passwordStrengthMeterLength) {\n    case 0:\n      return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n\n    case 1:\n      return translate('page.header.signUp.password.too.weak') || 'WEAK';\n\n    case 2:\n      return translate('page.header.signUp.password.good') || 'GOOD';\n\n    case 3:\n      return translate('page.header.signUp.password.strong') || 'STRONG';\n\n    case 4:\n      return translate('page.header.signUp.password.very.strong') || 'VERY STRONG';\n\n    default:\n      return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n  }\n};\n\nvar PasswordStrengthMeterComponent = function PasswordStrengthMeterComponent(props) {\n  var passwordErrorSecondSolved = props.passwordErrorSecondSolved,\n      passwordErrorFirstSolved = props.passwordErrorFirstSolved,\n      passwordErrorThirdSolved = props.passwordErrorThirdSolved,\n      minPasswordEntropy = props.minPasswordEntropy,\n      currentPasswordEntropy = props.currentPasswordEntropy,\n      passwordExist = props.passwordExist;\n  var passwordComplite = passwordErrorSecondSolved && passwordErrorFirstSolved && passwordErrorThirdSolved;\n  var AVG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep();\n  var STRONG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep() * 2;\n  var passwordStrengthMeterLength = -1;\n\n  if (currentPasswordEntropy < minPasswordEntropy) {\n    passwordStrengthMeterLength = 0;\n  }\n\n  if (currentPasswordEntropy < minPasswordEntropy && passwordErrorFirstSolved || passwordErrorFirstSolved) {\n    passwordStrengthMeterLength = 1;\n  }\n\n  if (passwordComplite) {\n    if (currentPasswordEntropy >= minPasswordEntropy && currentPasswordEntropy < AVG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 2;\n    }\n\n    if (currentPasswordEntropy >= AVG_PASSWORD_ENTROPY && currentPasswordEntropy < STRONG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 3;\n    }\n\n    if (currentPasswordEntropy >= STRONG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 4;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, passwordExist ? renderPasswordStrengthMeter(passwordStrengthMeterLength) : null, renderPasswordStrengthTip(props, passwordStrengthMeterLength));\n};\n\nexport var PasswordStrengthMeter = React.memo(PasswordStrengthMeterComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/PasswordStrengthMeter/index.tsx"],"names":["React","passwordEntropyStep","PasswordStrengthTip","renderPasswordStrengthMeter","passwordStrengthMeterLength","passwordStrengthClassName","renderPasswordStrengthTip","props","passwordPopUp","translate","passwordStrengthStatus","passwordErrorFirstSolved","passwordErrorSecondSolved","passwordErrorThirdSolved","PasswordStrengthMeterComponent","minPasswordEntropy","currentPasswordEntropy","passwordExist","passwordComplite","AVG_PASSWORD_ENTROPY","STRONG_PASSWORD_ENTROPY","PasswordStrengthMeter","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { passwordEntropyStep } from '../../api';\nimport { PasswordStrengthTip } from '../PasswordStrengthTip';\n\nexport interface PasswordStrengthMeterProps {\n    currentPasswordEntropy: number;\n    minPasswordEntropy: number;\n    passwordExist: boolean;\n    passwordErrorFirstSolved: boolean;\n    passwordErrorSecondSolved: boolean;\n    passwordErrorThirdSolved: boolean;\n    passwordPopUp: boolean;\n    translate: (id: string) => string;\n}\n\nconst renderPasswordStrengthMeter = (passwordStrengthMeterLength: number) => (\n    <div className=\"pg-password-strength-meter\">\n        <div\n            className={`pg-password-strength-meter__block ${passwordStrengthClassName(\n                passwordStrengthMeterLength\n            )}`}></div>\n    </div>\n);\n\nconst renderPasswordStrengthTip = (props: PasswordStrengthMeterProps, passwordStrengthMeterLength: number) =>\n    props.passwordPopUp ? (\n        <div className=\"pg-password-pop-up\">\n            <div className=\"pg-password-pop-up__strength\">\n                <div className=\"pg-password-pop-up__strength-title\">\n                    {props.translate('page.header.signUp.strength.password')}\n                </div>\n                <div\n                    className={`pg-password-pop-up__strength-status ${passwordStrengthClassName(\n                        passwordStrengthMeterLength\n                    )}`}>\n                    {passwordStrengthStatus(passwordStrengthMeterLength, props.translate)}\n                </div>\n            </div>\n            <PasswordStrengthTip\n                passwordErrorFirstSolved={props.passwordErrorFirstSolved}\n                passwordErrorSecondSolved={props.passwordErrorSecondSolved}\n                passwordErrorThirdSolved={props.passwordErrorThirdSolved}\n                passwordPopUp={props.passwordPopUp}\n                translate={props.translate}\n            />\n        </div>\n    ) : null;\n\nconst passwordStrengthClassName = (passwordStrengthMeterLength: number) => {\n    switch (passwordStrengthMeterLength) {\n        case 0:\n            return 'too-weak';\n        case 1:\n            return 'weak';\n        case 2:\n            return 'good';\n        case 3:\n            return 'strong';\n        case 4:\n            return 'very-strong';\n        default:\n            return 'too-weak';\n    }\n};\n\nconst passwordStrengthStatus = (passwordStrengthMeterLength: number, translate) => {\n    switch (passwordStrengthMeterLength) {\n        case 0:\n            return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n        case 1:\n            return translate('page.header.signUp.password.too.weak') || 'WEAK';\n        case 2:\n            return translate('page.header.signUp.password.good') || 'GOOD';\n        case 3:\n            return translate('page.header.signUp.password.strong') || 'STRONG';\n        case 4:\n            return translate('page.header.signUp.password.very.strong') || 'VERY STRONG';\n        default:\n            return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n    }\n};\n\nconst PasswordStrengthMeterComponent: React.FC<PasswordStrengthMeterProps> = (props) => {\n    const {\n        passwordErrorSecondSolved,\n        passwordErrorFirstSolved,\n        passwordErrorThirdSolved,\n        minPasswordEntropy,\n        currentPasswordEntropy,\n        passwordExist,\n    } = props;\n\n    const passwordComplite = passwordErrorSecondSolved && passwordErrorFirstSolved && passwordErrorThirdSolved;\n    const AVG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep();\n    const STRONG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep() * 2;\n\n    let passwordStrengthMeterLength = -1;\n\n    if (currentPasswordEntropy < minPasswordEntropy) {\n        passwordStrengthMeterLength = 0;\n    }\n\n    if ((currentPasswordEntropy < minPasswordEntropy && passwordErrorFirstSolved) || passwordErrorFirstSolved) {\n        passwordStrengthMeterLength = 1;\n    }\n\n    if (passwordComplite) {\n        if (currentPasswordEntropy >= minPasswordEntropy && currentPasswordEntropy < AVG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 2;\n        }\n\n        if (currentPasswordEntropy >= AVG_PASSWORD_ENTROPY && currentPasswordEntropy < STRONG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 3;\n        }\n\n        if (currentPasswordEntropy >= STRONG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 4;\n        }\n    }\n\n    return (\n        <div className=\"pg-password-strength\">\n            {passwordExist ? renderPasswordStrengthMeter(passwordStrengthMeterLength) : null}\n            {renderPasswordStrengthTip(props, passwordStrengthMeterLength)}\n        </div>\n    );\n};\n\nexport const PasswordStrengthMeter = React.memo(PasswordStrengthMeterComponent);\n"]},"metadata":{},"sourceType":"module"}