{"ast":null,"code":"import _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nexport var convertOrderEvent = function convertOrderEvent(orderEvent) {\n  var at = orderEvent.at,\n      order = _objectWithoutProperties(orderEvent, [\"at\"]);\n\n  return _objectSpread(_objectSpread({}, order), {}, {\n    ord_type: order.order_type || order.ord_type\n  });\n};\nexport var insertOrUpdate = function insertOrUpdate(list, order) {\n  var state = order.state,\n      id = order.id,\n      uuid = order.uuid;\n\n  switch (state) {\n    case 'wait':\n      var index = list.findIndex(function (value) {\n        return value.uuid && value.uuid === uuid || value.id === id;\n      });\n\n      if (index === -1) {\n        return [_objectSpread({}, order)].concat(_toConsumableArray(list));\n      }\n\n      return list.map(function (item) {\n        if (item.uuid && item.uuid === order.uuid || item.id === order.id) {\n          return _objectSpread({}, order);\n        }\n\n        return item;\n      });\n\n    default:\n      return list.reduce(function (memo, item, i) {\n        if (item.uuid && item.uuid !== uuid || item.id !== id) {\n          memo.push(item);\n        }\n\n        if (item.uuid && item.uuid === uuid) {\n          memo.splice(i, 1);\n        }\n\n        return memo;\n      }, []);\n  }\n};\nexport var insertIfNotExisted = function insertIfNotExisted(list, order) {\n  var index = list.findIndex(function (value) {\n    return order.confirmed ? value.id === order.id : value.uuid === order.uuid;\n  });\n  return index === -1 ? [_objectSpread({}, order)].concat(_toConsumableArray(list)) : _toConsumableArray(list);\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/openOrders/helpers.ts"],"names":["convertOrderEvent","orderEvent","at","order","ord_type","order_type","insertOrUpdate","list","state","id","uuid","index","findIndex","value","map","item","reduce","memo","i","push","splice","insertIfNotExisted","confirmed"],"mappings":";;;AAEA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAyC;AAAA,MAC9DC,EAD8D,GAC7CD,UAD6C,CAC9DC,EAD8D;AAAA,MACvDC,KADuD,4BAC7CF,UAD6C;;AAGtE,yCACOE,KADP;AAEIC,IAAAA,QAAQ,EAAED,KAAK,CAACE,UAAN,IAAoBF,KAAK,CAACC;AAFxC;AAIH,CAPM;AASP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAsBJ,KAAtB,EAA4D;AAAA,MAC9EK,KAD8E,GAC1DL,KAD0D,CAC9EK,KAD8E;AAAA,MACvEC,EADuE,GAC1DN,KAD0D,CACvEM,EADuE;AAAA,MACnEC,IADmE,GAC1DP,KAD0D,CACnEO,IADmE;;AAEtF,UAAQF,KAAR;AACI,SAAK,MAAL;AACI,UAAMG,KAAK,GAAGJ,IAAI,CAACK,SAAL,CAAe,UAACC,KAAD;AAAA,eAAyBA,KAAK,CAACH,IAAN,IAAcG,KAAK,CAACH,IAAN,KAAeA,IAA9B,IAAuCG,KAAK,CAACJ,EAAN,KAAaA,EAA5E;AAAA,OAAf,CAAd;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,kCAAYR,KAAZ,6BAAuBI,IAAvB;AACH;;AAED,aAAOA,IAAI,CAACO,GAAL,CAAS,UAAAC,IAAI,EAAI;AACpB,YAAKA,IAAI,CAACL,IAAL,IAAaK,IAAI,CAACL,IAAL,KAAcP,KAAK,CAACO,IAAlC,IAA4CK,IAAI,CAACN,EAAL,KAAYN,KAAK,CAACM,EAAlE,EAAuE;AACnE,mCAAWN,KAAX;AACH;;AAED,eAAOY,IAAP;AACH,OANM,CAAP;;AAOJ;AACI,aAAOR,IAAI,CAACS,MAAL,CAAY,UAACC,IAAD,EAAsBF,IAAtB,EAAyCG,CAAzC,EAAsE;AACrF,YAAKH,IAAI,CAACL,IAAL,IAAaK,IAAI,CAACL,IAAL,KAAcA,IAA5B,IAAqCK,IAAI,CAACN,EAAL,KAAYA,EAArD,EAAyD;AACrDQ,UAAAA,IAAI,CAACE,IAAL,CAAUJ,IAAV;AACH;;AAED,YAAIA,IAAI,CAACL,IAAL,IAAaK,IAAI,CAACL,IAAL,KAAcA,IAA/B,EAAqC;AACjCO,UAAAA,IAAI,CAACG,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACH;;AAED,eAAOD,IAAP;AACH,OAVM,EAUJ,EAVI,CAAP;AAfR;AA2BH,CA7BM;AA+BP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACd,IAAD,EAAsBJ,KAAtB,EAA4D;AAC1F,MAAMQ,KAAK,GAAGJ,IAAI,CAACK,SAAL,CAAe,UAACC,KAAD;AAAA,WACzBV,KAAK,CAACmB,SAAN,GAAkBT,KAAK,CAACJ,EAAN,KAAaN,KAAK,CAACM,EAArC,GAA0CI,KAAK,CAACH,IAAN,KAAeP,KAAK,CAACO,IADtC;AAAA,GAAf,CAAd;AAGA,SAAQC,KAAK,KAAK,CAAC,CAAZ,sBAAsBR,KAAtB,6BAAiCI,IAAjC,wBAA6CA,IAA7C,CAAP;AACH,CALM","sourcesContent":["import { OrderCommon, OrderEvent } from '../../types';\n\nexport const convertOrderEvent = (orderEvent: OrderEvent): OrderCommon => {\n    const { at, ...order } = orderEvent;\n\n    return {\n        ...order,\n        ord_type: order.order_type || order.ord_type,\n    };\n};\n\nexport const insertOrUpdate = (list: OrderCommon[], order: OrderCommon): OrderCommon[] => {\n    const { state, id, uuid } = order;\n    switch (state) {\n        case 'wait':\n            const index = list.findIndex((value: OrderCommon) => (value.uuid && value.uuid === uuid) || value.id === id);\n            if (index === -1) {\n                return [{...order}, ...list];\n            }\n\n            return list.map(item => {\n                if ((item.uuid && item.uuid === order.uuid) || (item.id === order.id)) {\n                    return {...order};\n                }\n\n                return item;\n            });\n        default:\n            return list.reduce((memo: OrderCommon[], item: OrderCommon, i: number): OrderCommon[] => {\n                if ((item.uuid && item.uuid !== uuid) || item.id !== id) {\n                    memo.push(item);\n                }\n\n                if (item.uuid && item.uuid === uuid) {\n                    memo.splice(i, 1);\n                }\n\n                return memo;\n            }, []);\n    }\n};\n\nexport const insertIfNotExisted = (list: OrderCommon[], order: OrderCommon): OrderCommon[] => {\n    const index = list.findIndex((value: OrderCommon) =>\n        order.confirmed ? value.id === order.id : value.uuid === order.uuid);\n\n    return (index === -1) ? [{...order}, ...list] : [...list];\n};\n"]},"metadata":{},"sourceType":"module"}