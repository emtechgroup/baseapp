{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { defaultStorageLimit } from '../../../api';\nimport { sliceArray } from '../../../helpers';\nimport { OPEN_ORDERS_APPEND, OPEN_ORDERS_CANCEL_DATA, OPEN_ORDERS_CANCEL_ERROR, OPEN_ORDERS_CANCEL_FETCH, OPEN_ORDERS_DATA, OPEN_ORDERS_ERROR, OPEN_ORDERS_FETCH, OPEN_ORDERS_RESET, OPEN_ORDERS_UPDATE } from './constants';\nimport { convertOrderEvent, insertIfNotExisted, insertOrUpdate } from './helpers';\nexport var initialOpenOrdersState = {\n  fetching: false,\n  list: [],\n  cancelFetching: false,\n  cancelError: false\n};\nexport var openOrdersReducer = function openOrdersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialOpenOrdersState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case OPEN_ORDERS_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: true\n      });\n\n    case OPEN_ORDERS_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: false,\n        list: sliceArray(action.payload, defaultStorageLimit())\n      });\n\n    case OPEN_ORDERS_UPDATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: sliceArray(insertOrUpdate(state.list, convertOrderEvent(action.payload)), defaultStorageLimit())\n      });\n\n    case OPEN_ORDERS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: false,\n        list: []\n      });\n\n    case OPEN_ORDERS_APPEND:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: sliceArray(insertIfNotExisted(state.list, action.payload), defaultStorageLimit())\n      });\n\n    case OPEN_ORDERS_RESET:\n      return initialOpenOrdersState;\n\n    case OPEN_ORDERS_CANCEL_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cancelFetching: true,\n        cancelError: false\n      });\n\n    case OPEN_ORDERS_CANCEL_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cancelFetching: false,\n        list: sliceArray(action.payload, defaultStorageLimit())\n      });\n\n    case OPEN_ORDERS_CANCEL_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cancelFetching: false,\n        cancelError: true\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/openOrders/reducer.ts"],"names":["defaultStorageLimit","sliceArray","OPEN_ORDERS_APPEND","OPEN_ORDERS_CANCEL_DATA","OPEN_ORDERS_CANCEL_ERROR","OPEN_ORDERS_CANCEL_FETCH","OPEN_ORDERS_DATA","OPEN_ORDERS_ERROR","OPEN_ORDERS_FETCH","OPEN_ORDERS_RESET","OPEN_ORDERS_UPDATE","convertOrderEvent","insertIfNotExisted","insertOrUpdate","initialOpenOrdersState","fetching","list","cancelFetching","cancelError","openOrdersReducer","state","action","type","payload"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,cAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,SACIC,kBADJ,EAEIC,uBAFJ,EAGIC,wBAHJ,EAIIC,wBAJJ,EAKIC,gBALJ,EAMIC,iBANJ,EAOIC,iBAPJ,EAQIC,iBARJ,EASIC,kBATJ,QAUO,aAVP;AAWA,SACIC,iBADJ,EAEIC,kBAFJ,EAGIC,cAHJ,QAIO,WAJP;AAaA,OAAO,IAAMC,sBAAuC,GAAG;AACnDC,EAAAA,QAAQ,EAAE,KADyC;AAEnDC,EAAAA,IAAI,EAAE,EAF6C;AAGnDC,EAAAA,cAAc,EAAE,KAHmC;AAInDC,EAAAA,WAAW,EAAE;AAJsC,CAAhD;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAGX;AAAA,MAFlBC,KAEkB,uEAFON,sBAEP;AAAA,MADlBO,MACkB;;AAClB,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,iBAAL;AACI,6CAAYY,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE;AAA7B;;AACJ,SAAKT,gBAAL;AACI,6CAAYc,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE,KAA7B;AAAoCC,QAAAA,IAAI,EAAEf,UAAU,CAACoB,MAAM,CAACE,OAAR,EAAiBvB,mBAAmB,EAApC;AAApD;;AACJ,SAAKU,kBAAL;AACI,6CACOU,KADP;AAEIJ,QAAAA,IAAI,EAAEf,UAAU,CAACY,cAAc,CAACO,KAAK,CAACJ,IAAP,EAAaL,iBAAiB,CAACU,MAAM,CAACE,OAAR,CAA9B,CAAf,EAAgEvB,mBAAmB,EAAnF;AAFpB;;AAIJ,SAAKO,iBAAL;AACI,6CAAYa,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE,KAA7B;AAAoCC,QAAAA,IAAI,EAAE;AAA1C;;AACJ,SAAKd,kBAAL;AACI,6CAAYkB,KAAZ;AAAmBJ,QAAAA,IAAI,EAAEf,UAAU,CAACW,kBAAkB,CAACQ,KAAK,CAACJ,IAAP,EAAaK,MAAM,CAACE,OAApB,CAAnB,EAAiDvB,mBAAmB,EAApE;AAAnC;;AACJ,SAAKS,iBAAL;AACI,aAAOK,sBAAP;;AACJ,SAAKT,wBAAL;AACI,6CAAYe,KAAZ;AAAmBH,QAAAA,cAAc,EAAE,IAAnC;AAAyCC,QAAAA,WAAW,EAAE;AAAtD;;AACJ,SAAKf,uBAAL;AACI,6CAAYiB,KAAZ;AAAmBH,QAAAA,cAAc,EAAE,KAAnC;AAA0CD,QAAAA,IAAI,EAAEf,UAAU,CAACoB,MAAM,CAACE,OAAR,EAAiBvB,mBAAmB,EAApC;AAA1D;;AACJ,SAAKI,wBAAL;AACI,6CAAYgB,KAAZ;AAAmBH,QAAAA,cAAc,EAAE,KAAnC;AAA0CC,QAAAA,WAAW,EAAE;AAAvD;;AACJ;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA7BM","sourcesContent":["import { defaultStorageLimit } from '../../../api';\nimport { sliceArray } from '../../../helpers';\nimport { OrderCommon } from '../../types';\nimport { OpenOrdersAction } from './actions';\nimport {\n    OPEN_ORDERS_APPEND,\n    OPEN_ORDERS_CANCEL_DATA,\n    OPEN_ORDERS_CANCEL_ERROR,\n    OPEN_ORDERS_CANCEL_FETCH,\n    OPEN_ORDERS_DATA,\n    OPEN_ORDERS_ERROR,\n    OPEN_ORDERS_FETCH,\n    OPEN_ORDERS_RESET,\n    OPEN_ORDERS_UPDATE,\n} from './constants';\nimport {\n    convertOrderEvent,\n    insertIfNotExisted,\n    insertOrUpdate,\n} from './helpers';\n\nexport interface OpenOrdersState {\n    fetching: boolean;\n    list: OrderCommon[];\n    cancelFetching: boolean;\n    cancelError: boolean;\n}\n\nexport const initialOpenOrdersState: OpenOrdersState = {\n    fetching: false,\n    list: [],\n    cancelFetching: false,\n    cancelError: false,\n};\n\nexport const openOrdersReducer = (\n    state: OpenOrdersState = initialOpenOrdersState,\n    action: OpenOrdersAction,\n): OpenOrdersState => {\n    switch (action.type) {\n        case OPEN_ORDERS_FETCH:\n            return { ...state, fetching: true };\n        case OPEN_ORDERS_DATA:\n            return { ...state, fetching: false, list: sliceArray(action.payload, defaultStorageLimit()) };\n        case OPEN_ORDERS_UPDATE:\n            return {\n                ...state,\n                list: sliceArray(insertOrUpdate(state.list, convertOrderEvent(action.payload)), defaultStorageLimit()),\n            };\n        case OPEN_ORDERS_ERROR:\n            return { ...state, fetching: false, list: [] };\n        case OPEN_ORDERS_APPEND:\n            return { ...state, list: sliceArray(insertIfNotExisted(state.list, action.payload), defaultStorageLimit()) };\n        case OPEN_ORDERS_RESET:\n            return initialOpenOrdersState;\n        case OPEN_ORDERS_CANCEL_FETCH:\n            return { ...state, cancelFetching: true, cancelError: false };\n        case OPEN_ORDERS_CANCEL_DATA:\n            return { ...state, cancelFetching: false, list: sliceArray(action.payload, defaultStorageLimit()) };\n        case OPEN_ORDERS_CANCEL_ERROR:\n            return { ...state, cancelFetching: false, cancelError: true };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}