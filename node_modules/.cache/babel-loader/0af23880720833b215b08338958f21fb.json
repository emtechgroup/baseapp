{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { AUTH_ENTROPY_PASSWORD_DATA, AUTH_ENTROPY_PASSWORD_ERROR, AUTH_ENTROPY_PASSWORD_FETCH, AUTH_LOGOUT_FAILURE, AUTH_LOGOUT_FETCH, AUTH_SIGN_IN_DATA, AUTH_SIGN_IN_ERROR, AUTH_SIGN_IN_FETCH, AUTH_SIGN_IN_REQUIRE_2FA, AUTH_SIGN_IN_REQUIRE_2FA_RESET, AUTH_SIGN_UP_DATA, AUTH_SIGN_UP_ERROR, AUTH_SIGN_UP_FETCH, AUTH_SIGN_UP_REQUIRE_VERIFICATION, AUTH_VERIFICATION_FETCH, AUTH_VERIFICATION_SUCCESS } from './constants';\nexport var initialStateAuth = {\n  require2FA: false,\n  requireVerification: false,\n  emailVerified: false,\n  current_password_entropy: 0,\n  signInLoading: false,\n  signUpLoading: false\n};\nexport var authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateAuth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTH_SIGN_IN_REQUIRE_2FA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        require2FA: action.payload.require2fa\n      });\n\n    case AUTH_SIGN_IN_REQUIRE_2FA_RESET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        require2FA: false,\n        signInLoading: false\n      });\n\n    case AUTH_SIGN_UP_REQUIRE_VERIFICATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        requireVerification: action.payload.requireVerification\n      });\n\n    case AUTH_VERIFICATION_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailVerified: false\n      });\n\n    case AUTH_VERIFICATION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailVerified: true\n      });\n\n    case AUTH_SIGN_IN_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signInLoading: true\n      });\n\n    case AUTH_SIGN_IN_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signInLoading: false\n      });\n\n    case AUTH_SIGN_IN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authError: action.error,\n        signInLoading: false\n      });\n\n    case AUTH_SIGN_UP_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true\n      });\n\n    case AUTH_SIGN_UP_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false\n      });\n\n    case AUTH_SIGN_UP_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpError: action.error,\n        signUpLoading: false\n      });\n\n    case AUTH_LOGOUT_FETCH:\n      return _objectSpread({}, state);\n\n    case AUTH_LOGOUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutError: action.error\n      });\n\n    case AUTH_ENTROPY_PASSWORD_FETCH:\n      return _objectSpread({}, state);\n\n    case AUTH_ENTROPY_PASSWORD_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current_password_entropy: action.payload.entropy\n      });\n\n    case AUTH_ENTROPY_PASSWORD_ERROR:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/auth/reducer.ts"],"names":["AUTH_ENTROPY_PASSWORD_DATA","AUTH_ENTROPY_PASSWORD_ERROR","AUTH_ENTROPY_PASSWORD_FETCH","AUTH_LOGOUT_FAILURE","AUTH_LOGOUT_FETCH","AUTH_SIGN_IN_DATA","AUTH_SIGN_IN_ERROR","AUTH_SIGN_IN_FETCH","AUTH_SIGN_IN_REQUIRE_2FA","AUTH_SIGN_IN_REQUIRE_2FA_RESET","AUTH_SIGN_UP_DATA","AUTH_SIGN_UP_ERROR","AUTH_SIGN_UP_FETCH","AUTH_SIGN_UP_REQUIRE_VERIFICATION","AUTH_VERIFICATION_FETCH","AUTH_VERIFICATION_SUCCESS","initialStateAuth","require2FA","requireVerification","emailVerified","current_password_entropy","signInLoading","signUpLoading","authReducer","state","action","type","payload","require2fa","authError","error","signUpError","logoutError","entropy"],"mappings":";AAEA,SACIA,0BADJ,EAEIC,2BAFJ,EAGIC,2BAHJ,EAIIC,mBAJJ,EAKIC,iBALJ,EAMIC,iBANJ,EAOIC,kBAPJ,EAQIC,kBARJ,EASIC,wBATJ,EAUIC,8BAVJ,EAWIC,iBAXJ,EAYIC,kBAZJ,EAaIC,kBAbJ,EAcIC,iCAdJ,EAeIC,uBAfJ,EAgBIC,yBAhBJ,QAiBO,aAjBP;AA+BA,OAAO,IAAMC,gBAA2B,GAAG;AACvCC,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,mBAAmB,EAAE,KAFkB;AAGvCC,EAAAA,aAAa,EAAE,KAHwB;AAIvCC,EAAAA,wBAAwB,EAAE,CAJa;AAKvCC,EAAAA,aAAa,EAAE,KALwB;AAMvCC,EAAAA,aAAa,EAAE;AANwB,CAApC;AASP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkD;AAAA,MAAjDC,KAAiD,uEAAzCR,gBAAyC;AAAA,MAAvBS,MAAuB;;AACzE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,wBAAL;AACI,6CACOgB,KADP;AAEIP,QAAAA,UAAU,EAAEQ,MAAM,CAACE,OAAP,CAAeC;AAF/B;;AAIJ,SAAKnB,8BAAL;AACI,6CACOe,KADP;AAEIP,QAAAA,UAAU,EAAE,KAFhB;AAGII,QAAAA,aAAa,EAAE;AAHnB;;AAKJ,SAAKR,iCAAL;AACI,6CACOW,KADP;AAEIN,QAAAA,mBAAmB,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAFxC;;AAIJ,SAAKJ,uBAAL;AACI,6CAAYU,KAAZ;AAAmBL,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKJ,yBAAL;AACI,6CAAYS,KAAZ;AAAmBL,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKZ,kBAAL;AACI,6CAAYiB,KAAZ;AAAmBH,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKhB,iBAAL;AACI,6CAAYmB,KAAZ;AAAmBH,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKf,kBAAL;AACI,6CAAYkB,KAAZ;AAAmBK,QAAAA,SAAS,EAAEJ,MAAM,CAACK,KAArC;AAA4CT,QAAAA,aAAa,EAAE;AAA3D;;AACJ,SAAKT,kBAAL;AACI,6CAAYY,KAAZ;AAAmBF,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKZ,iBAAL;AACI,6CAAYc,KAAZ;AAAmBF,QAAAA,aAAa,EAAE;AAAlC;;AACJ,SAAKX,kBAAL;AACI,6CAAYa,KAAZ;AAAmBO,QAAAA,WAAW,EAAEN,MAAM,CAACK,KAAvC;AAA8CR,QAAAA,aAAa,EAAE;AAA7D;;AACJ,SAAKlB,iBAAL;AACI,+BAAYoB,KAAZ;;AACJ,SAAKrB,mBAAL;AACI,6CAAYqB,KAAZ;AAAmBQ,QAAAA,WAAW,EAAEP,MAAM,CAACK;AAAvC;;AACJ,SAAK5B,2BAAL;AACI,+BAAYsB,KAAZ;;AACJ,SAAKxB,0BAAL;AACI,6CAAYwB,KAAZ;AAAmBJ,QAAAA,wBAAwB,EAAEK,MAAM,CAACE,OAAP,CAAeM;AAA5D;;AACJ,SAAKhC,2BAAL;AACI,+BAAYuB,KAAZ;;AACJ;AACI,aAAOA,KAAP;AA5CR;AA8CH,CA/CM","sourcesContent":["import { CommonError } from '../../types';\nimport { AuthAction } from './actions';\nimport {\n    AUTH_ENTROPY_PASSWORD_DATA,\n    AUTH_ENTROPY_PASSWORD_ERROR,\n    AUTH_ENTROPY_PASSWORD_FETCH,\n    AUTH_LOGOUT_FAILURE,\n    AUTH_LOGOUT_FETCH,\n    AUTH_SIGN_IN_DATA,\n    AUTH_SIGN_IN_ERROR,\n    AUTH_SIGN_IN_FETCH,\n    AUTH_SIGN_IN_REQUIRE_2FA,\n    AUTH_SIGN_IN_REQUIRE_2FA_RESET,\n    AUTH_SIGN_UP_DATA,\n    AUTH_SIGN_UP_ERROR,\n    AUTH_SIGN_UP_FETCH,\n    AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    AUTH_VERIFICATION_FETCH,\n    AUTH_VERIFICATION_SUCCESS,\n} from './constants';\n\nexport interface AuthState {\n    require2FA?: boolean;\n    requireVerification?: boolean;\n    emailVerified?: boolean;\n    logoutError?: CommonError;\n    authError?: CommonError;\n    signUpError?: CommonError;\n    current_password_entropy: number;\n    signInLoading: boolean;\n    signUpLoading: boolean;\n}\n\nexport const initialStateAuth: AuthState = {\n    require2FA: false,\n    requireVerification: false,\n    emailVerified: false,\n    current_password_entropy: 0,\n    signInLoading: false,\n    signUpLoading: false,\n};\n\nexport const authReducer = (state = initialStateAuth, action: AuthAction) => {\n    switch (action.type) {\n        case AUTH_SIGN_IN_REQUIRE_2FA:\n            return {\n                ...state,\n                require2FA: action.payload.require2fa,\n            };\n        case AUTH_SIGN_IN_REQUIRE_2FA_RESET:\n            return {\n                ...state,\n                require2FA: false,\n                signInLoading: false,\n            };\n        case AUTH_SIGN_UP_REQUIRE_VERIFICATION:\n            return {\n                ...state,\n                requireVerification: action.payload.requireVerification,\n            };\n        case AUTH_VERIFICATION_FETCH:\n            return { ...state, emailVerified: false };\n        case AUTH_VERIFICATION_SUCCESS:\n            return { ...state, emailVerified: true };\n        case AUTH_SIGN_IN_FETCH:\n            return { ...state, signInLoading: true };\n        case AUTH_SIGN_IN_DATA:\n            return { ...state, signInLoading: false };\n        case AUTH_SIGN_IN_ERROR:\n            return { ...state, authError: action.error, signInLoading: false };\n        case AUTH_SIGN_UP_FETCH:\n            return { ...state, signUpLoading: true };\n        case AUTH_SIGN_UP_DATA:\n            return { ...state, signUpLoading: false };\n        case AUTH_SIGN_UP_ERROR:\n            return { ...state, signUpError: action.error, signUpLoading: false };\n        case AUTH_LOGOUT_FETCH:\n            return { ...state };\n        case AUTH_LOGOUT_FAILURE:\n            return { ...state, logoutError: action.error };\n        case AUTH_ENTROPY_PASSWORD_FETCH:\n            return { ...state };\n        case AUTH_ENTROPY_PASSWORD_DATA:\n            return { ...state, current_password_entropy: action.payload.entropy };\n        case AUTH_ENTROPY_PASSWORD_ERROR:\n            return { ...state };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}