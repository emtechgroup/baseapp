{"ast":null,"code":"import _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/Markets/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { FilterInput, Table } from '../';\nexport var Markets = /*#__PURE__*/function (_React$Component) {\n  _inherits(Markets, _React$Component);\n\n  var _super = _createSuper(Markets);\n\n  function Markets(props) {\n    var _this;\n\n    _classCallCheck(this, Markets);\n\n    _this = _super.call(this, props);\n    _this.defaultHeaders = ['Pair', 'Price', '24h Change'];\n\n    _this.searchFilter = function (row, searchKey) {\n      _this.setState({\n        searchKey: searchKey\n      });\n\n      return row[0].toLowerCase().includes(searchKey.toLowerCase());\n    };\n\n    _this.handleFilter = function (result) {\n      _this.setState({\n        filteredData: _toConsumableArray(result)\n      });\n    };\n\n    _this.mapRows = function (cell) {\n      var isChangeValue = typeof cell === 'string' && (cell.charAt(0) === '-' || cell.charAt(0) === '+');\n      return isChangeValue ? _this.renderChange(cell) : cell;\n    };\n\n    _this.filterType = function (headerKey, searchKey) {\n      return function (item) {\n        var typeIndex = _this.props.headers ? _this.props.headers.indexOf(headerKey) : _this.defaultHeaders.indexOf(headerKey);\n        return item[typeIndex].includes(searchKey);\n      };\n    };\n\n    _this.getMarketFromDataRow = function (market) {\n      return market[0];\n    };\n\n    _this.transformCurrencyToFilter = function (currency) {\n      return {\n        name: currency,\n        filter: _this.filterType('Pair', currency)\n      };\n    };\n\n    _this.state = {\n      filteredData: props.data,\n      searchKey: ''\n    };\n    return _this;\n  }\n\n  _createClass(Markets, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.data !== this.props.data) {\n        this.setState({\n          filteredData: nextProps.data.filter(function (w) {\n            return w[0].toLowerCase().includes(_this2.state.searchKey.toLowerCase());\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filteredData = this.state.filteredData;\n      var _this$props = this.props,\n          _this$props$filters = _this$props.filters,\n          filters = _this$props$filters === void 0 ? true : _this$props$filters,\n          headers = _this$props.headers,\n          title = _this$props.title,\n          _this$props$filterPla = _this$props.filterPlaceholder,\n          filterPlaceholder = _this$props$filterPla === void 0 ? '' : _this$props$filterPla,\n          rowKeyIndex = _this$props.rowKeyIndex,\n          selectedKey = _this$props.selectedKey;\n      var tableData = filteredData.length > 0 ? filteredData : [['', '', '']];\n      tableData = tableData.map(function (row) {\n        return row.map(_this3.mapRows);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-markets\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        data: tableData,\n        rowKeyIndex: rowKeyIndex,\n        selectedKey: selectedKey,\n        filters: filters ? this.filters : [],\n        header: headers ? headers : this.defaultHeaders,\n        onSelect: this.props.onSelect,\n        titleComponent: title ? title : 'Markets',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FilterInput, {\n        data: this.props.data,\n        onFilter: this.handleFilter,\n        filter: this.searchFilter,\n        placeholder: filterPlaceholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderChange\",\n    value: function renderChange(cell) {\n      var isItChangeValue = function isItChangeValue(c) {\n        return c.search('\\\\+') ? 'negative' : 'positive';\n      };\n\n      var className = classnames('', {\n        __positive: isItChangeValue(cell) === 'positive',\n        __negative: isItChangeValue(cell) === 'negative'\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }\n      }, cell);\n    }\n  }, {\n    key: \"createUniqueCurrencies\",\n    value: function createUniqueCurrencies(currencies, market) {\n      var isCurrencyUnique = function isCurrencyUnique(currency) {\n        return !currencies.includes(currency);\n      };\n\n      var marketCurrencies = market.split('/').map(function (c) {\n        return c.trim();\n      });\n      var uniqueCurrencies = marketCurrencies.filter(isCurrencyUnique);\n      return currencies.concat(uniqueCurrencies);\n    }\n  }, {\n    key: \"filters\",\n    get: function get() {\n      var data = this.props.data;\n      var currencyFilters = data && data.length > 0 ? this.props.data.map(this.getMarketFromDataRow).reduce(this.createUniqueCurrencies, []).map(this.transformCurrencyToFilter) : [];\n      return [{\n        name: 'All',\n        filter: this.filterType('Pair', '')\n      }].concat(_toConsumableArray(currencyFilters));\n    }\n  }]);\n\n  return Markets;\n}(React.Component);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/Markets/index.tsx"],"names":["classnames","React","FilterInput","Table","Markets","props","defaultHeaders","searchFilter","row","searchKey","setState","toLowerCase","includes","handleFilter","result","filteredData","mapRows","cell","isChangeValue","charAt","renderChange","filterType","headerKey","item","typeIndex","headers","indexOf","getMarketFromDataRow","market","transformCurrencyToFilter","currency","name","filter","state","data","nextProps","w","filters","title","filterPlaceholder","rowKeyIndex","selectedKey","tableData","length","map","onSelect","isItChangeValue","c","search","className","__positive","__negative","currencies","isCurrencyUnique","marketCurrencies","split","trim","uniqueCurrencies","concat","currencyFilters","reduce","createUniqueCurrencies","Component"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { CellData, FilterInput, Table } from '../';\n\nexport interface MarketsProps {\n    /**\n     * List of markets data\n     */\n    data: CellData[][];\n    /**\n     * Row's unique key, could be a number - element's index in data\n     */\n    rowKeyIndex?: number;\n    /**\n     * Key of selected row, could be a string\n     */\n    selectedKey?: string;\n    /**\n     * Callback that is called when a market is selected\n     */\n    onSelect: (marketKey: string) => void;\n    /**\n     * Defines whether to show filters or not\n     * @default true\n     */\n    filters?: boolean;\n    /**\n     * List of headers for table\n     */\n    headers?: string[];\n    /**\n     * Title of widget\n     */\n    title?: string;\n    /**\n     * Value for FilterInput placeholder\n     */\n    filterPlaceholder?: string;\n}\n\nexport interface MarketsState {\n    /**\n     * Keeps filtered data\n     */\n    filteredData: CellData[][];\n    /**\n     * Keeps search key\n     */\n    searchKey: string;\n}\n\nexport class Markets extends React.Component<MarketsProps, MarketsState> {\n    constructor(props: MarketsProps) {\n        super(props);\n\n        this.state = {\n            filteredData: props.data,\n            searchKey: '',\n        };\n    }\n\n    private defaultHeaders: string[] = ['Pair', 'Price', '24h Change'];\n\n    public componentWillReceiveProps(nextProps: MarketsProps) {\n        if (nextProps.data !== this.props.data) {\n            this.setState({\n                filteredData: nextProps.data.filter(w => (w[0] as string).toLowerCase().includes(this.state.searchKey.toLowerCase())),\n            });\n        }\n    }\n\n    public render() {\n        const { filteredData } = this.state;\n        const { filters = true, headers, title, filterPlaceholder = '', rowKeyIndex, selectedKey } = this.props;\n        let tableData = filteredData.length > 0\n            ? filteredData\n            : [['', '', '']];\n        tableData = tableData.map(row => row.map(this.mapRows));\n\n        return (\n            <div className=\"cr-markets\">\n                <Table\n                    data={tableData}\n                    rowKeyIndex={rowKeyIndex}\n                    selectedKey={selectedKey}\n                    filters={filters ? this.filters : []}\n                    header={headers ? headers : this.defaultHeaders}\n                    onSelect={this.props.onSelect}\n                    titleComponent={title ? title : 'Markets'}\n                />\n                <FilterInput\n                    data={this.props.data}\n                    onFilter={this.handleFilter}\n                    filter={this.searchFilter}\n                    placeholder={filterPlaceholder}\n                />\n            </div>\n        );\n    }\n\n    public searchFilter = (row: CellData[], searchKey: string) => {\n        this.setState({\n            searchKey: searchKey,\n        });\n\n        return (row[0] as string).toLowerCase().includes(searchKey.toLowerCase());\n    };\n\n    public handleFilter = (result: object[]) => {\n        this.setState({\n            filteredData: [...result] as CellData[][],\n        });\n    };\n\n    private renderChange(cell: string) {\n        const isItChangeValue = (c: string) => {\n            return c.search('\\\\+') ? 'negative' : 'positive';\n        };\n\n        const className = classnames('', {\n            __positive: isItChangeValue(cell) === 'positive',\n            __negative: isItChangeValue(cell) === 'negative',\n        });\n\n        return <span className={className}>{cell}</span>;\n    }\n\n    private mapRows = (cell: CellData) => {\n        const isChangeValue = typeof(cell) === 'string' && (cell.charAt(0) === '-' || cell.charAt(0) === '+');\n\n        return isChangeValue ? this.renderChange(cell as string) : cell;\n    };\n\n    private filterType = (headerKey: string, searchKey: string) => (item: CellData[]) => {\n        const typeIndex = this.props.headers ? this.props.headers.indexOf(headerKey) : this.defaultHeaders.indexOf(headerKey);\n\n        return (item[typeIndex] as string).includes(searchKey);\n    };\n\n    private get filters() {\n        const { data } = this.props;\n\n        const currencyFilters = data && data.length > 0\n            ? this.props.data\n                .map(this.getMarketFromDataRow)\n                .reduce(this.createUniqueCurrencies, [])\n                .map(this.transformCurrencyToFilter)\n            : [];\n\n        return [\n            {\n                name: 'All',\n                filter: this.filterType('Pair', ''),\n            },\n            ...currencyFilters,\n        ];\n    }\n\n    private getMarketFromDataRow = (market: React.ReactNode[]) => market[0] as string;\n\n    private createUniqueCurrencies(currencies: string[], market: string) {\n        const isCurrencyUnique = (currency: string) => !currencies.includes(currency);\n\n        const marketCurrencies = market.split('/').map((c: string) => c.trim());\n        const uniqueCurrencies = marketCurrencies.filter(isCurrencyUnique);\n\n        return currencies.concat(uniqueCurrencies);\n    }\n\n    private transformCurrencyToFilter = (currency: string) => ({\n        name: currency,\n        filter: this.filterType('Pair', currency),\n    });\n}\n"]},"metadata":{},"sourceType":"module"}