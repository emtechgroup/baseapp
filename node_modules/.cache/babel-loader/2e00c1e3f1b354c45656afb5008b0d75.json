{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/WalletList/index.tsx\";\n\nimport React, { useCallback } from 'react';\nimport { WalletItem } from '../WalletItem';\n\nvar removeAlt = function removeAlt(str) {\n  return str.replace('-alt', '');\n};\n\nvar style = {\n  listStyleType: 'none',\n  padding: 'calc(var(--gap) * 0.5) calc(var(--gap))'\n};\n/**\n * Component to display list of user wallets. It is scrollable and reacts on WalletItem click.\n */\n\nexport var WalletList = function WalletList(_ref) {\n  var onWalletSelectionChange = _ref.onWalletSelectionChange,\n      onActiveIndexChange = _ref.onActiveIndexChange,\n      activeIndex = _ref.activeIndex,\n      walletItems = _ref.walletItems;\n  var handleClick = useCallback(function (i, p) {\n    if (onWalletSelectionChange) {\n      onWalletSelectionChange(p);\n    }\n\n    if (onActiveIndexChange) {\n      onActiveIndexChange(i);\n    }\n  }, [onWalletSelectionChange, onActiveIndexChange]);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cr-wallet-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, walletItems.map(function (p, i) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      style: style,\n      onClick: function onClick() {\n        return handleClick(i, p);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(WalletItem, Object.assign({\n      key: i\n    }, _objectSpread(_objectSpread({}, p), {}, {\n      active: activeIndex === i,\n      currency: removeAlt(p.currency)\n    }), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })));\n  }));\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/WalletList/index.tsx"],"names":["React","useCallback","WalletItem","removeAlt","str","replace","style","listStyleType","padding","WalletList","onWalletSelectionChange","onActiveIndexChange","activeIndex","walletItems","handleClick","i","p","map","active","currency"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA4C,eAA5C;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAAyBA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAzB;AAAA,CAAlB;;AAEA,IAAMC,KAA0B,GAAG;AAC/BC,EAAAA,aAAa,EAAE,MADgB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAnC;AAKA;AACA;AACA;;AACA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAK/C;AAAA,MAJFC,uBAIE,QAJFA,uBAIE;AAAA,MAHFC,mBAGE,QAHFA,mBAGE;AAAA,MAFFC,WAEE,QAFFA,WAEE;AAAA,MADFC,WACE,QADFA,WACE;AACF,MAAMC,WAAW,GAAGb,WAAW,CAC3B,UAACc,CAAD,EAAYC,CAAZ,EAAmC;AAC/B,QAAIN,uBAAJ,EAA6B;AACzBA,MAAAA,uBAAuB,CAACM,CAAD,CAAvB;AACH;;AACD,QAAIL,mBAAJ,EAAyB;AACrBA,MAAAA,mBAAmB,CAACI,CAAD,CAAnB;AACH;AACJ,GAR0B,EAS3B,CAACL,uBAAD,EAA0BC,mBAA1B,CAT2B,CAA/B;AAYA,sBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,WAAW,CAACI,GAAZ,CAAgB,UAACD,CAAD,EAAqBD,CAArB;AAAA,wBACb;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,KAAK,EAAET,KAAnB;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMQ,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAAjB;AAAA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,GAAG,EAAED;AADT,uCAGWC,CAHX;AAIQE,MAAAA,MAAM,EAAEN,WAAW,KAAKG,CAJhC;AAKQI,MAAAA,QAAQ,EAAEhB,SAAS,CAACa,CAAC,CAACG,QAAH;AAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADa;AAAA,GAAhB,CADL,CADJ;AAgBH,CAlCM","sourcesContent":["import React, { useCallback } from 'react';\nimport { WalletItem, WalletItemProps } from '../WalletItem';\n\nexport interface WalletListProps {\n    walletItems: WalletItemProps[];\n    activeIndex: number;\n    /**\n     * Callback function which is invoked whenever wallet item is clicked\n     */\n    onWalletSelectionChange(item: WalletItemProps): void;\n    /**\n     * Callback function which is invoked whenever wallet item is clicked\n     */\n    onActiveIndexChange(index: number): void;\n}\n\nconst removeAlt = (str: string): string => str.replace('-alt', '');\n\nconst style: React.CSSProperties = {\n    listStyleType: 'none',\n    padding: 'calc(var(--gap) * 0.5) calc(var(--gap))',\n};\n\n/**\n * Component to display list of user wallets. It is scrollable and reacts on WalletItem click.\n */\nexport const WalletList: React.FC<WalletListProps> = ({\n    onWalletSelectionChange,\n    onActiveIndexChange,\n    activeIndex,\n    walletItems,\n}) => {\n    const handleClick = useCallback(\n        (i: number, p: WalletItemProps) => {\n            if (onWalletSelectionChange) {\n                onWalletSelectionChange(p);\n            }\n            if (onActiveIndexChange) {\n                onActiveIndexChange(i);\n            }\n        },\n        [onWalletSelectionChange, onActiveIndexChange]\n    );\n\n    return (\n        <ul className=\"cr-wallet-list\">\n            {walletItems.map((p: WalletItemProps, i: number) => (\n                <li key={i} style={style} onClick={() => handleClick(i, p)}>\n                    <WalletItem\n                        key={i}\n                        {...{\n                            ...p,\n                            active: activeIndex === i,\n                            currency: removeAlt(p.currency),\n                        }}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}