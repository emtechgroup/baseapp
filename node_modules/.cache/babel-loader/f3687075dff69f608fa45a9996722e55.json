{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(memberLevelsSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { memberLevelsData, memberLevelsError } from '../actions';\nvar requestOptions = {\n  apiVersion: 'peatio'\n};\nexport function memberLevelsSaga(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function memberLevelsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.get(requestOptions), '/public/member-levels');\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(memberLevelsData(data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: memberLevelsError\n            }\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/memberLevels/sagas/memberLevelsSaga.ts"],"names":["memberLevelsSaga","call","put","sendError","API","memberLevelsData","memberLevelsError","requestOptions","apiVersion","action","get","data","error","processingType","extraOptions","actionError"],"mappings":";;oDASiBA,gB;;AATjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAuE,YAAvE;AAEA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUR,gBAAV,CAA2BS,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMR,IAAI,CAACG,GAAG,CAACM,GAAJ,CAAQH,cAAR,CAAD,EAA0B,uBAA1B,CAAV;;AAFd;AAEOI,UAAAA,IAFP;AAAA;AAGC,iBAAMT,GAAG,CAACG,gBAAgB,CAACM,IAAD,CAAjB,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMT,GAAG,CAACC,SAAS,CAAC;AAChBS,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAET;AADH;AAHE,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { memberLevelsData, memberLevelsError, MemberLevelsFetch } from '../actions';\n\nconst requestOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* memberLevelsSaga(action: MemberLevelsFetch) {\n    try {\n        const data = yield call(API.get(requestOptions), '/public/member-levels');\n        yield put(memberLevelsData(data));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: memberLevelsError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}