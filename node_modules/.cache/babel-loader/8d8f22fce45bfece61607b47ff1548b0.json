{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/Beneficiaries/BeneficiariesActivateModal.tsx\";\n\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LetterIcon } from '../../assets/images/LetterIcon';\nimport { Modal } from '../../mobile/components/Modal';\nimport { beneficiariesActivate, beneficiariesResendPin, selectMobileDeviceState } from '../../modules';\nimport { CustomInput } from '../CustomInput';\n\nvar BeneficiariesActivateModalComponent = function BeneficiariesActivateModalComponent(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      confirmationModalCode = _React$useState2[0],\n      setConfirmationModalCode = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      confirmationModalCodeFocused = _React$useState4[0],\n      setConfirmationModalCodeFocused = _React$useState4[1];\n\n  var _useIntl = useIntl(),\n      formatMessage = _useIntl.formatMessage;\n\n  var dispatch = useDispatch();\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var handleToggleConfirmationModal = props.handleToggleConfirmationModal,\n      beneficiariesAddData = props.beneficiariesAddData;\n  var handleChangeFieldValue = React.useCallback(function (key, value) {\n    setConfirmationModalCode(value);\n  }, []);\n  var handleChangeFieldFocus = React.useCallback(function (key) {\n    setConfirmationModalCodeFocused(function (v) {\n      return !v;\n    });\n  }, []);\n  var handleClearModalsInputs = React.useCallback(function () {\n    setConfirmationModalCode('');\n    setConfirmationModalCodeFocused(false);\n  }, []);\n  var handleClickToggleConfirmationModal = React.useCallback(function (clear) {\n    return function () {\n      handleToggleConfirmationModal();\n\n      if (clear) {\n        handleClearModalsInputs();\n      }\n    };\n  }, [handleToggleConfirmationModal, handleClearModalsInputs]);\n  var handleSubmitConfirmationModal = React.useCallback(function () {\n    if (beneficiariesAddData) {\n      var payload = {\n        pin: confirmationModalCode,\n        id: beneficiariesAddData.id\n      };\n      dispatch(beneficiariesActivate(payload));\n    }\n\n    handleClearModalsInputs();\n  }, [confirmationModalCode, dispatch, beneficiariesAddData, handleClearModalsInputs]);\n  var handleResendConfirmationCode = React.useCallback(function () {\n    if (beneficiariesAddData) {\n      var payload = {\n        id: beneficiariesAddData.id\n      };\n      dispatch(beneficiariesResendPin(payload));\n    }\n  }, [beneficiariesAddData, dispatch]);\n  var renderConfirmationModalBodyItem = React.useCallback(function (field, optional) {\n    var focusedClass = classnames('cr-email-form__group', {\n      'cr-email-form__group--focused': confirmationModalCodeFocused,\n      'cr-email-form__group--optional': optional\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: field,\n      className: focusedClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"text\",\n      label: formatMessage({\n        id: \"page.body.wallets.beneficiaries.confirmationModal.body.\".concat(field)\n      }),\n      placeholder: formatMessage({\n        id: \"page.body.wallets.beneficiaries.confirmationModal.body.\".concat(field)\n      }),\n      defaultLabel: field,\n      handleChangeInput: function handleChangeInput(value) {\n        return handleChangeFieldValue(field, value);\n      },\n      inputValue: confirmationModalCode,\n      handleFocusInput: function handleFocusInput() {\n        return handleChangeFieldFocus(\"\".concat(field, \"Focused\"));\n      },\n      classNameLabel: \"cr-email-form__label\",\n      classNameInput: \"cr-email-form__input\",\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }, [confirmationModalCodeFocused, confirmationModalCode, formatMessage, handleChangeFieldFocus, handleChangeFieldValue]);\n  var renderConfirmationModalBody = React.useCallback(function () {\n    var isDisabled = !confirmationModalCode;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form__form-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"confirmation-modal__content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LetterIcon, {\n      className: \"confirmation-modal__content__icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"confirmation-modal__content__text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.wallets.beneficiaries.confirmationModal.body.text'\n    }))), renderConfirmationModalBodyItem('confirmationModalCode'), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form__button-wrapper cr-email-form__button-wrapper--double\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleResendConfirmationCode,\n      size: \"lg\",\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.wallets.beneficiaries.confirmationModal.body.resendButton'\n    })), /*#__PURE__*/React.createElement(Button, {\n      disabled: isDisabled,\n      onClick: handleSubmitConfirmationModal,\n      size: \"lg\",\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.wallets.beneficiaries.confirmationModal.body.button'\n    }))));\n  }, [confirmationModalCode, formatMessage, handleResendConfirmationCode, handleSubmitConfirmationModal, renderConfirmationModalBodyItem]);\n  var renderConfirmationModalHeader = React.useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form__options-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form__option\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form__option-inner\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.wallets.beneficiaries.confirmationModal.header'\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pg-profile-page__close pg-profile-page__pull-right\",\n      onClick: handleClickToggleConfirmationModal(true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }))));\n  }, [handleClickToggleConfirmationModal, formatMessage]);\n  var renderContent = React.useCallback(function () {\n    var className = classnames('beneficiaries-confirmation-modal', {\n      'cr-modal': !isMobileDevice\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-email-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, renderConfirmationModalHeader(), renderConfirmationModalBody()));\n  }, [isMobileDevice, renderConfirmationModalBody, renderConfirmationModalHeader]);\n  return isMobileDevice ? /*#__PURE__*/React.createElement(Modal, {\n    onClose: props.handleToggleConfirmationModal,\n    title: formatMessage({\n      id: 'page.mobile.wallet.withdraw.modal.new.account'\n    }),\n    isOpen: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, renderContent()) : renderContent();\n};\n\nvar BeneficiariesActivateModal = React.memo(BeneficiariesActivateModalComponent);\nexport { BeneficiariesActivateModal };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/Beneficiaries/BeneficiariesActivateModal.tsx"],"names":["classnames","React","Button","useIntl","useDispatch","useSelector","LetterIcon","Modal","beneficiariesActivate","beneficiariesResendPin","selectMobileDeviceState","CustomInput","BeneficiariesActivateModalComponent","props","useState","confirmationModalCode","setConfirmationModalCode","confirmationModalCodeFocused","setConfirmationModalCodeFocused","formatMessage","dispatch","isMobileDevice","handleToggleConfirmationModal","beneficiariesAddData","handleChangeFieldValue","useCallback","key","value","handleChangeFieldFocus","v","handleClearModalsInputs","handleClickToggleConfirmationModal","clear","handleSubmitConfirmationModal","payload","pin","id","handleResendConfirmationCode","renderConfirmationModalBodyItem","field","optional","focusedClass","renderConfirmationModalBody","isDisabled","renderConfirmationModalHeader","renderContent","className","BeneficiariesActivateModal","memo"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { LetterIcon } from '../../assets/images/LetterIcon';\nimport { Modal } from '../../mobile/components/Modal';\nimport {\n    beneficiariesActivate,\n    beneficiariesResendPin,\n    Beneficiary,\n    selectMobileDeviceState,\n} from '../../modules';\nimport { CustomInput } from '../CustomInput';\n\ninterface Props {\n    beneficiariesAddData: Beneficiary;\n    handleToggleConfirmationModal: () => void;\n}\n\n\nconst BeneficiariesActivateModalComponent: React.FC<Props> = (props: Props) => {\n    const [confirmationModalCode, setConfirmationModalCode] = React.useState('');\n    const [confirmationModalCodeFocused, setConfirmationModalCodeFocused] = React.useState(false);\n\n    const { formatMessage } = useIntl();\n    const dispatch = useDispatch();\n\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n\n    const { handleToggleConfirmationModal, beneficiariesAddData } = props;\n\n    const handleChangeFieldValue = React.useCallback((key: string, value: string) => {\n        setConfirmationModalCode(value);\n    }, []);\n\n    const handleChangeFieldFocus = React.useCallback((key: string) => {\n        setConfirmationModalCodeFocused(v => !v);\n    }, []);\n\n    const handleClearModalsInputs = React.useCallback(() => {\n        setConfirmationModalCode('');\n        setConfirmationModalCodeFocused(false);\n    }, []);\n\n    const handleClickToggleConfirmationModal = React.useCallback((clear?: boolean) => () => {\n        handleToggleConfirmationModal();\n\n        if (clear) {\n            handleClearModalsInputs();\n        }\n    }, [handleToggleConfirmationModal, handleClearModalsInputs]);\n\n\n    const handleSubmitConfirmationModal = React.useCallback(() => {\n        if (beneficiariesAddData) {\n            const payload = {\n                pin: confirmationModalCode,\n                id: beneficiariesAddData.id,\n            };\n\n            dispatch(beneficiariesActivate(payload));\n        }\n\n        handleClearModalsInputs();\n    }, [confirmationModalCode, dispatch, beneficiariesAddData, handleClearModalsInputs]);\n\n    const handleResendConfirmationCode = React.useCallback(() => {\n        if (beneficiariesAddData) {\n            const payload = {\n                id: beneficiariesAddData.id,\n            };\n\n            dispatch(beneficiariesResendPin(payload));\n        }\n    }, [beneficiariesAddData, dispatch]);\n\n    const renderConfirmationModalBodyItem = React.useCallback((field: string, optional?: boolean) => {\n        const focusedClass = classnames('cr-email-form__group', {\n            'cr-email-form__group--focused': confirmationModalCodeFocused,\n            'cr-email-form__group--optional': optional,\n        });\n\n        return (\n            <div key={field} className={focusedClass}>\n                <CustomInput\n                    type=\"text\"\n                    label={formatMessage({ id: `page.body.wallets.beneficiaries.confirmationModal.body.${field}` })}\n                    placeholder={formatMessage({ id: `page.body.wallets.beneficiaries.confirmationModal.body.${field}` })}\n                    defaultLabel={field}\n                    handleChangeInput={value => handleChangeFieldValue(field, value)}\n                    inputValue={confirmationModalCode}\n                    handleFocusInput={() => handleChangeFieldFocus(`${field}Focused`)}\n                    classNameLabel=\"cr-email-form__label\"\n                    classNameInput=\"cr-email-form__input\"\n                    autoFocus={true}\n                />\n            </div>\n        );\n    },  [confirmationModalCodeFocused, confirmationModalCode, formatMessage, handleChangeFieldFocus, handleChangeFieldValue]);\n\n    const renderConfirmationModalBody = React.useCallback(() => {\n        const isDisabled = !confirmationModalCode;\n\n        return (\n            <div className=\"cr-email-form__form-content\">\n                <div className=\"confirmation-modal__content\">\n                    <LetterIcon className=\"confirmation-modal__content__icon\" />\n                    <span className=\"confirmation-modal__content__text\">{formatMessage({ id: 'page.body.wallets.beneficiaries.confirmationModal.body.text' })}</span>\n                </div>\n                {renderConfirmationModalBodyItem('confirmationModalCode')}\n                <div className=\"cr-email-form__button-wrapper cr-email-form__button-wrapper--double\">\n                    <Button\n                        onClick={handleResendConfirmationCode}\n                        size=\"lg\"\n                        variant=\"primary\"\n                    >\n                        {formatMessage({ id: 'page.body.wallets.beneficiaries.confirmationModal.body.resendButton' })}\n                    </Button>\n                    <Button\n                        disabled={isDisabled}\n                        onClick={handleSubmitConfirmationModal}\n                        size=\"lg\"\n                        variant=\"primary\"\n                    >\n                        {formatMessage({ id: 'page.body.wallets.beneficiaries.confirmationModal.body.button' })}\n                    </Button>\n                </div>\n            </div>\n        );\n    }, [confirmationModalCode, formatMessage, handleResendConfirmationCode, handleSubmitConfirmationModal, renderConfirmationModalBodyItem]);\n\n    const renderConfirmationModalHeader = React.useCallback(() => {\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        {formatMessage({ id :'page.body.wallets.beneficiaries.confirmationModal.header' })}\n                        <span\n                            className=\"pg-profile-page__close pg-profile-page__pull-right\"\n                            onClick={handleClickToggleConfirmationModal(true)}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }, [handleClickToggleConfirmationModal, formatMessage]);\n\n    const renderContent = React.useCallback(() => {\n        const className = classnames('beneficiaries-confirmation-modal', {\n            'cr-modal': !isMobileDevice,\n        });\n\n        return (\n            <div className={className}>\n                <div className=\"cr-email-form\">\n                    {renderConfirmationModalHeader()}\n                    {renderConfirmationModalBody()}\n                </div>\n            </div>\n        );\n    }, [isMobileDevice, renderConfirmationModalBody, renderConfirmationModalHeader]);\n\n    return (\n        isMobileDevice ?\n            <Modal\n                onClose={props.handleToggleConfirmationModal}\n                title={formatMessage({ id: 'page.mobile.wallet.withdraw.modal.new.account' })}\n                isOpen>\n                {renderContent()}\n            </Modal> : renderContent()\n    );\n};\n\nconst BeneficiariesActivateModal = React.memo(BeneficiariesActivateModalComponent);\n\nexport {\n    BeneficiariesActivateModal,\n};\n"]},"metadata":{},"sourceType":"module"}