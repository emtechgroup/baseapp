{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/Decimal/index.tsx\";\nimport * as React from 'react';\n\nvar handleRemoveExponent = function handleRemoveExponent(value) {\n  var data = String(value).split(/[eE]/);\n\n  if (data.length === 1) {\n    return data[0];\n  }\n\n  var sign = Number(value) < 0 ? '-' : '';\n  var str = data[0].replace('.', '');\n  var result = '';\n  var power = Number(data[1]) + 1;\n\n  if (power < 0) {\n    result = \"\".concat(sign, \"0.\");\n\n    while (power++) {\n      result += '0';\n    } // eslint-disable-next-line\n\n\n    return result + str.replace(/^\\-/, '');\n  }\n\n  power -= str.length;\n\n  while (power--) {\n    result += '0';\n  }\n\n  return \"\".concat(str).concat(result);\n};\n\nvar formatWithSeparators = function formatWithSeparators(value, thousSep, floatSep) {\n  var fmtNum = value;\n\n  if (thousSep !== floatSep) {\n    if (floatSep) {\n      fmtNum = fmtNum.replace('.', floatSep);\n    }\n\n    if (thousSep && floatSep || thousSep && !floatSep && thousSep !== '.') {\n      var fmtNumParts = fmtNum.toString().split(floatSep || '.');\n      fmtNumParts[0] = fmtNumParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousSep);\n      fmtNum = fmtNumParts.join(floatSep || '.');\n    }\n  }\n\n  return fmtNum;\n};\n\nvar Decimal = /*#__PURE__*/function (_React$Component) {\n  _inherits(Decimal, _React$Component);\n\n  var _super = _createSuper(Decimal);\n\n  function Decimal() {\n    var _this;\n\n    _classCallCheck(this, Decimal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.highlightNumbers = function (value, prevValue, fixed, thousSep, floatSep) {\n      var val = Decimal.format(value, fixed, thousSep, floatSep);\n      var prev = Decimal.format(prevValue, fixed, thousSep, floatSep);\n      var highlighted = '';\n\n      while (val !== prev && val.length > 0) {\n        highlighted = val[val.length - 1] + highlighted;\n        val = val.slice(0, -1);\n        prev = prev.slice(0, -1);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-decimal__opacity\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, val), /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, highlighted));\n    };\n\n    return _this;\n  }\n\n  _createClass(Decimal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          fixed = _this$props.fixed,\n          prevValue = _this$props.prevValue,\n          thousSep = _this$props.thousSep,\n          floatSep = _this$props.floatSep;\n\n      if (prevValue) {\n        return this.highlightNumbers(children, prevValue, fixed, thousSep, floatSep);\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, Decimal.getNumberBeforeDot(children, fixed, thousSep, floatSep)), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"cr-decimal__opacity\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }\n        }, Decimal.getNumberAfterDot(children, fixed)));\n      }\n    }\n  }], [{\n    key: \"format\",\n    value: function format(value, precision, thousSep, floatSep) {\n      if (typeof value === 'undefined') {\n        return '0';\n      }\n\n      var result = '0';\n\n      if (value !== '' && value !== 0) {\n        result = handleRemoveExponent(Number(\"\".concat(Math.floor(Number(\"\".concat(handleRemoveExponent(value), \"e\").concat(precision))), \"e-\").concat(precision)));\n      }\n\n      if (result.indexOf('.') === -1 && precision > 0) {\n        result += '.';\n      }\n\n      while (result.slice(result.indexOf('.')).length <= precision) {\n        result += '0';\n      }\n\n      result = formatWithSeparators(result, thousSep, floatSep);\n      return result;\n    }\n  }, {\n    key: \"getNumberBeforeDot\",\n    value: function getNumberBeforeDot(value, fixed, thousSep, floatSep) {\n      return Decimal.format(value, 0, thousSep, floatSep);\n    }\n  }, {\n    key: \"getNumberAfterDot\",\n    value: function getNumberAfterDot(value, fixed, thousSep, floatSep) {\n      if (fixed === 0) {\n        return;\n      }\n\n      var str = Decimal.format(value, fixed);\n      var floatNum = str.slice(str.indexOf('.'));\n\n      if (floatSep) {\n        floatNum = floatNum.replace('.', floatSep);\n      }\n\n      return floatNum;\n    }\n  }]);\n\n  return Decimal;\n}(React.Component);\n\nexport { Decimal, formatWithSeparators };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/Decimal/index.tsx"],"names":["React","handleRemoveExponent","value","data","String","split","length","sign","Number","str","replace","result","power","formatWithSeparators","thousSep","floatSep","fmtNum","fmtNumParts","toString","join","Decimal","highlightNumbers","prevValue","fixed","val","format","prev","highlighted","slice","props","children","getNumberBeforeDot","getNumberAfterDot","precision","Math","floor","indexOf","floatNum","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nexport interface DecimalProps {\n    /**\n     * Number of digits after dot\n     */\n    fixed: number;\n    /**\n     * thousands separator\n     */\n    thousSep?: string;\n    /**\n     * float separator\n     */\n    floatSep?: string;\n    /**\n     * Number to format\n     */\n    children?: string | number;\n    /**\n     * Children's previous value.\n     * If undefined, only integer part of the number is highlighted\n     */\n    prevValue?: string | number;\n}\n\nconst handleRemoveExponent = (value: DecimalProps['children']) => {\n    const data = String(value).split(/[eE]/);\n\n    if (data.length === 1) {\n        return data[0];\n    }\n\n    const sign = Number(value) < 0 ? '-' : '';\n    const str = data[0].replace('.', '');\n    let result = '';\n    let power = Number(data[1]) + 1;\n\n    if (power < 0) {\n        result = `${sign}0.`;\n\n        while (power++) {\n            result += '0';\n        }\n\n        // eslint-disable-next-line\n        return result + str.replace(/^\\-/,'');\n    }\n\n    power -= str.length;\n\n    while (power--) {\n        result += '0';\n    }\n\n    return `${str}${result}`;\n};\n\nconst formatWithSeparators = (value: string, thousSep?: string, floatSep?: string) => {\n    let fmtNum = value;\n\n    if (thousSep !== floatSep) {\n        if (floatSep) {\n            fmtNum = fmtNum.replace('.', floatSep);\n        }\n\n        if ((thousSep && floatSep) || (thousSep && !floatSep && thousSep !== '.')) {\n            const fmtNumParts = fmtNum.toString().split(floatSep || '.');\n            fmtNumParts[0] = fmtNumParts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousSep);\n            fmtNum = fmtNumParts.join(floatSep || '.');\n        }\n    }\n\n    return fmtNum;\n};\n\nclass Decimal extends React.Component<DecimalProps> {\n    public static format(value: DecimalProps['children'], precision: number, thousSep?: string, floatSep?: string) {\n        if (typeof value === 'undefined') {\n            return '0';\n        }\n\n        let result = '0';\n\n        if (value !== '' && value !== 0) {\n            result = handleRemoveExponent(Number(`${Math.floor(Number(`${handleRemoveExponent(value)}e${precision}`))}e-${precision}`));\n        }\n\n        if (result.indexOf('.') === -1 && precision > 0) {\n            result += '.';\n        }\n\n        while (result.slice(result.indexOf('.')).length <= precision) {\n            result += '0';\n        }\n\n        result = formatWithSeparators(result, thousSep, floatSep);\n\n        return result;\n    }\n\n    public static getNumberBeforeDot(value: DecimalProps['children'], fixed: number, thousSep?: string, floatSep?: string) {\n        return Decimal.format(value, 0, thousSep, floatSep);\n    }\n\n    public static getNumberAfterDot(value: DecimalProps['children'], fixed: number, thousSep?: string, floatSep?: string) {\n        if (fixed === 0) {\n            return;\n        }\n\n        const str = Decimal.format(value, fixed);\n        let floatNum = str.slice(str.indexOf('.'));\n\n        if (floatSep) {\n            floatNum = floatNum.replace('.', floatSep);\n        }\n\n        return floatNum;\n    }\n\n    public render() {\n        const {\n            children,\n            fixed,\n            prevValue,\n            thousSep,\n            floatSep,\n        } = this.props;\n\n        if (prevValue) {\n            return this.highlightNumbers(children, prevValue, fixed, thousSep, floatSep);\n        } else {\n            return (\n                <React.Fragment>\n                    <span>{Decimal.getNumberBeforeDot(children, fixed, thousSep, floatSep)}</span>\n                    <span className=\"cr-decimal__opacity\">{Decimal.getNumberAfterDot(children, fixed)}</span>\n                </React.Fragment>\n            );\n        }\n    }\n\n    private highlightNumbers = (value: DecimalProps['children'], prevValue: DecimalProps['children'], fixed: number, thousSep?: string, floatSep?: string) => {\n        let val = Decimal.format(value, fixed, thousSep, floatSep);\n        let prev = Decimal.format(prevValue, fixed, thousSep, floatSep);\n        let highlighted = '';\n\n        while (val !== prev && val.length > 0) {\n            highlighted = val[val.length - 1] + highlighted;\n            val = val.slice(0, -1);\n            prev = prev.slice(0, -1);\n        }\n\n        return (\n            <React.Fragment>\n                <span className=\"cr-decimal__opacity\">{val}</span>\n                <span>{highlighted}</span>\n            </React.Fragment>\n        );\n    };\n}\n\nexport {\n    Decimal,\n    formatWithSeparators,\n};\n"]},"metadata":{},"sourceType":"module"}