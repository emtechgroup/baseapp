{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/Table/index.tsx\";\nimport classNames from 'classnames';\nimport * as React from 'react';\n\n/**\n * Cryptobase Table overrides default table\n */\nvar Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  var _super = _createSuper(Table);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _super.call(this, props);\n\n    _this.handleSelect = function (key) {\n      return function () {\n        var onSelect = _this.props.onSelect;\n\n        if (onSelect) {\n          _this.setState({\n            selectedRowKey: key\n          }, function () {\n            if (onSelect) {\n              onSelect(key);\n            }\n          });\n        }\n      };\n    };\n\n    _this.state = {\n      activeFilter: undefined,\n      resultData: undefined,\n      selectedRowKey: props.selectedKey\n    };\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var filters = this.props.filters;\n\n      if (filters && filters.length > 0) {\n        this.handleFilter(filters[0]);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (this.state.selectedRowKey !== next.selectedKey) {\n        this.setState({\n          selectedRowKey: next.selectedKey\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.data !== this.props.data && this.props.filters) {\n        var activeFilter = this.props.filters.find(function (filter) {\n          return filter.name === _this2.state.activeFilter;\n        });\n\n        if (activeFilter) {\n          this.handleFilter(activeFilter);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          header = _this$props.header,\n          titleComponent = _this$props.titleComponent,\n          _this$props$filters = _this$props.filters,\n          filters = _this$props$filters === void 0 ? [] : _this$props$filters,\n          rowKeyIndex = _this$props.rowKeyIndex;\n      this.ensureDataIsValid(data);\n      var cn = classNames('cr-table-header__content', {\n        'cr-table-header__content-empty': !titleComponent && filters.length === 0\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: cn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, titleComponent ? this.renderTitleComponent() : null, filters.length ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table__filters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, this.renderFilters()) : null), /*#__PURE__*/React.createElement(\"table\", {\n        className: 'cr-table',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, header && header.length && this.renderHead(header), this.renderBody(data, rowKeyIndex)), this.renderBackground(data));\n    }\n  }, {\n    key: \"renderTitleComponent\",\n    value: function renderTitleComponent() {\n      var titleComponent = this.props.titleComponent;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'cr-title-component',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }\n      }, titleComponent);\n    }\n  }, {\n    key: \"renderRowCells\",\n    value: function renderRowCells(row) {\n      var _this3 = this;\n\n      return row && row.length ? row.map(function (c, index) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          colSpan: row.length === 1 ? _this3.props.colSpan : undefined,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, c);\n      }) : [];\n    }\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(item) {\n      var data = this.props.data;\n\n      if (!item.filter) {\n        this.setState({\n          resultData: data\n        });\n        return;\n      }\n\n      var resultData = _toConsumableArray(data).filter(item.filter);\n\n      this.setState({\n        activeFilter: item.name,\n        resultData: resultData\n      });\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var _this4 = this;\n\n      var _this$props$filters2 = this.props.filters,\n          filters = _this$props$filters2 === void 0 ? [] : _this$props$filters2;\n      var activeFilter = this.state.activeFilter;\n\n      var cn = function cn(filterName) {\n        return classNames('cr-table__filter', {\n          'cr-table__filter--active': activeFilter === filterName\n        });\n      };\n\n      return filters.map(function (item) {\n        var handleFilterClick = function handleFilterClick() {\n          _this4.handleFilter(item);\n        };\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: cn(item.name),\n          key: item.name,\n          onClick: handleFilterClick,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }\n        }, item.name);\n      });\n    }\n  }, {\n    key: \"renderHead\",\n    value: function renderHead(row) {\n      var _this5 = this;\n\n      var cells = row.map(function (c, index) {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: index,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 45\n          }\n        }, c);\n      });\n      return /*#__PURE__*/React.createElement(\"thead\", {\n        className: 'cr-table__head',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: 'cr-table__head-row',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, cells));\n    }\n  }, {\n    key: \"renderRowBackground\",\n    value: function renderRowBackground(i) {\n      var _this$props2 = this.props,\n          rowBackground = _this$props2.rowBackground,\n          _this$props2$rowBackg = _this$props2.rowBackgroundColor,\n          rowBackgroundColor = _this$props2$rowBackg === void 0 ? 'rgba(184, 233, 245, 0.7)' : _this$props2$rowBackg;\n      var rowBackgroundResult = rowBackground ? rowBackground(i) : {};\n\n      var style = _objectSpread(_objectSpread({}, rowBackgroundResult), {}, {\n        backgroundColor: rowBackgroundColor\n      });\n\n      return rowBackground ? /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        style: style,\n        className: \"cr-table-background__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }) : null;\n    }\n  }, {\n    key: \"renderBackground\",\n    value: function renderBackground(rows) {\n      var _this6 = this;\n\n      var resultData = this.state.resultData;\n      var _this$props3 = this.props,\n          rowBackground = _this$props3.rowBackground,\n          side = _this$props3.side;\n      var dataToBeMapped = resultData || rows;\n\n      var renderBackgroundRow = function renderBackgroundRow(r, i) {\n        return _this6.renderRowBackground(i);\n      };\n\n      var className = classNames('cr-table-background', {\n        'cr-table-background--left': side === 'left',\n        'cr-table-background--right': side === 'right'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, rowBackground && dataToBeMapped.map(renderBackgroundRow));\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody(rows, rowKeyIndex) {\n      var _this7 = this;\n\n      var _this$state = this.state,\n          resultData = _this$state.resultData,\n          selectedRowKey = _this$state.selectedRowKey;\n\n      var rowClassName = function rowClassName(key) {\n        return classNames({\n          'cr-table__row--selected': selectedRowKey === key\n        });\n      };\n\n      var dataToBeMapped = resultData || rows;\n      var rowElements = dataToBeMapped.map(function (r, i) {\n        var rowKey = String(rowKeyIndex !== undefined ? r[rowKeyIndex] : i);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: rowClassName(rowKey),\n          key: rowKey,\n          onClick: _this7.handleSelect(rowKey),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }\n        }, _this7.renderRowCells(r));\n      });\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        className: 'cr-table__body',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, rowElements);\n    }\n  }, {\n    key: \"ensureDataIsValid\",\n    value: function ensureDataIsValid(data) {\n      var length = data[0].length;\n      var len = data.length;\n\n      for (var i = 0; i < len; i += 1) {\n        if (data[i].length !== length) {\n          throw Error('Array elements must have the same length');\n        }\n      }\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nexport { Table };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/Table/index.tsx"],"names":["classNames","React","Table","props","handleSelect","key","onSelect","setState","selectedRowKey","state","activeFilter","undefined","resultData","selectedKey","filters","length","handleFilter","next","prevProps","data","find","filter","name","header","titleComponent","rowKeyIndex","ensureDataIsValid","cn","renderTitleComponent","renderFilters","renderHead","renderBody","renderBackground","row","map","c","index","colSpan","item","filterName","handleFilterClick","cells","i","rowBackground","rowBackgroundColor","rowBackgroundResult","style","backgroundColor","rows","side","dataToBeMapped","renderBackgroundRow","r","renderRowBackground","className","rowClassName","rowElements","rowKey","String","renderRowCells","len","Error","Component"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\n\nexport type CellData = string | number | React.ReactNode | undefined;\n\nexport interface Filter {\n    name: string;\n    filter: (cell: CellData[]) => boolean;\n}\n\nexport interface TableState {\n    /**\n     * Selected filter\n     */\n    activeFilter?: string;\n    /**\n     * Filtered data\n     */\n    resultData?: CellData[][];\n    /**\n     * Key of selected row\n     */\n    selectedRowKey?: string;\n}\n\ninterface TableProps {\n    /**\n     * Data which is used to render Table. The first element\n     * of array is used to render table head unless `noHead`\n     * is true. the rest is used to render Table body.\n     *\n     * All the elements of an array should have the same length.\n     */\n    data: CellData[][];\n    /**\n     * Renders table head.\n     */\n    header?: React.ReactNode[];\n    /**\n     *  Pair name & filter is used to filter table data depending on a filter\n     */\n    filters?: Filter[];\n    /**\n     * Row's unique key, could be a number - element's index in data\n     */\n    rowKeyIndex?: number;\n    /**\n     * Key of selected row, could be a string\n     */\n    selectedKey?: string;\n    /**\n     * Callback called when a row is selected\n     */\n    onSelect?: (key: string) => void;\n    /**\n     * Header which is displayed above the table\n     */\n    titleComponent?: React.ReactNode;\n    /**\n     * Defines whether row background shows or not, and calculates width of it\n     */\n    rowBackground?: (row: number) => React.CSSProperties;\n    /**\n     * Defines from what side row background starts `(left, right)`\n     * @default 'left'\n     */\n    side?: 'left' | 'right';\n    /**\n     * Sets row background color\n     */\n    rowBackgroundColor?: string;\n    /**\n     * Sets colspan count for empty table\n     */\n    colSpan?: number;\n}\n\n/**\n * Cryptobase Table overrides default table\n */\nclass Table extends React.Component<TableProps, TableState> {\n    constructor(props: TableProps) {\n        super(props);\n\n        this.state = {\n            activeFilter: undefined,\n            resultData: undefined,\n            selectedRowKey: props.selectedKey,\n        };\n    }\n\n    public componentDidMount() {\n        const { filters } = this.props;\n        if (filters && filters.length > 0) {\n            this.handleFilter(filters[0]);\n        }\n    }\n\n    public componentWillReceiveProps(next: TableProps) {\n        if (this.state.selectedRowKey !== next.selectedKey) {\n            this.setState({selectedRowKey: next.selectedKey});\n        }\n    }\n\n    public componentDidUpdate(prevProps: TableProps) {\n        if (prevProps.data !== this.props.data && this.props.filters) {\n            const activeFilter = this.props.filters.find(\n                filter => filter.name === this.state.activeFilter,\n            );\n\n            if (activeFilter) {\n                this.handleFilter(activeFilter);\n            }\n        }\n    }\n\n    public render() {\n        const { data, header, titleComponent, filters = [], rowKeyIndex } = this.props;\n\n        this.ensureDataIsValid(data);\n\n        const cn = classNames('cr-table-header__content', {\n            'cr-table-header__content-empty': !titleComponent && filters.length === 0,\n        });\n\n        return (\n            <div className=\"cr-table-container\">\n                <div className={cn}>\n                    {titleComponent ? this.renderTitleComponent() : null}\n                    {filters.length\n                        ?\n                        <div className=\"cr-table__filters\">{this.renderFilters()}</div>\n                        : null}\n                </div>\n                <table className={'cr-table'}>\n                    {header && header.length && this.renderHead(header)}\n                    {this.renderBody(data, rowKeyIndex)}\n                </table>\n                {this.renderBackground(data)}\n            </div>\n        );\n    }\n\n    private renderTitleComponent() {\n        const { titleComponent } = this.props;\n\n        return <div className={'cr-title-component'}>{titleComponent}</div>;\n    }\n\n    private renderRowCells(row: CellData[]) {\n\n        return row && row.length ?\n            row.map((c, index: number) =>\n                <td key={index} colSpan={row.length === 1 ? this.props.colSpan : undefined}>{c}</td>) : [];\n    }\n\n    private handleFilter(item: Filter) {\n        const { data } = this.props;\n\n        if (!item.filter) {\n            this.setState({\n                resultData: data,\n            });\n\n            return;\n        }\n        const resultData: CellData[][] = [...data].filter(item.filter);\n        this.setState({\n            activeFilter: item.name,\n            resultData: resultData,\n        });\n    }\n\n    private handleSelect = (key: string) => () => {\n        const { onSelect } = this.props;\n\n        if (onSelect) {\n            this.setState({\n                selectedRowKey: key,\n            }, () => {\n                if (onSelect) {\n                    onSelect(key);\n                }\n            });\n        }\n    };\n\n    private renderFilters() {\n        const { filters = [] } = this.props;\n        const { activeFilter } = this.state;\n\n        const cn = (filterName: string) => classNames('cr-table__filter', {\n            'cr-table__filter--active': activeFilter === filterName,\n        });\n\n        return filters.map((item: Filter) => {\n            const handleFilterClick = () => {\n                this.handleFilter(item);\n            };\n\n            return (\n                <div\n                    className={cn(item.name)}\n                    key={item.name}\n                    onClick={handleFilterClick}\n                >\n                    {item.name}\n                </div>\n            );\n        });\n    }\n\n    private renderHead(row: CellData[]) {\n        const cells = row.map((c, index) => <th key={index}>{c}</th>);\n\n        return (\n            <thead className={'cr-table__head'}>\n                <tr className={'cr-table__head-row'}>{cells}</tr>\n            </thead>\n        );\n    }\n\n    private renderRowBackground(i: number) {\n        const { rowBackground, rowBackgroundColor = 'rgba(184, 233, 245, 0.7)' } = this.props;\n        const rowBackgroundResult = rowBackground ? rowBackground(i) : {};\n        const style = {\n            ...rowBackgroundResult,\n            backgroundColor: rowBackgroundColor,\n        };\n\n        return (rowBackground\n            ? <span key={i} style={style} className=\"cr-table-background__row\" />\n            : null);\n    }\n\n    private renderBackground(rows: CellData[][]) {\n        const { resultData } = this.state;\n        const { rowBackground, side } = this.props;\n        const dataToBeMapped = resultData || rows;\n        const renderBackgroundRow = (r: CellData[], i: number) => this.renderRowBackground(i);\n\n        const className = classNames('cr-table-background', {\n            'cr-table-background--left': side === 'left',\n            'cr-table-background--right': side === 'right',\n        });\n\n        return (\n            <div className={className}>\n                {rowBackground && dataToBeMapped.map(renderBackgroundRow)}\n            </div>\n        );\n    }\n\n    private renderBody(rows: CellData[][], rowKeyIndex: number | undefined) {\n        const { resultData, selectedRowKey } = this.state;\n\n        const rowClassName = (key: string) => classNames({\n            'cr-table__row--selected': selectedRowKey === key,\n        });\n\n        const dataToBeMapped = resultData || rows;\n        const rowElements = dataToBeMapped.map((r, i) => {\n            const rowKey = String((rowKeyIndex !== undefined) ? r[rowKeyIndex] : i);\n\n            return (\n                <tr\n                    className={rowClassName(rowKey)}\n                    key={rowKey}\n                    onClick={this.handleSelect(rowKey)}\n                >\n                    {this.renderRowCells(r)}\n                </tr>\n            );\n        });\n\n        return (\n            <tbody className={'cr-table__body'}>\n            {rowElements}\n            </tbody>\n        );\n    }\n\n    private ensureDataIsValid(data: CellData[][]) {\n        const length = data[0].length;\n        const len = data.length;\n        for (let i = 0; i < len; i += 1) {\n            if (data[i].length !== length) {\n                throw Error('Array elements must have the same length');\n            }\n        }\n    }\n}\n\nexport {\n    Table,\n};\n"]},"metadata":{},"sourceType":"module"}