{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(userActivitySaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { userActivityData, userActivityError } from '../actions';\nvar userActivityOptions = {\n  apiVersion: 'barong',\n  withHeaders: true\n};\nexport function userActivitySaga(action) {\n  var _action$payload, page, limit, _yield$call, data, headers;\n\n  return _regeneratorRuntime.wrap(function userActivitySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, page = _action$payload.page, limit = _action$payload.limit;\n          _context.next = 4;\n          return call(API.get(userActivityOptions), \"/resource/users/activity/all?limit=\".concat(limit, \"&page=\").concat(page + 1));\n\n        case 4:\n          _yield$call = _context.sent;\n          data = _yield$call.data;\n          headers = _yield$call.headers;\n          _context.next = 9;\n          return put(userActivityData({\n            list: data,\n            page,\n            total: headers.total\n          }));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'console',\n            extraOptions: {\n              actionError: userActivityError\n            }\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/userActivity/sagas/userActivitySaga.ts"],"names":["userActivitySaga","call","put","sendError","API","userActivityData","userActivityError","userActivityOptions","apiVersion","withHeaders","action","payload","page","limit","get","data","headers","list","total","error","processingType","extraOptions","actionError"],"mappings":";;oDAUiBA,gB;;AAVjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAuE,YAAvE;AAEA,IAAMC,mBAAmC,GAAG;AACxCC,EAAAA,UAAU,EAAE,QAD4B;AAExCC,EAAAA,WAAW,EAAE;AAF2B,CAA5C;AAKA,OAAO,SAAUT,gBAAV,CAA2BU,MAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEyBA,MAAM,CAACC,OAFhC,EAESC,IAFT,mBAESA,IAFT,EAEeC,KAFf,mBAEeA,KAFf;AAAA;AAG2B,iBAAMZ,IAAI,CAACG,GAAG,CAACU,GAAJ,CAAQP,mBAAR,CAAD,+CAAqEM,KAArE,mBAAmFD,IAAI,GAAG,CAA1F,EAAV;;AAH3B;AAAA;AAGSG,UAAAA,IAHT,eAGSA,IAHT;AAGeC,UAAAA,OAHf,eAGeA,OAHf;AAAA;AAIC,iBAAMd,GAAG,CAACG,gBAAgB,CAAC;AAAEY,YAAAA,IAAI,EAAEF,IAAR;AAAcH,YAAAA,IAAd;AAAoBM,YAAAA,KAAK,EAAEF,OAAO,CAACE;AAAnC,WAAD,CAAjB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMhB,GAAG,CAACC,SAAS,CAAC;AAChBgB,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,SAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEhB;AADH;AAHE,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { userActivityData, userActivityError, UserActivityFetch } from '../actions';\n\nconst userActivityOptions: RequestOptions = {\n    apiVersion: 'barong',\n    withHeaders: true,\n};\n\nexport function* userActivitySaga(action: UserActivityFetch) {\n    try {\n        const { page, limit } = action.payload;\n        const { data, headers } = yield call(API.get(userActivityOptions), `/resource/users/activity/all?limit=${limit}&page=${page + 1}`);\n        yield put(userActivityData({ list: data, page, total: headers.total }));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'console',\n            extraOptions: {\n                actionError: userActivityError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}