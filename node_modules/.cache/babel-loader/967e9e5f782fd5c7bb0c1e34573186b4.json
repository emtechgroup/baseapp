{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileVerification/index.tsx\";\nimport * as React from 'react';\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { kycSteps } from '../../api';\nimport { Tooltip } from '../../components';\nimport { labelFetch as _labelFetch, selectLabelData, selectUserInfo } from '../../modules';\n/* Icons */\n\nimport { CheckBigIcon } from '../../assets/images/kyc/CheckBigIcon';\nimport { CheckIcon } from '../../assets/images/kyc/CheckIcon';\nimport { ClocksIcon } from '../../assets/images/kyc/ClocksIcon';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\n\nvar ProfileVerificationComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileVerificationComponent, _React$Component);\n\n  var _super = _createSuper(ProfileVerificationComponent);\n\n  function ProfileVerificationComponent() {\n    var _this;\n\n    _classCallCheck(this, ProfileVerificationComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderProgressBarStep = function (step, index, labels) {\n      var targetLabelStatus = _this.handleCheckLabel(labels, step);\n\n      switch (targetLabelStatus) {\n        case 'verified':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--verified\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.progress.level\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }\n          }, \"\\xA0\", index + 1), /*#__PURE__*/React.createElement(CheckIcon, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }\n          }));\n\n        case 'drafted':\n        case 'pending':\n        case 'submitted':\n          return /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"bottom\",\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: /*#__PURE__*/React.createElement(Tooltip, {\n              title: \"page.body.profile.verification.progress.tooltip.\".concat(step, \".pending\"),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 34\n              }\n            }),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--pending\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.progress.level\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }\n          }, \"\\xA0\", index + 1), /*#__PURE__*/React.createElement(ClocksIcon, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }\n          })));\n\n        case 'rejected':\n          return /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"bottom\",\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: /*#__PURE__*/React.createElement(Tooltip, {\n              title: \"page.body.profile.verification.progress.tooltip.\".concat(step, \".rejected\"),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }\n            }),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--rejected\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.progress.level\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }\n          }, \"\\xA0\", index + 1), /*#__PURE__*/React.createElement(CrossIcon, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }\n          })));\n\n        case 'blocked':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--blocked\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.progress.level\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }\n          }, \"\\xA0\", index + 1));\n\n        default:\n          return /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"bottom\",\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: /*#__PURE__*/React.createElement(Tooltip, {\n              title: \"page.body.profile.verification.progress.tooltip.\".concat(step, \".default\"),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 34\n              }\n            }),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--active\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.progress.level\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }\n          }, \"\\xA0\", index + 1)));\n      }\n    };\n\n    _this.handleCheckLabel = function (labels, labelToCheck) {\n      var targetLabel = labels.length && labels.find(function (label) {\n        return label.key === labelToCheck && label.scope === 'private';\n      });\n      var targetLabelStatus = targetLabel ? targetLabel.value : '';\n      var indexOfPrevStep = kycSteps().indexOf(labelToCheck) - 1;\n\n      if (indexOfPrevStep !== -1) {\n        var prevStepPassed = Boolean(labels.find(function (label) {\n          return label.key === kycSteps()[indexOfPrevStep] && label.value === 'verified' && label.scope === 'private';\n        }));\n\n        if (!prevStepPassed) {\n          targetLabelStatus = 'blocked';\n        }\n      }\n\n      return targetLabelStatus;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileVerificationComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.labelFetch();\n    }\n  }, {\n    key: \"renderProgressBar\",\n    value: function renderProgressBar(labels) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page-verification__progress-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, kycSteps().map(function (step, index) {\n        return _this2.renderProgressBarStep(step, index, labels);\n      }));\n    }\n  }, {\n    key: \"renderVerificationLabel\",\n    value: function renderVerificationLabel(labels, labelToCheck, index) {\n      var targetLabelStatus = this.handleCheckLabel(labels, labelToCheck);\n\n      switch (targetLabelStatus) {\n        case 'verified':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"pg-profile-page-verification__step pg-profile-page-verification__step--verified\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }\n          }, index + 1, \".\\xA0\"), /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".title\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__subtitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".subtitle\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--verified\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.verified\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(CheckBigIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }\n          })));\n\n        case 'drafted':\n        case 'pending':\n        case 'submitted':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"pg-profile-page-verification__step pg-profile-page-verification__step--pending\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }\n          }, index + 1, \".\\xA0\"), /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".title\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__subtitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".subtitle\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--pending\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.pending\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(ClocksIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }\n          })));\n\n        case 'rejected':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"pg-profile-page-verification__step pg-profile-page-verification__step--rejected\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }\n          }, index + 1, \".\\xA0\"), /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".title\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__subtitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".subtitle\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"bottom\",\n            delay: {\n              show: 250,\n              hide: 400\n            },\n            overlay: /*#__PURE__*/React.createElement(Tooltip, {\n              title: \"page.body.profile.verification.\".concat(labelToCheck, \".rejected.tooltip\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--rejected\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/confirm\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.reverify\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(CrossIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }\n          }))));\n\n        case 'blocked':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"pg-profile-page-verification__step pg-profile-page-verification__step--blocked\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }\n          }, index + 1, \".\\xA0\"), /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".title\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__subtitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".subtitle\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__button pg-profile-page-verification__step__button--blocked\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/confirm\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.verify\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }\n          }))));\n\n        default:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"pg-profile-page-verification__step pg-profile-page-verification__step--active\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }\n          }, index + 1, \".\\xA0\"), /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".title\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__info__subtitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.\".concat(labelToCheck, \".subtitle\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"pg-profile-page-verification__step__button pg-profile-page-verification__step__button--active\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/confirm\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.profile.verification.verify\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }\n          }))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var labels = this.props.labels;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__box pg-profile-page-verification\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pg-profile-page-verification__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      })), this.renderProgressBar(labels), kycSteps().map(function (step, index) {\n        return _this3.renderVerificationLabel(labels, step, index);\n      }));\n    }\n  }]);\n\n  return ProfileVerificationComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state),\n    labels: selectLabelData(state)\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    labelFetch: function labelFetch() {\n      return dispatch(_labelFetch());\n    }\n  };\n};\n\nexport var ProfileVerification = connect(mapStateToProps, mapDispatchProps)(ProfileVerificationComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/ProfileVerification/index.tsx"],"names":["React","OverlayTrigger","FormattedMessage","connect","Link","kycSteps","Tooltip","labelFetch","selectLabelData","selectUserInfo","CheckBigIcon","CheckIcon","ClocksIcon","CrossIcon","ProfileVerificationComponent","renderProgressBarStep","step","index","labels","targetLabelStatus","handleCheckLabel","show","hide","labelToCheck","targetLabel","length","find","label","key","scope","value","indexOfPrevStep","indexOf","prevStepPassed","Boolean","props","map","renderProgressBar","renderVerificationLabel","Component","mapStateToProps","state","user","mapDispatchProps","dispatch","ProfileVerification"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { kycSteps } from '../../api';\nimport { Tooltip } from '../../components';\nimport { Label, labelFetch, selectLabelData, selectUserInfo, User } from '../../modules';\n\n/* Icons */\nimport { CheckBigIcon } from '../../assets/images/kyc/CheckBigIcon';\nimport { CheckIcon } from '../../assets/images/kyc/CheckIcon';\nimport { ClocksIcon } from '../../assets/images/kyc/ClocksIcon';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\n\ninterface ReduxProps {\n    labels: Label[];\n}\n\ninterface DispatchProps {\n    labelFetch: typeof labelFetch;\n}\n\ninterface ProfileVerificationProps {\n    user: User;\n}\n\ntype Props = DispatchProps & ProfileVerificationProps & ReduxProps;\n\nclass ProfileVerificationComponent extends React.Component<Props> {\n    public componentDidMount() {\n        this.props.labelFetch();\n    }\n\n    public renderProgressBarStep = (step: string, index: number, labels: Label[]) => {\n        const targetLabelStatus = this.handleCheckLabel(labels, step);\n\n        switch (targetLabelStatus) {\n            case 'verified':\n                return (\n                    <div className=\"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--verified\">\n                        <FormattedMessage id={`page.body.profile.verification.progress.level`} />\n                        <span>&nbsp;{index + 1}</span>\n                        <CheckIcon />\n                    </div>\n                );\n            case 'drafted':\n            case 'pending':\n            case 'submitted':\n                return (\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        delay={{ show: 250, hide: 400 }}\n                        overlay={<Tooltip title={`page.body.profile.verification.progress.tooltip.${step}.pending`} />}>\n                        <div className=\"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--pending\">\n                            <FormattedMessage id={`page.body.profile.verification.progress.level`} />\n                            <span>&nbsp;{index + 1}</span>\n                            <ClocksIcon />\n                        </div>\n                    </OverlayTrigger>\n                );\n            case 'rejected':\n                return (\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        delay={{ show: 250, hide: 400 }}\n                        overlay={\n                            <Tooltip title={`page.body.profile.verification.progress.tooltip.${step}.rejected`} />\n                        }>\n                        <div className=\"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--rejected\">\n                            <FormattedMessage id={`page.body.profile.verification.progress.level`} />\n                            <span>&nbsp;{index + 1}</span>\n                            <CrossIcon />\n                        </div>\n                    </OverlayTrigger>\n                );\n            case 'blocked':\n                return (\n                    <div className=\"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--blocked\">\n                        <FormattedMessage id={`page.body.profile.verification.progress.level`} />\n                        <span>&nbsp;{index + 1}</span>\n                    </div>\n                );\n            default:\n                return (\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        delay={{ show: 250, hide: 400 }}\n                        overlay={<Tooltip title={`page.body.profile.verification.progress.tooltip.${step}.default`} />}>\n                        <div className=\"pg-profile-page-verification__progress-bar__step pg-profile-page-verification__progress-bar__step--active\">\n                            <FormattedMessage id={`page.body.profile.verification.progress.level`} />\n                            <span>&nbsp;{index + 1}</span>\n                        </div>\n                    </OverlayTrigger>\n                );\n        }\n    };\n\n    public renderProgressBar(labels: Label[]) {\n        return (\n            <div className=\"pg-profile-page-verification__progress-bar\">\n                {kycSteps().map((step, index) => this.renderProgressBarStep(step, index, labels))}\n            </div>\n        );\n    }\n\n    public renderVerificationLabel(labels: Label[], labelToCheck: string, index: number) {\n        const targetLabelStatus = this.handleCheckLabel(labels, labelToCheck);\n\n        switch (targetLabelStatus) {\n            case 'verified':\n                return (\n                    <div\n                        key={index}\n                        className=\"pg-profile-page-verification__step pg-profile-page-verification__step--verified\">\n                        <div className=\"pg-profile-page-verification__step__info\">\n                            <div className=\"pg-profile-page-verification__step__info__title\">\n                                <span>{index + 1}.&nbsp;</span>\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.title`} />\n                            </div>\n                            <div className=\"pg-profile-page-verification__step__info__subtitle\">\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.subtitle`} />\n                            </div>\n                        </div>\n                        <div className=\"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--verified\">\n                            <FormattedMessage id=\"page.body.profile.verification.verified\" />\n                            <CheckBigIcon />\n                        </div>\n                    </div>\n                );\n            case 'drafted':\n            case 'pending':\n            case 'submitted':\n                return (\n                    <div\n                        key={index}\n                        className=\"pg-profile-page-verification__step pg-profile-page-verification__step--pending\">\n                        <div className=\"pg-profile-page-verification__step__info\">\n                            <div className=\"pg-profile-page-verification__step__info__title\">\n                                <span>{index + 1}.&nbsp;</span>\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.title`} />\n                            </div>\n                            <div className=\"pg-profile-page-verification__step__info__subtitle\">\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.subtitle`} />\n                            </div>\n                        </div>\n                        <div className=\"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--pending\">\n                            <FormattedMessage id=\"page.body.profile.verification.pending\" />\n                            <ClocksIcon />\n                        </div>\n                    </div>\n                );\n            case 'rejected':\n                return (\n                    <div\n                        key={index}\n                        className=\"pg-profile-page-verification__step pg-profile-page-verification__step--rejected\">\n                        <div className=\"pg-profile-page-verification__step__info\">\n                            <div className=\"pg-profile-page-verification__step__info__title\">\n                                <span>{index + 1}.&nbsp;</span>\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.title`} />\n                            </div>\n                            <div className=\"pg-profile-page-verification__step__info__subtitle\">\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.subtitle`} />\n                            </div>\n                        </div>\n                        <OverlayTrigger\n                            placement=\"bottom\"\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={\n                                <Tooltip title={`page.body.profile.verification.${labelToCheck}.rejected.tooltip`} />\n                            }>\n                            <div className=\"pg-profile-page-verification__step__label pg-profile-page-verification__step__label--rejected\">\n                                <Link to=\"/confirm\">\n                                    <FormattedMessage id=\"page.body.profile.verification.reverify\" />\n                                </Link>\n                                <CrossIcon />\n                            </div>\n                        </OverlayTrigger>\n                    </div>\n                );\n            case 'blocked':\n                return (\n                    <div\n                        key={index}\n                        className=\"pg-profile-page-verification__step pg-profile-page-verification__step--blocked\">\n                        <div className=\"pg-profile-page-verification__step__info\">\n                            <div className=\"pg-profile-page-verification__step__info__title\">\n                                <span>{index + 1}.&nbsp;</span>\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.title`} />\n                            </div>\n                            <div className=\"pg-profile-page-verification__step__info__subtitle\">\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.subtitle`} />\n                            </div>\n                        </div>\n                        <div className=\"pg-profile-page-verification__step__button pg-profile-page-verification__step__button--blocked\">\n                            <Link to=\"/confirm\">\n                                <FormattedMessage id=\"page.body.profile.verification.verify\" />\n                            </Link>\n                        </div>\n                    </div>\n                );\n            default:\n                return (\n                    <div\n                        key={index}\n                        className=\"pg-profile-page-verification__step pg-profile-page-verification__step--active\">\n                        <div className=\"pg-profile-page-verification__step__info\">\n                            <div className=\"pg-profile-page-verification__step__info__title\">\n                                <span>{index + 1}.&nbsp;</span>\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.title`} />\n                            </div>\n                            <div className=\"pg-profile-page-verification__step__info__subtitle\">\n                                <FormattedMessage id={`page.body.profile.verification.${labelToCheck}.subtitle`} />\n                            </div>\n                        </div>\n                        <div className=\"pg-profile-page-verification__step__button pg-profile-page-verification__step__button--active\">\n                            <Link to=\"/confirm\">\n                                <FormattedMessage id=\"page.body.profile.verification.verify\" />\n                            </Link>\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    public render() {\n        const { labels } = this.props;\n\n        return (\n            <div className=\"pg-profile-page__box pg-profile-page-verification\">\n                <h3 className=\"pg-profile-page-verification__title\">\n                    <FormattedMessage id=\"page.body.profile.header.account.profile\" />\n                </h3>\n                {this.renderProgressBar(labels)}\n                {kycSteps().map((step: string, index: number) => this.renderVerificationLabel(labels, step, index))}\n            </div>\n        );\n    }\n\n    private handleCheckLabel = (labels: Label[], labelToCheck: string) => {\n        const targetLabel =\n            labels.length && labels.find((label: Label) => label.key === labelToCheck && label.scope === 'private');\n        let targetLabelStatus = targetLabel ? targetLabel.value : '';\n        const indexOfPrevStep = kycSteps().indexOf(labelToCheck) - 1;\n\n        if (indexOfPrevStep !== -1) {\n            const prevStepPassed = Boolean(\n                labels.find(\n                    (label: Label) =>\n                        label.key === kycSteps()[indexOfPrevStep] &&\n                        label.value === 'verified' &&\n                        label.scope === 'private'\n                )\n            );\n\n            if (!prevStepPassed) {\n                targetLabelStatus = 'blocked';\n            }\n        }\n\n        return targetLabelStatus;\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    user: selectUserInfo(state),\n    labels: selectLabelData(state),\n});\n\nconst mapDispatchProps: MapDispatchToPropsFunction<DispatchProps, {}> = (dispatch) => ({\n    labelFetch: () => dispatch(labelFetch()),\n});\n\nexport const ProfileVerification = connect(mapStateToProps, mapDispatchProps)(ProfileVerificationComponent);\n"]},"metadata":{},"sourceType":"module"}