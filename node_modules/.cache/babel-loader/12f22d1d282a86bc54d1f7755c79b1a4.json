{"ast":null,"code":"import { SET_MOBILE_WALLET_UI, WALLETS_ADDRESS_DATA, WALLETS_ADDRESS_DATA_WS, WALLETS_ADDRESS_ERROR, WALLETS_ADDRESS_FETCH, WALLETS_DATA, WALLETS_DATA_WS, WALLETS_ERROR, WALLETS_FETCH, WALLETS_RESET, WALLETS_WITHDRAW_CCY_DATA, WALLETS_WITHDRAW_CCY_ERROR, WALLETS_WITHDRAW_CCY_FETCH } from './constants';\nexport var walletsFetch = function walletsFetch() {\n  return {\n    type: WALLETS_FETCH\n  };\n};\nexport var walletsData = function walletsData(payload) {\n  return {\n    type: WALLETS_DATA,\n    payload\n  };\n};\nexport var updateWalletsDataByRanger = function updateWalletsDataByRanger(payload) {\n  return {\n    type: WALLETS_DATA_WS,\n    payload\n  };\n};\nexport var walletsError = function walletsError(error) {\n  return {\n    type: WALLETS_ERROR,\n    error\n  };\n};\nexport var walletsAddressFetch = function walletsAddressFetch(payload) {\n  return {\n    type: WALLETS_ADDRESS_FETCH,\n    payload\n  };\n};\nexport var walletsAddressData = function walletsAddressData(payload) {\n  return {\n    type: WALLETS_ADDRESS_DATA,\n    payload\n  };\n};\nexport var walletsAddressError = function walletsAddressError(error) {\n  return {\n    type: WALLETS_ADDRESS_ERROR,\n    error\n  };\n};\nexport var walletsAddressDataWS = function walletsAddressDataWS(payload) {\n  return {\n    type: WALLETS_ADDRESS_DATA_WS,\n    payload\n  };\n};\nexport var walletsWithdrawCcyFetch = function walletsWithdrawCcyFetch(payload) {\n  return {\n    type: WALLETS_WITHDRAW_CCY_FETCH,\n    payload\n  };\n};\nexport var walletsWithdrawCcyData = function walletsWithdrawCcyData() {\n  return {\n    type: WALLETS_WITHDRAW_CCY_DATA\n  };\n};\nexport var walletsWithdrawCcyError = function walletsWithdrawCcyError(error) {\n  return {\n    type: WALLETS_WITHDRAW_CCY_ERROR,\n    error\n  };\n};\nexport var walletsReset = function walletsReset() {\n  return {\n    type: WALLETS_RESET\n  };\n};\nexport var setMobileWalletUi = function setMobileWalletUi(payload) {\n  return {\n    type: SET_MOBILE_WALLET_UI,\n    payload\n  };\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/wallets/actions.ts"],"names":["SET_MOBILE_WALLET_UI","WALLETS_ADDRESS_DATA","WALLETS_ADDRESS_DATA_WS","WALLETS_ADDRESS_ERROR","WALLETS_ADDRESS_FETCH","WALLETS_DATA","WALLETS_DATA_WS","WALLETS_ERROR","WALLETS_FETCH","WALLETS_RESET","WALLETS_WITHDRAW_CCY_DATA","WALLETS_WITHDRAW_CCY_ERROR","WALLETS_WITHDRAW_CCY_FETCH","walletsFetch","type","walletsData","payload","updateWalletsDataByRanger","walletsError","error","walletsAddressFetch","walletsAddressData","walletsAddressError","walletsAddressDataWS","walletsWithdrawCcyFetch","walletsWithdrawCcyData","walletsWithdrawCcyError","walletsReset","setMobileWalletUi"],"mappings":"AACA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,YANJ,EAOIC,eAPJ,EAQIC,aARJ,EASIC,aATJ,EAUIC,aAVJ,EAWIC,yBAXJ,EAYIC,0BAZJ,EAaIC,0BAbJ,QAcO,aAdP;AAkGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAqB;AAC7CC,IAAAA,IAAI,EAAEN;AADuC,GAArB;AAAA,CAArB;AAIP,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;AAAA,SAAmD;AAC1EF,IAAAA,IAAI,EAAET,YADoE;AAE1EW,IAAAA;AAF0E,GAAnD;AAAA,CAApB;AAKP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACD,OAAD;AAAA,SAAmE;AACxGF,IAAAA,IAAI,EAAER,eADkG;AAExGU,IAAAA;AAFwG,GAAnE;AAAA,CAAlC;AAKP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAAuC;AAC/DL,IAAAA,IAAI,EAAEP,aADyD;AAE/DY,IAAAA;AAF+D,GAAvC;AAAA,CAArB;AAKP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,OAAD;AAAA,SAAmE;AAClGF,IAAAA,IAAI,EAAEV,qBAD4F;AAElGY,IAAAA;AAFkG,GAAnE;AAAA,CAA5B;AAKP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACL,OAAD;AAAA,SAAiE;AAC/FF,IAAAA,IAAI,EAAEb,oBADyF;AAE/Fe,IAAAA;AAF+F,GAAjE;AAAA,CAA3B;AAKP,OAAO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,KAAD;AAAA,SAA8C;AAC7EL,IAAAA,IAAI,EAAEX,qBADuE;AAE7EgB,IAAAA;AAF6E,GAA9C;AAAA,CAA5B;AAKP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,OAAD;AAAA,SAAqE;AACrGF,IAAAA,IAAI,EAAEZ,uBAD+F;AAErGc,IAAAA;AAFqG,GAArE;AAAA,CAA7B;AAKP,OAAO,IAAMQ,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACR,OAAD;AAAA,SAA2E;AAC9GF,IAAAA,IAAI,EAAEF,0BADwG;AAE9GI,IAAAA;AAF8G,GAA3E;AAAA,CAAhC;AAKP,OAAO,IAAMS,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,SAA+B;AACjEX,IAAAA,IAAI,EAAEJ;AAD2D,GAA/B;AAAA,CAA/B;AAIP,OAAO,IAAMgB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACP,KAAD;AAAA,SAAkD;AACrFL,IAAAA,IAAI,EAAEH,0BAD+E;AAErFQ,IAAAA;AAFqF,GAAlD;AAAA,CAAhC;AAKP,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAqB;AAC7Cb,IAAAA,IAAI,EAAEL;AADuC,GAArB;AAAA,CAArB;AAIP,OAAO,IAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACZ,OAAD;AAAA,SAA+D;AAC5FF,IAAAA,IAAI,EAAEd,oBADsF;AAE5FgB,IAAAA;AAF4F,GAA/D;AAAA,CAA1B","sourcesContent":["import { CommonError } from '../../types';\nimport {\n    SET_MOBILE_WALLET_UI,\n    WALLETS_ADDRESS_DATA,\n    WALLETS_ADDRESS_DATA_WS,\n    WALLETS_ADDRESS_ERROR,\n    WALLETS_ADDRESS_FETCH,\n    WALLETS_DATA,\n    WALLETS_DATA_WS,\n    WALLETS_ERROR,\n    WALLETS_FETCH,\n    WALLETS_RESET,\n    WALLETS_WITHDRAW_CCY_DATA,\n    WALLETS_WITHDRAW_CCY_ERROR,\n    WALLETS_WITHDRAW_CCY_FETCH,\n} from './constants';\nimport { Wallet, WalletAddress, WalletWithdrawCCY } from './types';\n\nexport interface WalletsFetch {\n    type: typeof WALLETS_FETCH;\n}\n\nexport interface WalletsData {\n    type: typeof WALLETS_DATA;\n    payload: Wallet[];\n}\n\nexport interface WalletsDataByRanger {\n    type: typeof WALLETS_DATA_WS;\n    payload: {\n        ws: boolean;\n        balances;\n    };\n}\n\nexport interface WalletsError {\n    type: typeof WALLETS_ERROR;\n    error: CommonError;\n}\n\nexport interface WalletsReset {\n    type: typeof WALLETS_RESET;\n}\n\nexport interface WalletsAddressFetch {\n    type: typeof WALLETS_ADDRESS_FETCH;\n    payload: {\n        currency: string;\n    };\n}\n\nexport interface WalletsAddressData {\n    type: typeof WALLETS_ADDRESS_DATA;\n    payload: WalletAddress;\n}\n\nexport interface WalletsAddressDataWS {\n    type: typeof WALLETS_ADDRESS_DATA_WS;\n    payload: WalletAddress;\n}\n\nexport interface WalletsAddressError {\n    type: typeof WALLETS_ADDRESS_ERROR;\n    error: CommonError;\n}\n\nexport interface WalletsWithdrawCcyFetch {\n    type: typeof WALLETS_WITHDRAW_CCY_FETCH;\n    payload: WalletWithdrawCCY;\n}\n\nexport interface WalletsWithdrawCcyData {\n    type: typeof WALLETS_WITHDRAW_CCY_DATA;\n}\n\nexport interface WalletsWithdrawCcyError {\n    type: typeof WALLETS_WITHDRAW_CCY_ERROR;\n    error: CommonError;\n}\n\nexport interface SetMobileWalletUi {\n    type: typeof SET_MOBILE_WALLET_UI;\n    payload: string;\n}\n\nexport type WalletsAction = WalletsFetch\n    | WalletsData\n    | WalletsDataByRanger\n    | WalletsError\n    | WalletsAddressFetch\n    | WalletsAddressData\n    | WalletsAddressDataWS\n    | WalletsAddressError\n    | WalletsWithdrawCcyFetch\n    | WalletsWithdrawCcyData\n    | WalletsWithdrawCcyError\n    | WalletsReset\n    | SetMobileWalletUi;\n\nexport const walletsFetch = (): WalletsFetch => ({\n    type: WALLETS_FETCH,\n});\n\nexport const walletsData = (payload: WalletsData['payload']): WalletsData => ({\n    type: WALLETS_DATA,\n    payload,\n});\n\nexport const updateWalletsDataByRanger = (payload: WalletsDataByRanger['payload']): WalletsDataByRanger => ({\n    type: WALLETS_DATA_WS,\n    payload,\n});\n\nexport const walletsError = (error: CommonError): WalletsError => ({\n    type: WALLETS_ERROR,\n    error,\n});\n\nexport const walletsAddressFetch = (payload: WalletsAddressFetch['payload']): WalletsAddressFetch => ({\n    type: WALLETS_ADDRESS_FETCH,\n    payload,\n});\n\nexport const walletsAddressData = (payload: WalletsAddressData['payload']): WalletsAddressData => ({\n    type: WALLETS_ADDRESS_DATA,\n    payload,\n});\n\nexport const walletsAddressError = (error: CommonError): WalletsAddressError => ({\n    type: WALLETS_ADDRESS_ERROR,\n    error,\n});\n\nexport const walletsAddressDataWS = (payload: WalletsAddressDataWS['payload']): WalletsAddressDataWS => ({\n    type: WALLETS_ADDRESS_DATA_WS,\n    payload,\n});\n\nexport const walletsWithdrawCcyFetch = (payload: WalletsWithdrawCcyFetch['payload']): WalletsWithdrawCcyFetch => ({\n    type: WALLETS_WITHDRAW_CCY_FETCH,\n    payload,\n});\n\nexport const walletsWithdrawCcyData = (): WalletsWithdrawCcyData => ({\n    type: WALLETS_WITHDRAW_CCY_DATA,\n});\n\nexport const walletsWithdrawCcyError = (error: CommonError): WalletsWithdrawCcyError => ({\n    type: WALLETS_WITHDRAW_CCY_ERROR,\n    error,\n});\n\nexport const walletsReset = (): WalletsReset => ({\n    type: WALLETS_RESET,\n});\n\nexport const setMobileWalletUi = (payload: SetMobileWalletUi['payload']): SetMobileWalletUi => ({\n    type: SET_MOBILE_WALLET_UI,\n    payload,\n});\n"]},"metadata":{},"sourceType":"module"}