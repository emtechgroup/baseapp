{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/EstimatedValue/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { VALUATION_PRIMARY_CURRENCY, VALUATION_SECONDARY_CURRENCY } from '../../../constants';\nimport { estimateUnitValue, estimateValue } from '../../../helpers/estimateValue';\nimport { useCurrenciesFetch, useMarketsFetch, useMarketsTickersFetch, useWalletsFetch } from '../../../hooks';\nimport { selectCurrencies, selectMarkets, selectMarketTickers, selectWallets } from '../../../modules';\nvar EstimatedValueMobile = React.memo(function () {\n  var intl = useIntl();\n  var wallets = useSelector(selectWallets);\n  var markets = useSelector(selectMarkets);\n  var currencies = useSelector(selectCurrencies);\n  var tickers = useSelector(selectMarketTickers);\n  var estimatedValue = estimateValue(VALUATION_PRIMARY_CURRENCY, currencies, wallets, markets, tickers);\n  var estimatedSecondaryValue = estimateUnitValue(VALUATION_SECONDARY_CURRENCY, VALUATION_PRIMARY_CURRENCY, +estimatedValue, currencies, markets, tickers);\n  useWalletsFetch();\n  useMarketsFetch();\n  useCurrenciesFetch();\n  useMarketsTickersFetch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallets-banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallets-banner__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: 'page.body.wallets.estimated_value'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallets-banner__body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallets-banner__body-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cr-mobile-wallets-banner__body-number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, estimatedValue), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cr-mobile-wallets-banner__body-currency\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, VALUATION_PRIMARY_CURRENCY.toUpperCase())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallets-banner__body-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cr-mobile-wallets-banner__body-number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, estimatedSecondaryValue), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cr-mobile-wallets-banner__body-currency\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, VALUATION_SECONDARY_CURRENCY.toUpperCase()))));\n});\nexport { EstimatedValueMobile };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/EstimatedValue/index.tsx"],"names":["React","useIntl","useSelector","VALUATION_PRIMARY_CURRENCY","VALUATION_SECONDARY_CURRENCY","estimateUnitValue","estimateValue","useCurrenciesFetch","useMarketsFetch","useMarketsTickersFetch","useWalletsFetch","selectCurrencies","selectMarkets","selectMarketTickers","selectWallets","EstimatedValueMobile","memo","intl","wallets","markets","currencies","tickers","estimatedValue","estimatedSecondaryValue","formatMessage","id","toUpperCase"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,0BAAT,EAAqCC,4BAArC,QAAyE,oBAAzE;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,gCAAjD;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,sBAA9C,EAAsEC,eAAtE,QAA6F,gBAA7F;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,mBAA1C,EAA+DC,aAA/D,QAAoF,kBAApF;AAEA,IAAMC,oBAAoB,GAAGf,KAAK,CAACgB,IAAN,CAAW,YAAM;AAC1C,MAAMC,IAAI,GAAGhB,OAAO,EAApB;AACA,MAAMiB,OAAO,GAAGhB,WAAW,CAACY,aAAD,CAA3B;AACA,MAAMK,OAAO,GAAGjB,WAAW,CAACU,aAAD,CAA3B;AACA,MAAMQ,UAAU,GAAGlB,WAAW,CAACS,gBAAD,CAA9B;AACA,MAAMU,OAAO,GAAGnB,WAAW,CAACW,mBAAD,CAA3B;AACA,MAAMS,cAAc,GAAGhB,aAAa,CAACH,0BAAD,EAA6BiB,UAA7B,EAAyCF,OAAzC,EAAkDC,OAAlD,EAA2DE,OAA3D,CAApC;AACA,MAAME,uBAAuB,GAAGlB,iBAAiB,CAACD,4BAAD,EAA+BD,0BAA/B,EAA2D,CAACmB,cAA5D,EAA4EF,UAA5E,EAAwFD,OAAxF,EAAiGE,OAAjG,CAAjD;AAEAX,EAAAA,eAAe;AACfF,EAAAA,eAAe;AACfD,EAAAA,kBAAkB;AAClBE,EAAAA,sBAAsB;AAEtB,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,IAAI,CAACO,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDH,cAAzD,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DnB,0BAA0B,CAACuB,WAA3B,EAA3D,CAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDH,uBAAzD,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DnB,4BAA4B,CAACsB,WAA7B,EAA3D,CAFJ,CALJ,CAJJ,CADJ;AAiBH,CA/B4B,CAA7B;AAiCA,SACIX,oBADJ","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { VALUATION_PRIMARY_CURRENCY, VALUATION_SECONDARY_CURRENCY } from '../../../constants';\nimport { estimateUnitValue, estimateValue } from '../../../helpers/estimateValue';\nimport { useCurrenciesFetch, useMarketsFetch, useMarketsTickersFetch, useWalletsFetch } from '../../../hooks';\nimport { selectCurrencies, selectMarkets, selectMarketTickers, selectWallets } from '../../../modules';\n\nconst EstimatedValueMobile = React.memo(() => {\n    const intl = useIntl();\n    const wallets = useSelector(selectWallets);\n    const markets = useSelector(selectMarkets);\n    const currencies = useSelector(selectCurrencies);\n    const tickers = useSelector(selectMarketTickers);\n    const estimatedValue = estimateValue(VALUATION_PRIMARY_CURRENCY, currencies, wallets, markets, tickers);\n    const estimatedSecondaryValue = estimateUnitValue(VALUATION_SECONDARY_CURRENCY, VALUATION_PRIMARY_CURRENCY, +estimatedValue, currencies, markets, tickers);\n\n    useWalletsFetch();\n    useMarketsFetch();\n    useCurrenciesFetch();\n    useMarketsTickersFetch();\n\n    return (\n        <div className=\"cr-mobile-wallets-banner\">\n            <div className=\"cr-mobile-wallets-banner__title\">\n                {intl.formatMessage({ id: 'page.body.wallets.estimated_value' })}\n            </div>\n            <div className=\"cr-mobile-wallets-banner__body\">\n                <div className=\"cr-mobile-wallets-banner__body-wrap\">\n                    <span className=\"cr-mobile-wallets-banner__body-number\">{estimatedValue}</span>\n                    <span className=\"cr-mobile-wallets-banner__body-currency\">{VALUATION_PRIMARY_CURRENCY.toUpperCase()}</span>\n                </div>\n                <div className=\"cr-mobile-wallets-banner__body-wrap\">\n                    <span className=\"cr-mobile-wallets-banner__body-number\">{estimatedSecondaryValue}</span>\n                    <span className=\"cr-mobile-wallets-banner__body-currency\">{VALUATION_SECONDARY_CURRENCY.toUpperCase()}</span>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport {\n    EstimatedValueMobile,\n};\n"]},"metadata":{},"sourceType":"module"}