{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/FilterInput/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { SearchFieldCloseIcon } from '../../assets/images/SearchFieldCloseIcon';\nimport SearchIcon from \"./Search.svg\";\n\n/**\n * Component for performing search  and filtering objects of the specific dataset.\n */\nexport var FilterInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(FilterInput, _React$Component);\n\n  var _super = _createSuper(FilterInput);\n\n  function FilterInput(props) {\n    var _this;\n\n    _classCallCheck(this, FilterInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      key: ''\n    };\n    _this.filterList = _this.filterList.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FilterInput, [{\n    key: \"filterList\",\n    value: function filterList(event) {\n      var value = event ? event.target.value : '';\n      var _this$props = this.props,\n          data = _this$props.data,\n          filter = _this$props.filter;\n      var result = data.filter(function (item) {\n        return filter(item, value);\n      });\n      this.props.onFilter(result);\n      this.setState({\n        key: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var key = this.state.key;\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          placeholder = _this$props2.placeholder;\n      var cx = classnames('cr-search__input', className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-search__icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"search icon\",\n        src: SearchIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: 'text',\n        className: cx,\n        value: key,\n        placeholder: placeholder ? placeholder : 'Search',\n        onChange: this.filterList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-search__cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SearchFieldCloseIcon, {\n        onClick: function onClick(e) {\n          return _this2.filterList();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return FilterInput;\n}(React.Component);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/FilterInput/index.tsx"],"names":["classnames","React","SearchFieldCloseIcon","FilterInput","props","state","key","filterList","bind","event","value","target","data","filter","result","item","onFilter","setState","className","placeholder","cx","SearchIcon","e","Component"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,0CAArC;;;AAqCA;AACA;AACA;AACA,WAAaC,WAAb;AAAA;;AAAA;;AACI,uBAAYC,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AALiC;AAMpC;;AAPL;AAAA;AAAA,+BASsBC,KATtB,EAS6C;AACrC,UAAMC,KAAK,GAAGD,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAaD,KAAhB,GAAwB,EAA3C;AADqC,wBAEZ,KAAKN,KAFO;AAAA,UAE7BQ,IAF6B,eAE7BA,IAF6B;AAAA,UAEvBC,MAFuB,eAEvBA,MAFuB;AAIrC,UAAMC,MAAM,GAAGF,IAAI,CACdC,MADU,CACH,UAAAE,IAAI;AAAA,eAAIF,MAAM,CAACE,IAAD,EAAOL,KAAP,CAAV;AAAA,OADD,CAAf;AAGA,WAAKN,KAAL,CAAWY,QAAX,CAAoBF,MAApB;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,GAAG,EAAEI;AAAP,OAAd;AACH;AAlBL;AAAA;AAAA,6BAoBoB;AAAA;;AAAA,UACJJ,GADI,GACI,KAAKD,KADT,CACJC,GADI;AAAA,yBAEuB,KAAKF,KAF5B;AAAA,UAEJc,SAFI,gBAEJA,SAFI;AAAA,UAEOC,WAFP,gBAEOA,WAFP;AAGZ,UAAMC,EAAE,GAAGpB,UAAU,CAAC,kBAAD,EAAqBkB,SAArB,CAArB;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAC,aAAT;AAAuB,QAAA,GAAG,EAAEG,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII;AACI,QAAA,IAAI,EAAE,MADV;AAEI,QAAA,SAAS,EAAED,EAFf;AAGI,QAAA,KAAK,EAAEd,GAHX;AAII,QAAA,WAAW,EAAEa,WAAW,GAAGA,WAAH,GAAiB,QAJ7C;AAKI,QAAA,QAAQ,EAAE,KAAKZ,UALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAWI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,oBAAD;AAAsB,QAAA,OAAO,EAAE,iBAAAe,CAAC;AAAA,iBAAI,MAAI,CAACf,UAAL,EAAJ;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CADJ;AAiBH;AA1CL;;AAAA;AAAA,EAAiCN,KAAK,CAACsB,SAAvC","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { SearchFieldCloseIcon } from '../../assets/images/SearchFieldCloseIcon';\nimport SearchIcon from './Search.svg';\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\n\nexport interface FilterInputProps {\n    /**\n     * Data on which the search will be performed\n     */\n    data: object[];\n    /**\n     * filter function prop is used to filter data\n     */\n    // tslint:disable-next-line\n    filter: (item: any, term: string) => boolean;\n    /**\n     * onFilter prop is called whenever input value changes\n     */\n    onFilter: (items: object[]) => void;\n    /**\n     * Additional class name for styling (by default `cr-search`)\n     */\n    className?: string;\n    /**\n     * Value for placeholder of FilterInput components\n     */\n    placeholder?: string;\n}\n\nexport interface SearchInputState {\n    key: string;\n}\n\n/**\n * Component for performing search  and filtering objects of the specific dataset.\n */\nexport class FilterInput extends React.Component<FilterInputProps, SearchInputState> {\n    constructor(props: FilterInputProps) {\n        super(props);\n        this.state = {\n            key: '',\n        };\n        this.filterList = this.filterList.bind(this);\n    }\n\n    public filterList(event?: OnChangeEvent) {\n        const value = event ? event.target.value : '';\n        const { data, filter } = this.props;\n\n        const result = data\n            .filter(item => filter(item, value));\n\n        this.props.onFilter(result);\n        this.setState({ key: value });\n    }\n\n    public render() {\n        const { key } = this.state;\n        const { className, placeholder } = this.props;\n        const cx = classnames('cr-search__input', className);\n\n        return (\n            <div className=\"cr-search\">\n                <span className=\"cr-search__icon\">\n                    <img alt=\"search icon\" src={SearchIcon} />\n                </span>\n                <input\n                    type={'text'}\n                    className={cx}\n                    value={key}\n                    placeholder={placeholder ? placeholder : 'Search'}\n                    onChange={this.filterList}\n                />\n                <span className=\"cr-search__cancel\">\n                    <SearchFieldCloseIcon onClick={e => this.filterList()} />\n                </span>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}