{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from 'axios';\nimport { applogicUrl, authUrl, finexUrl, tradeUrl, withCredentials } from './config';\n\nvar getAPI = function getAPI() {\n  return {\n    barong: authUrl(),\n    applogic: applogicUrl(),\n    peatio: tradeUrl(),\n    finex: finexUrl()\n  };\n};\n\nvar buildRequest = function buildRequest(request, configData) {\n  var body = request.body,\n      method = request.method,\n      url = request.url;\n  var apiVersion = configData.apiVersion,\n      headers = configData.headers;\n  var api = getAPI();\n  var contentType = body instanceof FormData ? 'multipart/form-data' : 'application/json';\n  var defaultHeaders = {\n    'content-type': contentType\n  };\n  var apiUrl = api[apiVersion];\n  var requestConfig = {\n    baseURL: apiUrl,\n    data: body,\n    headers: _objectSpread(_objectSpread({}, headers), defaultHeaders),\n    method,\n    url,\n    withCredentials: withCredentials()\n  };\n  return requestConfig;\n};\n\nexport var defaultResponse = {\n  status: 500,\n  data: {\n    error: 'Server error'\n  }\n};\nexport var formatError = function formatError(responseError) {\n  var response = responseError.response || defaultResponse;\n  var errors = response.data && (response.data.errors || [response.data.error]) || [];\n  return {\n    code: response.status,\n    message: errors\n  };\n};\nexport var makeRequest = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(request, configData) {\n    var requestConfig;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestConfig = buildRequest(request, configData);\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var axiosRequest = axios(requestConfig);\n              axiosRequest.then(function (response) {\n                if (configData.withHeaders) {\n                  resolve(response);\n                } else {\n                  resolve(response.data);\n                }\n              }).catch(function (error) {\n                reject(formatError(error));\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function makeRequest(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/api/requestBuilder.ts"],"names":["axios","applogicUrl","authUrl","finexUrl","tradeUrl","withCredentials","getAPI","barong","applogic","peatio","finex","buildRequest","request","configData","body","method","url","apiVersion","headers","api","contentType","FormData","defaultHeaders","apiUrl","requestConfig","baseURL","data","defaultResponse","status","error","formatError","responseError","response","errors","code","message","makeRequest","Promise","resolve","reject","axiosRequest","then","withHeaders","catch"],"mappings":"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","sourcesContent":["import axios, {\n    AxiosError,\n    AxiosPromise,\n    AxiosRequestConfig,\n    AxiosResponse,\n} from 'axios';\nimport {\n    applogicUrl,\n    authUrl,\n    finexUrl,\n    tradeUrl,\n    withCredentials,\n} from './config';\n\nexport type HTTPMethod =\n    'get'\n    | 'post'\n    | 'delete'\n    | 'put'\n    | 'patch';\n\nexport interface JsonBody {\n    // tslint:disable-next-line no-any\n    [key: string]: any;\n}\n\nexport interface RequestOptions {\n    apiVersion: 'applogic' | 'peatio' | 'barong' | 'finex';\n    withHeaders?: boolean;\n    headers?: Object;\n}\n\nexport interface Request {\n    method: HTTPMethod;\n    url: string;\n    body?: JsonBody;\n}\n\nexport interface ApiVariety {\n    barong: string;\n    applogic: string;\n    peatio: string;\n}\n\nconst getAPI = () => ({\n    barong: authUrl(),\n    applogic: applogicUrl(),\n    peatio: tradeUrl(),\n    finex: finexUrl(),\n});\n\nconst buildRequest = (request: Request, configData: RequestOptions) => {\n    const { body, method, url } = request;\n    const { apiVersion, headers } = configData;\n    const api = getAPI();\n\n    const contentType = body instanceof FormData\n        ? 'multipart/form-data'\n        : 'application/json';\n\n    const defaultHeaders = {\n        'content-type': contentType,\n    };\n\n    const apiUrl = api[apiVersion];\n\n    const requestConfig: AxiosRequestConfig = {\n        baseURL: apiUrl,\n        data: body,\n        headers: { ...headers, ...defaultHeaders },\n        method,\n        url,\n        withCredentials: withCredentials(),\n    };\n\n    return requestConfig;\n};\n\nexport const defaultResponse: Partial<AxiosError['response']> = {\n    status: 500,\n    data: {\n        error: 'Server error',\n    },\n};\n\nexport const formatError = (responseError: AxiosError) => {\n    const response = responseError.response || defaultResponse;\n    const errors = (response.data && (response.data.errors || [response.data.error])) || [];\n\n    return {\n        code: response.status,\n        message: errors,\n    };\n};\n\nexport const makeRequest = async (request: Request, configData: RequestOptions) => {\n    const requestConfig = buildRequest(request, configData);\n\n    return new Promise((resolve, reject) => {\n        const axiosRequest: AxiosPromise = axios(requestConfig);\n        axiosRequest\n            .then((response: AxiosResponse) => {\n                if (configData.withHeaders) {\n                    resolve(response);\n                } else {\n                    resolve(response.data);\n                }\n            })\n            .catch((error: AxiosError) => {\n                reject(formatError(error));\n            });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}