{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/CustomInput/index.tsx\";\nimport * as React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nvar CustomInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  var _super = _createSuper(CustomInput);\n\n  function CustomInput() {\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleChangeValue = function (e) {\n      _this.props.handleChangeInput && _this.props.handleChangeInput(e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          label = _this$props.label,\n          labelVisible = _this$props.labelVisible,\n          placeholder = _this$props.placeholder,\n          defaultLabel = _this$props.defaultLabel,\n          inputValue = _this$props.inputValue,\n          classNameLabel = _this$props.classNameLabel,\n          type = _this$props.type,\n          autoFocus = _this$props.autoFocus,\n          readOnly = _this$props.readOnly,\n          id = _this$props.id,\n          handleClick = _this$props.handleClick,\n          isDisabled = _this$props.isDisabled,\n          onKeyPress = _this$props.onKeyPress,\n          autoComplete = _this$props.autoComplete,\n          name = _this$props.name;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: classNameLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, (labelVisible || inputValue) && (label || defaultLabel)), /*#__PURE__*/React.createElement(InputGroup, {\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        size: \"lg\",\n        type: type,\n        value: inputValue.toString(),\n        placeholder: placeholder,\n        autoFocus: autoFocus,\n        onFocus: this.props.handleFocusInput,\n        onBlur: this.props.handleFocusInput,\n        onChange: function onChange(e) {\n          return _this2.handleChangeValue(e);\n        },\n        readOnly: readOnly,\n        id: id,\n        onClick: handleClick,\n        disabled: isDisabled,\n        onKeyPress: onKeyPress,\n        autoComplete: autoComplete,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nexport { CustomInput };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/CustomInput/index.tsx"],"names":["React","FormControl","InputGroup","CustomInput","handleChangeValue","e","props","handleChangeInput","target","value","label","labelVisible","placeholder","defaultLabel","inputValue","classNameLabel","type","autoFocus","readOnly","id","handleClick","isDisabled","onKeyPress","autoComplete","name","toString","handleFocusInput","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;;IA8BMC,W;;;;;;;;;;;;;;;;UAkDMC,iB,GAAoB,UAACC,CAAD,EAAsB;AAC9C,YAAKC,KAAL,CAAWC,iBAAX,IAAgC,MAAKD,KAAL,CAAWC,iBAAX,CAA6BF,CAAC,CAACG,MAAF,CAASC,KAAtC,CAAhC;AACH,K;;;;;;;6BAnDe;AAAA;;AAAA,wBAiBR,KAAKH,KAjBG;AAAA,UAERI,KAFQ,eAERA,KAFQ;AAAA,UAGRC,YAHQ,eAGRA,YAHQ;AAAA,UAIRC,WAJQ,eAIRA,WAJQ;AAAA,UAKRC,YALQ,eAKRA,YALQ;AAAA,UAMRC,UANQ,eAMRA,UANQ;AAAA,UAORC,cAPQ,eAORA,cAPQ;AAAA,UAQRC,IARQ,eAQRA,IARQ;AAAA,UASRC,SATQ,eASRA,SATQ;AAAA,UAURC,QAVQ,eAURA,QAVQ;AAAA,UAWRC,EAXQ,eAWRA,EAXQ;AAAA,UAYRC,WAZQ,eAYRA,WAZQ;AAAA,UAaRC,UAbQ,eAaRA,UAbQ;AAAA,UAcRC,UAdQ,eAcRA,UAdQ;AAAA,UAeRC,YAfQ,eAeRA,YAfQ;AAAA,UAgBRC,IAhBQ,eAgBRA,IAhBQ;AAmBZ,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAET,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,CAACJ,YAAY,IAAIG,UAAjB,MAAiCJ,KAAK,IAAIG,YAA1C,CADL,CADJ,eAII,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,IAAI,EAAEG,IAFV;AAGI,QAAA,KAAK,EAAEF,UAAU,CAACW,QAAX,EAHX;AAII,QAAA,WAAW,EAAEb,WAJjB;AAKI,QAAA,SAAS,EAAEK,SALf;AAMI,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWoB,gBANxB;AAOI,QAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWoB,gBAPvB;AAQI,QAAA,QAAQ,EAAE,kBAAArB,CAAC;AAAA,iBAAI,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAAJ;AAAA,SARf;AASI,QAAA,QAAQ,EAAEa,QATd;AAUI,QAAA,EAAE,EAAEC,EAVR;AAWI,QAAA,OAAO,EAAEC,WAXb;AAYI,QAAA,QAAQ,EAAEC,UAZd;AAaI,QAAA,UAAU,EAAEC,UAbhB;AAcI,QAAA,YAAY,EAAEC,YAdlB;AAeI,QAAA,IAAI,EAAEC,IAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,CADJ;AA4BH;;;;EAhDqBxB,KAAK,CAAC2B,S;;AAuDhC,SACIxB,WADJ","sourcesContent":["import * as React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap';\n\nexport interface CustomInputProps {\n    type: string;\n    label: string;\n    defaultLabel: string;\n    handleChangeInput?: (value: string) => void;\n    inputValue: string | number;\n    handleFocusInput?: () => void;\n    placeholder: string;\n    classNameLabel?: string;\n    classNameInput?: string;\n    autoFocus?: boolean;\n    onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n    readOnly?: boolean;\n    id?: string;\n    handleClick?: ((event: React.MouseEvent<HTMLInputElement, MouseEvent>) => void);\n    isDisabled?: boolean;\n    labelVisible?: boolean;\n    autoComplete?: string;\n    name?: string;\n}\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\ntype Props = CustomInputProps;\n\nclass CustomInput extends React.Component<Props> {\n    public render() {\n        const {\n            label,\n            labelVisible,\n            placeholder,\n            defaultLabel,\n            inputValue,\n            classNameLabel,\n            type,\n            autoFocus,\n            readOnly,\n            id,\n            handleClick,\n            isDisabled,\n            onKeyPress,\n            autoComplete,\n            name,\n        } = this.props;\n\n        return (\n            <React.Fragment>\n                <div className=\"custom-input\">\n                    <label className={classNameLabel}>\n                        {(labelVisible || inputValue) && (label || defaultLabel)}\n                    </label>\n                    <InputGroup size=\"lg\">\n                        <FormControl\n                            size=\"lg\"\n                            type={type}\n                            value={inputValue.toString()}\n                            placeholder={placeholder}\n                            autoFocus={autoFocus}\n                            onFocus={this.props.handleFocusInput}\n                            onBlur={this.props.handleFocusInput}\n                            onChange={e => this.handleChangeValue(e)}\n                            readOnly={readOnly}\n                            id={id}\n                            onClick={handleClick}\n                            disabled={isDisabled}\n                            onKeyPress={onKeyPress}\n                            autoComplete={autoComplete}\n                            name={name}\n                        />\n                    </InputGroup>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    private handleChangeValue = (e: OnChangeEvent) => {\n        this.props.handleChangeInput && this.props.handleChangeInput(e.target.value);\n    };\n}\n\nexport {\n    CustomInput,\n};\n"]},"metadata":{},"sourceType":"module"}