{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport var formatDate = function formatDate(date) {\n  var _date$split = date.split('/'),\n      _date$split2 = _slicedToArray(_date$split, 3),\n      day = _date$split2[0],\n      month = _date$split2[1],\n      year = _date$split2[2];\n\n  var formatDay = day ? day : '';\n  formatDay = formatDay === '' || parseFloat(formatDay) <= 31 && formatDay !== '00' ? formatDay : '31';\n  var formatMonth = month ? month : '';\n  formatMonth = formatMonth === '' || parseFloat(formatMonth) <= 12 && formatMonth !== '00' ? formatMonth : '12';\n  var formatYear = year ? parseFloat(year) : '';\n\n  if (formatDay && formatMonth && formatYear) {\n    return \"\".concat(formatDay, \"/\").concat(formatMonth, \"/\").concat(formatYear);\n  } else if (formatDay && formatMonth) {\n    return \"\".concat(formatDay, \"/\").concat(formatMonth);\n  } else {\n    return \"\".concat(formatDay);\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/helpers/formatDate.ts"],"names":["formatDate","date","split","day","month","year","formatDay","parseFloat","formatMonth","formatYear"],"mappings":";AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAkB;AAAA,oBACbA,IAAI,CAACC,KAAL,CAAW,GAAX,CADa;AAAA;AAAA,MACjCC,GADiC;AAAA,MAC5BC,KAD4B;AAAA,MACrBC,IADqB;;AAGxC,MAAIC,SAAS,GAAGH,GAAG,GAAGA,GAAH,GAAS,EAA5B;AACAG,EAAAA,SAAS,GAAGA,SAAS,KAAK,EAAd,IAAqBC,UAAU,CAACD,SAAD,CAAV,IAAyB,EAAzB,IAA+BA,SAAS,KAAK,IAAlE,GAA0EA,SAA1E,GAAsF,IAAlG;AACA,MAAIE,WAAW,GAAGJ,KAAK,GAAGA,KAAH,GAAW,EAAlC;AACAI,EAAAA,WAAW,GAAGA,WAAW,KAAK,EAAhB,IAAuBD,UAAU,CAACC,WAAD,CAAV,IAA2B,EAA3B,IAAiCA,WAAW,KAAK,IAAxE,GAAgFA,WAAhF,GAA8F,IAA5G;AACA,MAAMC,UAAU,GAAGJ,IAAI,GAAGE,UAAU,CAACF,IAAD,CAAb,GAAsB,EAA7C;;AAEA,MAAIC,SAAS,IAAIE,WAAb,IAA4BC,UAAhC,EAA4C;AACxC,qBAAUH,SAAV,cAAuBE,WAAvB,cAAsCC,UAAtC;AACH,GAFD,MAEO,IAAIH,SAAS,IAAIE,WAAjB,EAA8B;AACjC,qBAAUF,SAAV,cAAuBE,WAAvB;AACH,GAFM,MAEA;AACH,qBAAUF,SAAV;AACH;AACJ,CAhBM","sourcesContent":["export const formatDate = (date: string) => {\n    const [day, month, year] = date.split('/');\n\n    let formatDay = day ? day : '';\n    formatDay = formatDay === '' || (parseFloat(formatDay) <= 31 && formatDay !== '00') ? formatDay : '31';\n    let formatMonth = month ? month : '';\n    formatMonth = formatMonth === '' || (parseFloat(formatMonth) <= 12 && formatMonth !== '00') ? formatMonth : '12';\n    const formatYear = year ? parseFloat(year) : '';\n\n    if (formatDay && formatMonth && formatYear) {\n        return `${formatDay}/${formatMonth}/${formatYear}`;\n    } else if (formatDay && formatMonth) {\n        return `${formatDay}/${formatMonth}`;\n    } else {\n        return `${formatDay}`;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}