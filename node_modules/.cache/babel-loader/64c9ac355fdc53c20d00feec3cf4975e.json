{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { isDraggableGrid, isResizableGrid } from '../api/config';\nimport { customLayouts } from '../custom/helpers/layout';\nexport var getStaticHeight = function getStaticHeight() {\n  var header = document.getElementsByTagName('header')[0];\n  var headerHeight = header ? header.clientHeight : 0;\n  var headerContainer = document.getElementsByClassName('pg-trading-header-container')[0];\n  var headerContainerHeight = headerContainer ? headerContainer.clientHeight : 0;\n  return headerHeight + headerContainerHeight;\n};\nexport var gridUnitsToPixels = function gridUnitsToPixels(gridUnit, rowHeight, margin) {\n  var res = gridUnit * (rowHeight + margin);\n\n  if (gridUnit > 1) {\n    res -= margin;\n  }\n\n  return res;\n};\nexport var pixelsToGridUnits = function pixelsToGridUnits(pixels, rowHeight, margin) {\n  var tmp = pixels;\n\n  if (pixels / (rowHeight + margin) > 1) {\n    tmp += margin;\n  }\n\n  return tmp / (rowHeight + margin);\n};\n\nvar getLayouts = function getLayouts() {\n  var rowHeight = 14;\n  var margin = 6;\n  var orderHeight = 21;\n  var minOrderBookHeight = 21;\n  var minRecentTradesHeight = 10;\n  var minTradingChartHeight = 21;\n  var minOpenOrdersHeight = 7;\n  var minMarketDepthsHeight = 9;\n  var minMarketsHeight = 10;\n  var staticHeight = getStaticHeight() || 96;\n  var isDraggable = isDraggableGrid();\n  var isResizable = isResizableGrid();\n  var minGridHeight = gridUnitsToPixels(minTradingChartHeight, rowHeight, margin) + gridUnitsToPixels(minMarketDepthsHeight, rowHeight, margin) + gridUnitsToPixels(minOpenOrdersHeight, rowHeight, margin) + margin * 3;\n  var gridHeight = Math.max(minGridHeight, window.innerHeight - staticHeight - margin * 3);\n  var currentTradingChartHeight = pixelsToGridUnits(gridHeight - margin * 2 - gridUnitsToPixels(orderHeight, rowHeight, margin), rowHeight, margin);\n  var tradingChartHeight = gridHeight >= minGridHeight ? currentTradingChartHeight + margin * 0.6 : Math.floor(Math.max(currentTradingChartHeight, minTradingChartHeight));\n  var openOrdersHeight = gridHeight >= minGridHeight ? pixelsToGridUnits(gridHeight - gridUnitsToPixels(tradingChartHeight, rowHeight, margin) - gridUnitsToPixels(minMarketDepthsHeight, rowHeight, margin), rowHeight, margin) + 1.8 : minOpenOrdersHeight;\n  var orderBookHeight = gridHeight >= minGridHeight ? pixelsToGridUnits(gridHeight - margin, rowHeight, margin) + margin - 3.3 : minOrderBookHeight;\n  var recentTradesHeight = gridHeight >= minGridHeight ? pixelsToGridUnits(gridHeight - margin, rowHeight, margin) + margin - 3.3 : minRecentTradesHeight;\n  var marketsHeight = gridHeight >= minGridHeight ? pixelsToGridUnits(gridHeight - margin, rowHeight, margin) - orderHeight + margin - 3.3 : minMarketsHeight;\n  return _objectSpread({\n    lg: [{\n      x: 20,\n      y: 0,\n      w: 4,\n      h: orderHeight,\n      i: '1',\n      minH: orderHeight,\n      maxH: orderHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 4,\n      y: 0,\n      w: 12,\n      h: tradingChartHeight,\n      i: '2',\n      minH: minTradingChartHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 16,\n      y: 0,\n      w: 4,\n      h: orderBookHeight,\n      i: '3',\n      minH: minOrderBookHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 4,\n      y: 40,\n      w: 12,\n      h: minMarketDepthsHeight,\n      i: '4',\n      minH: minMarketDepthsHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 4,\n      y: 60,\n      w: 12,\n      h: openOrdersHeight,\n      i: '5',\n      minH: minOpenOrdersHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 0,\n      y: 0,\n      w: 4,\n      h: recentTradesHeight,\n      i: '6',\n      minH: minRecentTradesHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 20,\n      y: 40,\n      w: 4,\n      h: marketsHeight,\n      i: '7',\n      minH: minMarketsHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }],\n    md: [{\n      x: 16,\n      y: 18,\n      w: 8,\n      h: orderHeight,\n      i: '1',\n      minH: orderHeight,\n      maxH: orderHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 0,\n      y: 0,\n      w: 16,\n      h: tradingChartHeight,\n      i: '2',\n      minH: minTradingChartHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 16,\n      y: 0,\n      w: 8,\n      h: orderBookHeight,\n      i: '3',\n      minH: minOrderBookHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 0,\n      y: 40,\n      w: 16,\n      h: minMarketDepthsHeight,\n      i: '4',\n      minH: minMarketDepthsHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 0,\n      y: 60,\n      w: 16,\n      h: openOrdersHeight,\n      i: '5',\n      minH: minOpenOrdersHeight,\n      minW: 5,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 0,\n      y: 60,\n      w: 16,\n      h: recentTradesHeight,\n      i: '6',\n      minH: minRecentTradesHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }, {\n      x: 20,\n      y: 36,\n      w: 8,\n      h: marketsHeight,\n      i: '7',\n      minH: minMarketsHeight,\n      minW: 4,\n      isDraggable: isDraggable,\n      isResizable: isResizable\n    }],\n    sm: [{\n      x: 0,\n      y: 12,\n      w: 12,\n      h: 22,\n      i: '1',\n      minH: 22,\n      maxH: 22,\n      minW: 5,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 28,\n      w: 12,\n      h: 30,\n      i: '2',\n      minH: 30,\n      minW: 5,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 58,\n      w: 12,\n      h: 18,\n      i: '3',\n      minH: 12,\n      minW: 3,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 94,\n      w: 12,\n      h: 12,\n      i: '4',\n      minH: 12,\n      minW: 7,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 82,\n      w: 12,\n      h: 20,\n      i: '5',\n      minH: 12,\n      minW: 7,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 106,\n      w: 12,\n      h: 20,\n      i: '6',\n      minH: 12,\n      minW: 7,\n      isDraggable: false\n    }, {\n      x: 0,\n      y: 126,\n      w: 12,\n      h: 20,\n      i: '7',\n      minH: 12,\n      minW: 7,\n      isDraggable: false\n    }]\n  }, customLayouts);\n};\n\nexport var layouts = getLayouts();\nexport var getLayoutFromLS = function getLayoutFromLS(key) {\n  var obj = {};\n\n  if (localStorage) {\n    try {\n      obj = JSON.parse(localStorage.getItem('rgl') || '') || {};\n    } catch (e) {// ignore\n    }\n  }\n\n  return obj[key];\n};\nexport var saveLayoutToLS = function saveLayoutToLS(key, value) {\n  if (localStorage) {\n    localStorage.setItem('rgl', JSON.stringify({\n      [key]: value\n    }));\n  }\n};\nexport var resetLayout = function resetLayout(key) {\n  if (localStorage) {\n    localStorage.setItem('rgl', JSON.stringify({\n      [key]: layouts\n    }));\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/helpers/layout.ts"],"names":["isDraggableGrid","isResizableGrid","customLayouts","getStaticHeight","header","document","getElementsByTagName","headerHeight","clientHeight","headerContainer","getElementsByClassName","headerContainerHeight","gridUnitsToPixels","gridUnit","rowHeight","margin","res","pixelsToGridUnits","pixels","tmp","getLayouts","orderHeight","minOrderBookHeight","minRecentTradesHeight","minTradingChartHeight","minOpenOrdersHeight","minMarketDepthsHeight","minMarketsHeight","staticHeight","isDraggable","isResizable","minGridHeight","gridHeight","Math","max","window","innerHeight","currentTradingChartHeight","tradingChartHeight","floor","openOrdersHeight","orderBookHeight","recentTradesHeight","marketsHeight","lg","x","y","w","h","i","minH","maxH","minW","md","sm","layouts","getLayoutFromLS","key","obj","localStorage","JSON","parse","getItem","e","saveLayoutToLS","value","setItem","stringify","resetLayout"],"mappings":"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","sourcesContent":["import { isDraggableGrid, isResizableGrid} from '../api/config';\nimport { customLayouts } from '../custom/helpers/layout';\n\n\nexport interface LayoutGridGeneralInterface {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n    i: string;\n}\n\nexport interface LayoutGrid {\n    lg: LayoutGridGeneralInterface[];\n    md: LayoutGridGeneralInterface[];\n    sm: LayoutGridGeneralInterface[];\n}\n\nexport const getStaticHeight = () => {\n    const header = document.getElementsByTagName('header')[0];\n    const headerHeight = header ? header.clientHeight : 0;\n    const headerContainer = document.getElementsByClassName('pg-trading-header-container')[0];\n    const headerContainerHeight = headerContainer ? headerContainer.clientHeight : 0;\n\n    return headerHeight + headerContainerHeight;\n};\n\nexport const gridUnitsToPixels = (gridUnit: number, rowHeight: number, margin: number) => {\n    let res = gridUnit * (rowHeight + margin);\n    if (gridUnit > 1) {\n        res -= margin;\n    }\n\n    return res;\n};\n\nexport const pixelsToGridUnits = (pixels: number, rowHeight: number, margin: number) => {\n    let tmp = pixels;\n\n    if (pixels / (rowHeight + margin) > 1) {\n        tmp += margin;\n    }\n\n    return tmp / (rowHeight + margin);\n};\n\nconst getLayouts = () => {\n    const rowHeight = 14;\n    const margin = 6;\n\n    const orderHeight = 21;\n    const minOrderBookHeight = 21;\n    const minRecentTradesHeight = 10;\n    const minTradingChartHeight = 21;\n    const minOpenOrdersHeight = 7;\n    const minMarketDepthsHeight = 9;\n    const minMarketsHeight = 10;\n    const staticHeight = getStaticHeight() || 96;\n    const isDraggable = isDraggableGrid();\n    const isResizable = isResizableGrid();\n\n    const minGridHeight = gridUnitsToPixels(minTradingChartHeight, rowHeight, margin) +\n        gridUnitsToPixels(minMarketDepthsHeight, rowHeight, margin) +\n        gridUnitsToPixels(minOpenOrdersHeight, rowHeight, margin) + margin * 3;\n    const gridHeight = Math.max(minGridHeight, window.innerHeight - staticHeight - margin * 3);\n\n    const currentTradingChartHeight = pixelsToGridUnits(gridHeight - margin * 2 - gridUnitsToPixels(orderHeight, rowHeight, margin), rowHeight, margin);\n    const tradingChartHeight = gridHeight >= minGridHeight ?\n        currentTradingChartHeight + margin * 0.6 : Math.floor(Math.max(currentTradingChartHeight, minTradingChartHeight));\n    const openOrdersHeight = gridHeight >= minGridHeight ?\n        pixelsToGridUnits(gridHeight - gridUnitsToPixels(tradingChartHeight, rowHeight, margin) - gridUnitsToPixels(minMarketDepthsHeight, rowHeight, margin), rowHeight, margin) + 1.8 :\n        minOpenOrdersHeight;\n\n    const orderBookHeight = gridHeight >= minGridHeight ?\n        pixelsToGridUnits(gridHeight - margin, rowHeight, margin) + margin - 3.3 :\n        minOrderBookHeight;\n\n    const recentTradesHeight = gridHeight >= minGridHeight ?\n        pixelsToGridUnits(gridHeight - margin, rowHeight, margin) + margin - 3.3 :\n        minRecentTradesHeight;\n\n    const marketsHeight = gridHeight >= minGridHeight ?\n        pixelsToGridUnits(gridHeight - margin, rowHeight, margin) - orderHeight + margin - 3.3 :\n        minMarketsHeight;\n\n    return {\n        lg: [\n            { x: 20, y: 0, w: 4, h: orderHeight, i: '1', minH: orderHeight, maxH: orderHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 4, y: 0, w: 12, h: tradingChartHeight, i: '2', minH: minTradingChartHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 16, y: 0, w: 4, h: orderBookHeight, i: '3', minH: minOrderBookHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 4, y: 40, w: 12, h: minMarketDepthsHeight, i: '4', minH: minMarketDepthsHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 4, y: 60, w: 12, h: openOrdersHeight, i: '5', minH: minOpenOrdersHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 0, y: 0, w: 4, h: recentTradesHeight, i: '6', minH: minRecentTradesHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 20, y: 40, w: 4, h: marketsHeight, i: '7', minH: minMarketsHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n        ],\n        md: [\n            { x: 16, y: 18, w: 8, h: orderHeight, i: '1', minH: orderHeight, maxH: orderHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 0, y: 0, w: 16, h: tradingChartHeight, i: '2', minH: minTradingChartHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 16, y: 0, w: 8, h: orderBookHeight, i: '3', minH: minOrderBookHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 0, y: 40, w: 16, h: minMarketDepthsHeight, i: '4', minH: minMarketDepthsHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 0, y: 60, w: 16, h: openOrdersHeight, i: '5', minH: minOpenOrdersHeight, minW: 5, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 0, y: 60, w: 16, h: recentTradesHeight, i: '6', minH: minRecentTradesHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n            { x: 20, y: 36, w: 8, h: marketsHeight, i: '7', minH: minMarketsHeight, minW: 4, isDraggable: isDraggable, isResizable: isResizable },\n        ],\n        sm: [\n            { x: 0, y: 12, w: 12, h: 22, i: '1', minH: 22, maxH: 22, minW: 5, isDraggable: false },\n            { x: 0, y: 28, w: 12, h: 30, i: '2', minH: 30, minW: 5, isDraggable: false },\n            { x: 0, y: 58, w: 12, h: 18, i: '3', minH: 12, minW: 3, isDraggable: false },\n            { x: 0, y: 94, w: 12, h: 12, i: '4', minH: 12, minW: 7, isDraggable: false },\n            { x: 0, y: 82, w: 12, h: 20, i: '5', minH: 12, minW: 7, isDraggable: false },\n            { x: 0, y: 106, w: 12, h: 20, i: '6', minH: 12, minW: 7, isDraggable: false },\n            { x: 0, y: 126, w: 12, h: 20, i: '7', minH: 12, minW: 7, isDraggable: false },\n        ],\n        ...customLayouts,\n    };\n};\n\nexport const layouts = getLayouts();\n\nexport const getLayoutFromLS = (key: string): LayoutGrid | undefined => {\n    let obj = {};\n    if (localStorage) {\n        try {\n            obj = JSON.parse(localStorage.getItem('rgl') || '') || {};\n        } catch (e) {\n            // ignore\n        }\n    }\n\n    return obj[key];\n};\n\nexport const saveLayoutToLS = (key: string, value): void => {\n    if (localStorage) {\n        localStorage.setItem(\n            'rgl',\n            JSON.stringify({[key]: value}),\n        );\n    }\n};\n\nexport const resetLayout = (key: string): void => {\n    if (localStorage) {\n        localStorage.setItem(\n            'rgl',\n            JSON.stringify({[key]: layouts}),\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}