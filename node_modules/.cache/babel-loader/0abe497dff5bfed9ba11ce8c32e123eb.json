{"ast":null,"code":"import { PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH, PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS, PASSWORD_FORGOT_ERROR, PASSWORD_FORGOT_FETCH, PASSWORD_FORGOT_SUCCESS } from './constants';\nexport var forgotPassword = function forgotPassword(payload) {\n  return {\n    type: PASSWORD_FORGOT_FETCH,\n    payload\n  };\n};\nexport var forgotPasswordError = function forgotPasswordError(error) {\n  return {\n    type: PASSWORD_FORGOT_ERROR,\n    error\n  };\n};\nexport var forgotPasswordSuccess = function forgotPasswordSuccess() {\n  return {\n    type: PASSWORD_FORGOT_SUCCESS\n  };\n};\nexport var changeForgotPasswordFetch = function changeForgotPasswordFetch(payload) {\n  return {\n    type: PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH,\n    payload\n  };\n};\nexport var changeForgotPasswordSuccess = function changeForgotPasswordSuccess() {\n  return {\n    type: PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS\n  };\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/password/actions.ts"],"names":["PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH","PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS","PASSWORD_FORGOT_ERROR","PASSWORD_FORGOT_FETCH","PASSWORD_FORGOT_SUCCESS","forgotPassword","payload","type","forgotPasswordError","error","forgotPasswordSuccess","changeForgotPasswordFetch","changeForgotPasswordSuccess"],"mappings":"AAEA,SACIA,qCADJ,EAEIC,uCAFJ,EAGIC,qBAHJ,EAIIC,qBAJJ,EAKIC,uBALJ,QAMO,aANP;AA4CA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;AAAA,SAAmE;AAC9FC,IAAAA,IAAI,EAAEJ,qBADwF;AAE9FG,IAAAA;AAF8F,GAAnE;AAAA,CAAvB;AAKP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,SAA8C;AAC7EF,IAAAA,IAAI,EAAEL,qBADuE;AAE7EO,IAAAA;AAF6E,GAA9C;AAAA,CAA5B;AAKP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAA8B;AAC/DH,IAAAA,IAAI,EAAEH;AADyD,GAA9B;AAAA,CAA9B;AAIP,OAAO,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACL,OAAD;AAAA,SAA+E;AACpHC,IAAAA,IAAI,EAAEP,qCAD8G;AAEpHM,IAAAA;AAFoH,GAA/E;AAAA,CAAlC;AAKP,OAAO,IAAMM,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAoC;AAC3EL,IAAAA,IAAI,EAAEN;AADqE,GAApC;AAAA,CAApC","sourcesContent":["import { CommonError } from '../../types';\nimport { GeetestCaptchaResponse } from '../auth';\nimport {\n    PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH,\n    PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS,\n    PASSWORD_FORGOT_ERROR,\n    PASSWORD_FORGOT_FETCH,\n    PASSWORD_FORGOT_SUCCESS,\n} from './constants';\n\nexport interface ForgotPasswordFetch {\n    type: typeof PASSWORD_FORGOT_FETCH;\n    payload: {\n        email: string;\n        captcha_response?: string | GeetestCaptchaResponse;\n    };\n}\n\nexport interface ForgotPasswordError {\n    type: typeof PASSWORD_FORGOT_ERROR;\n    error: CommonError;\n}\n\nexport interface ForgotPasswordSuccess {\n    type: typeof PASSWORD_FORGOT_SUCCESS;\n}\n\nexport interface ChangeForgotPasswordFetch {\n    type: typeof PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH;\n    payload: {\n        reset_password_token: string;\n        password: string,\n        confirm_password: string;\n    };\n}\n\nexport interface ChangeForgotPasswordSuccess {\n    type: typeof PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS;\n}\n\nexport type PasswordAction = ForgotPasswordFetch\n    | ForgotPasswordError\n    | ForgotPasswordSuccess\n    | ChangeForgotPasswordFetch\n    | ChangeForgotPasswordSuccess;\n\nexport const forgotPassword = (payload: ForgotPasswordFetch['payload']): ForgotPasswordFetch => ({\n   type: PASSWORD_FORGOT_FETCH,\n   payload,\n});\n\nexport const forgotPasswordError = (error: CommonError): ForgotPasswordError => ({\n    type: PASSWORD_FORGOT_ERROR,\n    error,\n});\n\nexport const forgotPasswordSuccess = (): ForgotPasswordSuccess => ({\n    type: PASSWORD_FORGOT_SUCCESS,\n});\n\nexport const changeForgotPasswordFetch = (payload: ChangeForgotPasswordFetch['payload']): ChangeForgotPasswordFetch => ({\n    type: PASSWORD_CHANGE_FORGOT_PASSWORD_FETCH,\n    payload,\n});\n\nexport const changeForgotPasswordSuccess = (): ChangeForgotPasswordSuccess => ({\n    type: PASSWORD_CHANGE_FORGOT_PASSWORD_SUCCESS,\n});\n"]},"metadata":{},"sourceType":"module"}