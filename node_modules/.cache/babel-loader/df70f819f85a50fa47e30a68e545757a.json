{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(depthSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { depthData, depthError } from '../actions';\nvar depthOptions = {\n  apiVersion: 'peatio'\n};\nexport function depthSaga(action) {\n  var market, depth;\n  return _regeneratorRuntime.wrap(function depthSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          market = action.payload;\n          _context.next = 4;\n          return call(API.get(depthOptions), \"/public/markets/\".concat(market.id, \"/depth\"));\n\n        case 4:\n          depth = _context.sent;\n          _context.next = 7;\n          return put(depthData(depth));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'console',\n            extraOptions: {\n              actionError: depthError\n            }\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/orderBook/sagas/depthSaga.ts"],"names":["depthSaga","call","put","sendError","API","depthData","depthError","depthOptions","apiVersion","action","market","payload","get","id","depth","error","processingType","extraOptions","actionError"],"mappings":";;oDASiBA,S;;AATjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAkD,YAAlD;AAEA,IAAMC,YAA4B,GAAG;AACjCC,EAAAA,UAAU,EAAE;AADqB,CAArC;AAIA,OAAO,SAAUR,SAAV,CAAoBS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOC,UAAAA,MAFP,GAEgBD,MAAM,CAACE,OAFvB;AAAA;AAGe,iBAAMV,IAAI,CAACG,GAAG,CAACQ,GAAJ,CAAQL,YAAR,CAAD,4BAA2CG,MAAM,CAACG,EAAlD,YAAV;;AAHf;AAGOC,UAAAA,KAHP;AAAA;AAIC,iBAAMZ,GAAG,CAACG,SAAS,CAACS,KAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMZ,GAAG,CAACC,SAAS,CAAC;AAChBY,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,SAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEZ;AADH;AAHE,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { depthData, depthError, DepthFetch } from '../actions';\n\nconst depthOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* depthSaga(action: DepthFetch) {\n    try {\n        const market = action.payload;\n        const depth = yield call(API.get(depthOptions), `/public/markets/${market.id}/depth`);\n        yield put(depthData(depth));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'console',\n            extraOptions: {\n                actionError: depthError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}