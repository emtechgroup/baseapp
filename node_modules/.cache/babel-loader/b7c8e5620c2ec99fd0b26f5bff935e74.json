{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/Wallets/History.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { History, Pagination } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { localeDate } from '../../helpers';\nimport { currenciesFetch, fetchHistory as _fetchHistory, resetHistory as _resetHistory, selectCurrencies, selectCurrentPage, selectFirstElemIndex, selectHistory, selectHistoryLoading, selectLastElemIndex, selectNextPageExists, selectWallets } from '../../modules';\nimport { FailIcon } from './FailIcon';\nimport { SucceedIcon } from './SucceedIcon';\nexport var WalletTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(WalletTable, _React$Component);\n\n  var _super = _createSuper(WalletTable);\n\n  function WalletTable() {\n    var _this;\n\n    _classCallCheck(this, WalletTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getHeaders = function (label) {\n      return [_this.props.intl.formatMessage({\n        id: \"page.body.history.\".concat(label, \".header.date\")\n      }), _this.props.intl.formatMessage({\n        id: \"page.body.history.\".concat(label, \".header.status\")\n      }), _this.props.intl.formatMessage({\n        id: \"page.body.history.\".concat(label, \".header.amount\")\n      })];\n    };\n\n    _this.onClickPrevPage = function () {\n      var _this$props = _this.props,\n          page = _this$props.page,\n          type = _this$props.type,\n          currency = _this$props.currency;\n\n      _this.props.fetchHistory({\n        page: Number(page) - 1,\n        currency,\n        type,\n        limit: 6\n      });\n    };\n\n    _this.onClickNextPage = function () {\n      var _this$props2 = _this.props,\n          page = _this$props2.page,\n          type = _this$props2.type,\n          currency = _this$props2.currency;\n\n      _this.props.fetchHistory({\n        page: Number(page) + 1,\n        currency,\n        type,\n        limit: 6\n      });\n    };\n\n    _this.retrieveData = function (list) {\n      var _this$props3 = _this.props,\n          currency = _this$props3.currency,\n          currencies = _this$props3.currencies,\n          intl = _this$props3.intl,\n          type = _this$props3.type,\n          wallets = _this$props3.wallets;\n\n      var _ref = wallets.find(function (w) {\n        return w.currency === currency;\n      }) || {\n        fixed: 8\n      },\n          fixed = _ref.fixed;\n\n      if (list.length === 0) {\n        return [[intl.formatMessage({\n          id: 'page.noDataToShow'\n        }), '', '']];\n      }\n\n      return list.sort(function (a, b) {\n        return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n      }).map(function (item, index) {\n        var amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n        var confirmations = type === 'deposits' && item.confirmations;\n        var itemCurrency = currencies && currencies.find(function (cur) {\n          return cur.id === currency;\n        });\n        var minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n        var state = 'state' in item ? _this.formatTxState(item.state, confirmations, minConfirmations) : '';\n        return [localeDate(item.created_at, 'fullDate'), state, /*#__PURE__*/React.createElement(Decimal, {\n          key: index,\n          fixed: fixed,\n          thousSep: \",\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, amount)];\n      });\n    };\n\n    _this.formatTxState = function (tx, confirmations, minConfirmations) {\n      var statusMapping = {\n        succeed: /*#__PURE__*/React.createElement(SucceedIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 22\n          }\n        }),\n        failed: /*#__PURE__*/React.createElement(FailIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }),\n        accepted: /*#__PURE__*/React.createElement(SucceedIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }\n        }),\n        collected: /*#__PURE__*/React.createElement(SucceedIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 24\n          }\n        }),\n        canceled: /*#__PURE__*/React.createElement(FailIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 23\n          }\n        }),\n        rejected: /*#__PURE__*/React.createElement(FailIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 23\n          }\n        }),\n        processing: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.table.pending'\n        }),\n        prepared: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.table.pending'\n        }),\n        submitted: confirmations !== undefined && minConfirmations !== undefined ? \"\".concat(confirmations, \"/\").concat(minConfirmations) : _this.props.intl.formatMessage({\n          id: 'page.body.wallets.table.pending'\n        }),\n        skipped: /*#__PURE__*/React.createElement(SucceedIcon, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 22\n          }\n        })\n      };\n      return statusMapping[tx];\n    };\n\n    return _this;\n  }\n\n  _createClass(WalletTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          currencies = _this$props4.currencies,\n          currency = _this$props4.currency,\n          type = _this$props4.type;\n      this.props.fetchHistory({\n        page: 0,\n        currency,\n        type,\n        limit: 6\n      });\n\n      if (!currencies.length) {\n        this.props.fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props5 = this.props,\n          currencies = _this$props5.currencies,\n          currency = _this$props5.currency,\n          type = _this$props5.type;\n\n      if (nextProps.currency !== currency || nextProps.type !== type) {\n        this.props.resetHistory();\n        this.props.fetchHistory({\n          page: 0,\n          currency: nextProps.currency,\n          type,\n          limit: 6\n        });\n      }\n\n      if (!currencies.length && nextProps.currencies.length) {\n        this.props.fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.resetHistory();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          label = _this$props6.label,\n          list = _this$props6.list,\n          firstElemIndex = _this$props6.firstElemIndex,\n          lastElemIndex = _this$props6.lastElemIndex,\n          page = _this$props6.page,\n          nextPageExists = _this$props6.nextPageExists;\n\n      if (!list.length) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-history-elem__wallet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-history-elem__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, this.props.intl.formatMessage({\n        id: \"page.body.history.\".concat(label)\n      })), /*#__PURE__*/React.createElement(History, {\n        headers: this.getHeaders(label),\n        data: this.retrieveData(list),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        firstElemIndex: firstElemIndex,\n        lastElemIndex: lastElemIndex,\n        page: page,\n        nextPageExists: nextPageExists,\n        onClickPrevPage: this.onClickPrevPage,\n        onClickNextPage: this.onClickNextPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WalletTable;\n}(React.Component);\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    currencies: selectCurrencies(state),\n    list: selectHistory(state),\n    wallets: selectWallets(state),\n    fetching: selectHistoryLoading(state),\n    page: selectCurrentPage(state),\n    firstElemIndex: selectFirstElemIndex(state, 6),\n    lastElemIndex: selectLastElemIndex(state, 6),\n    nextPageExists: selectNextPageExists(state, 6)\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCurrencies: function fetchCurrencies() {\n      return dispatch(currenciesFetch());\n    },\n    fetchHistory: function fetchHistory(params) {\n      return dispatch(_fetchHistory(params));\n    },\n    resetHistory: function resetHistory() {\n      return dispatch(_resetHistory());\n    }\n  };\n};\nexport var WalletHistory = injectIntl(connect(mapStateToProps, mapDispatchToProps)(WalletTable));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/Wallets/History.tsx"],"names":["React","injectIntl","connect","History","Pagination","Decimal","localeDate","currenciesFetch","fetchHistory","resetHistory","selectCurrencies","selectCurrentPage","selectFirstElemIndex","selectHistory","selectHistoryLoading","selectLastElemIndex","selectNextPageExists","selectWallets","FailIcon","SucceedIcon","WalletTable","getHeaders","label","props","intl","formatMessage","id","onClickPrevPage","page","type","currency","Number","limit","onClickNextPage","retrieveData","list","currencies","wallets","find","w","fixed","length","sort","a","b","created_at","map","item","index","amount","price","volume","confirmations","itemCurrency","cur","minConfirmations","min_confirmations","state","formatTxState","tx","statusMapping","succeed","failed","accepted","collected","canceled","rejected","processing","prepared","submitted","undefined","skipped","fetchCurrencies","nextProps","firstElemIndex","lastElemIndex","nextPageExists","Component","mapStateToProps","fetching","mapDispatchToProps","dispatch","params","WalletHistory"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { History, Pagination, WalletItemProps } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { localeDate } from '../../helpers';\nimport {\n    currenciesFetch,\n    Currency,\n    fetchHistory,\n    resetHistory,\n    RootState,\n    selectCurrencies,\n    selectCurrentPage,\n    selectFirstElemIndex,\n    selectHistory,\n    selectHistoryLoading,\n    selectLastElemIndex,\n    selectNextPageExists,\n    selectWallets,\n    WalletHistoryList,\n} from '../../modules';\nimport { FailIcon } from './FailIcon';\nimport { SucceedIcon } from './SucceedIcon';\n\nexport interface HistoryProps {\n    label: string;\n    type: string;\n    currency: string;\n}\n\nexport interface ReduxProps {\n    currencies: Currency[];\n    list: WalletHistoryList;\n    wallets: WalletItemProps[];\n    fetching: boolean;\n    page: number;\n    firstElemIndex: number;\n    lastElemIndex: number;\n    nextPageExists: boolean;\n}\n\ninterface DispatchProps {\n    fetchCurrencies: typeof currenciesFetch;\n    fetchHistory: typeof fetchHistory;\n    resetHistory: typeof resetHistory;\n}\n\nexport type Props = HistoryProps & ReduxProps & DispatchProps & IntlProps;\n\nexport class WalletTable extends React.Component<Props> {\n    public componentDidMount() {\n        const {\n            currencies,\n            currency,\n            type,\n        } = this.props;\n        this.props.fetchHistory({ page: 0, currency, type, limit: 6 });\n\n        if (!currencies.length) {\n            this.props.fetchCurrencies();\n        }\n    }\n\n    public componentWillReceiveProps(nextProps) {\n        const {\n            currencies,\n            currency,\n            type,\n        } = this.props;\n        if (nextProps.currency !== currency || nextProps.type !== type) {\n            this.props.resetHistory();\n            this.props.fetchHistory({ page: 0, currency: nextProps.currency, type, limit: 6 });\n        }\n\n        if (!currencies.length && nextProps.currencies.length) {\n            this.props.fetchCurrencies();\n        }\n    }\n\n    public componentWillUnmount() {\n        this.props.resetHistory();\n    }\n\n    public render() {\n        const { label, list, firstElemIndex, lastElemIndex, page, nextPageExists } = this.props;\n\n        if (!list.length) {\n            return null;\n        }\n\n        return (\n            <div className=\"pg-history-elem__wallet\">\n                <div className=\"pg-history-elem__label\">\n                    {this.props.intl.formatMessage({ id: `page.body.history.${label}` })}\n                </div>\n                <History headers={this.getHeaders(label)} data={this.retrieveData(list)} />\n                <Pagination\n                    firstElemIndex={firstElemIndex}\n                    lastElemIndex={lastElemIndex}\n                    page={page}\n                    nextPageExists={nextPageExists}\n                    onClickPrevPage={this.onClickPrevPage}\n                    onClickNextPage={this.onClickNextPage}\n                />\n            </div>\n        );\n    }\n\n    private getHeaders = (label: string) => [\n        this.props.intl.formatMessage({ id: `page.body.history.${label}.header.date` }),\n        this.props.intl.formatMessage({ id: `page.body.history.${label}.header.status` }),\n        this.props.intl.formatMessage({ id: `page.body.history.${label}.header.amount` }),\n    ];\n\n    private onClickPrevPage = () => {\n        const { page, type, currency } = this.props;\n        this.props.fetchHistory({ page: Number(page) - 1, currency, type, limit: 6 });\n    };\n\n    private onClickNextPage = () => {\n        const { page, type, currency } = this.props;\n        this.props.fetchHistory({ page: Number(page) + 1, currency, type, limit: 6 });\n    };\n\n    private retrieveData = list => {\n        const {\n            currency,\n            currencies,\n            intl,\n            type,\n            wallets,\n        } = this.props;\n        const { fixed } = wallets.find(w => w.currency === currency) || { fixed: 8 };\n        if (list.length === 0) {\n            return [[intl.formatMessage({ id: 'page.noDataToShow' }), '', '']];\n        }\n\n        return list.sort((a, b) => {\n            return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n        }).map((item, index) => {\n            const amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n            const confirmations = type === 'deposits' && item.confirmations;\n            const itemCurrency = currencies && currencies.find(cur => cur.id === currency);\n            const minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n            const state = 'state' in item ? this.formatTxState(item.state, confirmations, minConfirmations) : '';\n\n            return [\n                localeDate(item.created_at, 'fullDate'),\n                state,\n                <Decimal key={index} fixed={fixed} thousSep=\",\">{amount}</Decimal>,\n            ];\n        });\n    };\n\n    private formatTxState = (tx: string, confirmations?: number, minConfirmations?: number) => {\n        const statusMapping = {\n            succeed: <SucceedIcon />,\n            failed: <FailIcon />,\n            accepted: <SucceedIcon />,\n            collected: <SucceedIcon />,\n            canceled: <FailIcon />,\n            rejected: <FailIcon />,\n            processing: this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' }),\n            prepared: this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' }),\n            submitted: (confirmations !== undefined && minConfirmations !== undefined) ? (\n                `${confirmations}/${minConfirmations}`\n            ) : (\n                this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' })\n            ),\n            skipped: <SucceedIcon />,\n        };\n\n        return statusMapping[tx];\n    };\n}\n\n\nexport const mapStateToProps = (state: RootState): ReduxProps => ({\n    currencies: selectCurrencies(state),\n    list: selectHistory(state),\n    wallets: selectWallets(state),\n    fetching: selectHistoryLoading(state),\n    page: selectCurrentPage(state),\n    firstElemIndex: selectFirstElemIndex(state, 6),\n    lastElemIndex: selectLastElemIndex(state, 6),\n    nextPageExists: selectNextPageExists(state, 6),\n});\n\nexport const mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        fetchCurrencies: () => dispatch(currenciesFetch()),\n        fetchHistory: params => dispatch(fetchHistory(params)),\n        resetHistory: () => dispatch(resetHistory()),\n    });\n\nexport const WalletHistory = injectIntl(connect(mapStateToProps, mapDispatchToProps)(WalletTable)) as any;\n"]},"metadata":{},"sourceType":"module"}