{"ast":null,"code":"var buildQueryArray = function buildQueryArray(data) {\n  var queryArray = '';\n\n  if (data && data[0] && data[1]) {\n    data[1].reduce(function (acc, cur) {\n      queryArray = \"\".concat(queryArray).concat(data[0], \"[]=\").concat(encodeURIComponent(cur), \"&\");\n      return acc;\n    }, {});\n    queryArray = queryArray.substring(0, queryArray.length - 1);\n  }\n\n  return queryArray;\n}; // tslint:disable:no-any\n\n\nexport var buildQueryString = function buildQueryString(action, key) {\n  return Object.entries(action).filter(function (w) {\n    return w[1] !== '';\n  }).map(function (k) {\n    return Array.isArray(k[1]) ? buildQueryArray(k) : \"\".concat(k[0], \"=\").concat(encodeURIComponent(k[1]));\n  }).join('&');\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/helpers/buildQueryString.ts"],"names":["buildQueryArray","data","queryArray","reduce","acc","cur","encodeURIComponent","substring","length","buildQueryString","action","key","Object","entries","filter","w","map","k","Array","isArray","join"],"mappings":"AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI,EAAI;AAC5B,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAID,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAZ,IAAmBA,IAAI,CAAC,CAAD,CAA3B,EAAgC;AAC5BA,IAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQE,MAAR,CAAe,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBH,MAAAA,UAAU,aAAMA,UAAN,SAAmBD,IAAI,CAAC,CAAD,CAAvB,gBAAgCK,kBAAkB,CAACD,GAAD,CAAlD,MAAV;AAEA,aAAOD,GAAP;AACH,KAJD,EAIG,EAJH;AAKAF,IAAAA,UAAU,GAAGA,UAAU,CAACK,SAAX,CAAqB,CAArB,EAAwBL,UAAU,CAACM,MAAX,GAAoB,CAA5C,CAAb;AACH;;AAED,SAAON,UAAP;AACH,CAbD,C,CAeA;;;AACA,OAAO,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAcC,GAAd;AAAA,SAAgCC,MAAM,CAACC,OAAP,CAAeH,MAAf,EAC3DI,MAD2D,CACpD,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,EAAb;AAAA,GADmD,EAE3DC,GAF2D,CAEvD,UAACC,CAAD,EAAY;AACb,WACIC,KAAK,CAACC,OAAN,CAAcF,CAAC,CAAC,CAAD,CAAf,IAAsBjB,eAAe,CAACiB,CAAD,CAArC,aAA8CA,CAAC,CAAC,CAAD,CAA/C,cAAsDX,kBAAkB,CAACW,CAAC,CAAC,CAAD,CAAF,CAAxE,CADJ;AAGH,GAN2D,EAO3DG,IAP2D,CAOtD,GAPsD,CAAhC;AAAA,CAAzB","sourcesContent":["const buildQueryArray = data => {\n    let queryArray = '';\n\n    if (data && data[0] && data[1]) {\n        data[1].reduce((acc, cur) => {\n            queryArray = `${queryArray}${data[0]}[]=${encodeURIComponent(cur)}&`;\n\n            return acc;\n        }, {});\n        queryArray = queryArray.substring(0, queryArray.length - 1);\n    }\n\n    return queryArray;\n};\n\n// tslint:disable:no-any\nexport const buildQueryString = (action: any, key?: string) => (Object.entries(action)\n    .filter(w => w[1] !== '')\n    .map((k: any) => {\n        return (\n            Array.isArray(k[1]) ? buildQueryArray(k) : `${k[0]}=${encodeURIComponent(k[1])}`\n        );\n    })\n    .join('&'));\n"]},"metadata":{},"sourceType":"module"}