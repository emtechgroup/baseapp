{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/Markets/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { Markets } from '../../components/Markets';\nimport { selectUserInfo, setCurrentPrice as _setCurrentPrice } from '../../modules';\nimport { marketsTickersFetch, selectCurrentMarket, selectMarkets, selectMarketsLoading, selectMarketTickers, setCurrentMarket as _setCurrentMarket } from '../../modules/public/markets';\nimport { depthFetch as _depthFetch } from '../../modules/public/orderBook';\n\nvar MarketsContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarketsContainer, _React$Component);\n\n  var _super = _createSuper(MarketsContainer);\n\n  function MarketsContainer() {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.headers = [_this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.pair'\n    }), _this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.price'\n    }), _this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.change'\n    })];\n\n    _this.markets = function () {\n      var currentMarket = _this.props.currentMarket;\n      var key = currentMarket && currentMarket.name;\n      return /*#__PURE__*/React.createElement(Markets, {\n        filters: false,\n        data: _this.mapMarkets(),\n        rowKeyIndex: 0,\n        onSelect: _this.handleOnSelect,\n        selectedKey: key,\n        headers: _this.headers,\n        title: _this.props.intl.formatMessage({\n          id: 'page.body.trade.header.markets'\n        }),\n        filterPlaceholder: _this.props.intl.formatMessage({\n          id: 'page.body.trade.header.markets.content.search'\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.handleOnSelect = function (index) {\n      var _this$props = _this.props,\n          markets = _this$props.markets,\n          currentMarket = _this$props.currentMarket;\n      var marketToSet = markets.find(function (el) {\n        return el.name === index;\n      });\n\n      _this.props.setCurrentPrice(0);\n\n      if (marketToSet && (!currentMarket || currentMarket.id !== marketToSet.id)) {\n        _this.props.setCurrentMarket(marketToSet);\n\n        if (!incrementalOrderBook()) {\n          _this.props.depthFetch(marketToSet);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.markets.length === 0) {\n        this.props.tickers();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var marketsLoading = this.props.marketsLoading;\n      var className = classnames('pg-markets', {\n        'pg-markets--loading': marketsLoading\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, marketsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      })) : this.markets());\n    }\n  }, {\n    key: \"mapMarkets\",\n    value: function mapMarkets() {\n      var _this$props2 = this.props,\n          markets = _this$props2.markets,\n          marketTickers = _this$props2.marketTickers;\n      var defaultTicker = {\n        last: 0,\n        price_change_percent: '+0.00%'\n      };\n      return markets.map(function (market) {\n        return [market.name, Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision, ','), (marketTickers[market.id] || defaultTicker).price_change_percent];\n      });\n    }\n  }]);\n\n  return MarketsContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: selectUserInfo(state),\n    markets: selectMarkets(state),\n    marketsLoading: selectMarketsLoading(state),\n    marketTickers: selectMarketTickers(state),\n    currentMarket: selectCurrentMarket(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCurrentMarket: function setCurrentMarket(market) {\n      return dispatch(_setCurrentMarket(market));\n    },\n    depthFetch: function depthFetch(market) {\n      return dispatch(_depthFetch(market));\n    },\n    tickers: function tickers() {\n      return dispatch(marketsTickersFetch());\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\n\nexport var MarketsComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsContainer));","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/Markets/index.tsx"],"names":["classnames","React","Spinner","injectIntl","connect","incrementalOrderBook","Decimal","Markets","selectUserInfo","setCurrentPrice","marketsTickersFetch","selectCurrentMarket","selectMarkets","selectMarketsLoading","selectMarketTickers","setCurrentMarket","depthFetch","MarketsContainer","headers","props","intl","formatMessage","id","markets","currentMarket","key","name","mapMarkets","handleOnSelect","index","marketToSet","find","el","length","tickers","marketsLoading","className","marketTickers","defaultTicker","last","price_change_percent","map","market","format","Number","amount_precision","Component","mapStateToProps","state","userData","mapDispatchToProps","dispatch","payload","MarketsComponent"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { Markets } from '../../components/Markets';\nimport { RootState, selectUserInfo, setCurrentPrice, User } from '../../modules';\nimport {\n    Market,\n    marketsTickersFetch,\n    selectCurrentMarket,\n    selectMarkets,\n    selectMarketsLoading,\n    selectMarketTickers,\n    setCurrentMarket,\n    Ticker,\n} from '../../modules/public/markets';\nimport { depthFetch } from '../../modules/public/orderBook';\n\ninterface ReduxProps {\n    userData: User;\n    markets: Market[];\n    marketsLoading?: boolean;\n    marketTickers: {\n        [key: string]: Ticker,\n    };\n    currentMarket: Market | undefined;\n}\n\ninterface DispatchProps {\n    setCurrentMarket: typeof setCurrentMarket;\n    depthFetch: typeof depthFetch;\n    tickers: typeof marketsTickersFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nclass MarketsContainer extends React.Component<Props> {\n    private headers = [\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.pair'}),\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.price'}),\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.change'}),\n    ];\n\n    public componentDidMount() {\n        if (this.props.markets.length === 0) {\n            this.props.tickers();\n        }\n    }\n\n    public render() {\n        const { marketsLoading } = this.props;\n        const className = classnames('pg-markets', {\n            'pg-markets--loading': marketsLoading,\n        });\n\n        return (\n            <div className={className}>\n                {marketsLoading ? <div><Spinner animation=\"border\" variant=\"primary\" /></div> : this.markets()}\n            </div>\n        );\n    }\n\n    private markets = () => {\n        const { currentMarket } = this.props;\n        const key = currentMarket && currentMarket.name;\n\n        return (\n            <Markets\n                filters={false}\n                data={this.mapMarkets()}\n                rowKeyIndex={0}\n                onSelect={this.handleOnSelect}\n                selectedKey={key}\n                headers={this.headers}\n                title={this.props.intl.formatMessage({id: 'page.body.trade.header.markets'})}\n                filterPlaceholder={this.props.intl.formatMessage({ id: 'page.body.trade.header.markets.content.search'})}\n            />\n        );\n    };\n\n    private mapMarkets() {\n        const { markets, marketTickers } = this.props;\n        const defaultTicker = {\n            last: 0,\n            price_change_percent: '+0.00%',\n        };\n\n        return markets.map((market: Market) =>\n            ([\n                market.name,\n                Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision, ','),\n                (marketTickers[market.id] || defaultTicker).price_change_percent,\n            ]),\n        );\n    }\n\n    private handleOnSelect = (index: string) => {\n        const { markets, currentMarket } = this.props;\n        const marketToSet = markets.find(el => el.name === index);\n        this.props.setCurrentPrice(0);\n\n        if (marketToSet && (!currentMarket || currentMarket.id !== marketToSet.id)) {\n            this.props.setCurrentMarket(marketToSet);\n            if (!incrementalOrderBook()) {\n              this.props.depthFetch(marketToSet);\n            }\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    userData: selectUserInfo(state),\n    markets: selectMarkets(state),\n    marketsLoading: selectMarketsLoading(state),\n    marketTickers: selectMarketTickers(state),\n    currentMarket: selectCurrentMarket(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        setCurrentMarket: (market: Market) => dispatch(setCurrentMarket(market)),\n        depthFetch: (market: Market) => dispatch(depthFetch(market)),\n        tickers: () => dispatch(marketsTickersFetch()),\n        setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    });\n\nexport const MarketsComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsContainer)) as any;\n"]},"metadata":{},"sourceType":"module"}