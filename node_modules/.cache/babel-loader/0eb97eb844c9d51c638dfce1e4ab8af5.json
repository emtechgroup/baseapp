{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/HeaderToolbar/index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Decimal } from '../../components/Decimal';\nimport { selectCurrentMarket, selectMarkets, selectMarketTickers } from '../../modules';\n\n// tslint:disable no-any jsx-no-multiline-js\nvar HeaderToolbarContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderToolbarContainer, _React$Component);\n\n  var _super = _createSuper(HeaderToolbarContainer);\n\n  function HeaderToolbarContainer() {\n    var _this;\n\n    _classCallCheck(this, HeaderToolbarContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getTickerValue = function (value) {\n      var _this$props = _this.props,\n          marketTickers = _this$props.marketTickers,\n          currentMarket = _this$props.currentMarket;\n      var defaultTicker = {\n        amount: 0,\n        low: 0,\n        last: 0,\n        high: 0,\n        volume: 0,\n        price_change_percent: '+0.00%'\n      };\n      return currentMarket && (marketTickers[currentMarket.id] || defaultTicker)[value];\n    };\n\n    _this.translate = function (id) {\n      return id ? _this.props.intl.formatMessage({\n        id\n      }) : '';\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderToolbarContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          marketTickers = _this$props2.marketTickers,\n          currentMarket = _this$props2.currentMarket;\n      var defaultTicker = {\n        amount: 0,\n        low: 0,\n        last: 0,\n        high: 0,\n        volume: 0,\n        price_change_percent: '+0.00%'\n      };\n      var isPositive = currentMarket && /\\+/.test(this.getTickerValue('price_change_percent'));\n      var cls = isPositive ? 'positive' : 'negative';\n      var bidUnit = currentMarket && currentMarket.quote_unit.toUpperCase();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-value pg-header__toolbar-item-value-positive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, currentMarket && Decimal.format(Number(this.getTickerValue('low')), currentMarket.price_precision, ','), \" \", bidUnit), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.trade.toolBar.lowest'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-value pg-header__toolbar-item-value-negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, currentMarket && Decimal.format(Number(this.getTickerValue('last')), currentMarket.price_precision, ','), \" \", bidUnit), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.trade.toolBar.lastPrice'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-value pg-header__toolbar-item-value-negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, currentMarket && Decimal.format(Number(this.getTickerValue('high')), currentMarket.price_precision, ','), \" \", bidUnit), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.trade.toolBar.highest'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-value pg-header__toolbar-item-value-positive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, currentMarket && Decimal.format(Number(this.getTickerValue('volume')), currentMarket.price_precision, ','), \" \", bidUnit), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.trade.toolBar.volume'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-header__toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-value pg-header__toolbar-item-value-\".concat(cls),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, currentMarket && (marketTickers[currentMarket.id] || defaultTicker).price_change_percent), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-header__toolbar-item-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.trade.toolBar.change'))));\n    }\n  }]);\n\n  return HeaderToolbarContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    marketTickers: selectMarketTickers(state)\n  };\n};\n\nvar HeaderToolbar = injectIntl(withRouter(connect(mapStateToProps, {})(HeaderToolbarContainer)));\nexport { HeaderToolbar };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/HeaderToolbar/index.tsx"],"names":["React","injectIntl","connect","withRouter","Decimal","selectCurrentMarket","selectMarkets","selectMarketTickers","HeaderToolbarContainer","getTickerValue","value","props","marketTickers","currentMarket","defaultTicker","amount","low","last","high","volume","price_change_percent","id","translate","intl","formatMessage","isPositive","test","cls","bidUnit","quote_unit","toUpperCase","format","Number","price_precision","Component","mapStateToProps","state","markets","HeaderToolbar"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { IntlProps } from '../../';\nimport { Decimal } from '../../components/Decimal';\nimport {\n    Market,\n    RootState,\n    selectCurrentMarket,\n    selectMarkets,\n    selectMarketTickers, Ticker,\n} from '../../modules';\n\n\ninterface ReduxProps {\n    currentMarket?: Market;\n    markets: Market[];\n    marketTickers: {\n        [key: string]: Ticker,\n    };\n}\n\ntype Props = IntlProps & ReduxProps;\n\n// tslint:disable no-any jsx-no-multiline-js\nclass HeaderToolbarContainer extends React.Component<Props> {\n    public render() {\n        const { marketTickers, currentMarket } = this.props;\n        const defaultTicker = { amount: 0, low: 0, last: 0, high: 0, volume: 0, price_change_percent: '+0.00%' };\n\n        const isPositive = currentMarket && /\\+/.test(this.getTickerValue('price_change_percent'));\n        const cls = isPositive ? 'positive' : 'negative';\n\n        const bidUnit = currentMarket && currentMarket.quote_unit.toUpperCase();\n\n        return (\n            <div className=\"pg-header__toolbar\">\n                <div className=\"pg-header__toolbar-item\">\n                    <p className=\"pg-header__toolbar-item-value pg-header__toolbar-item-value-positive\">\n                        {currentMarket && Decimal.format(Number(this.getTickerValue('low')), currentMarket.price_precision, ',')} {bidUnit}\n                    </p>\n                    <p className=\"pg-header__toolbar-item-text\">\n                        {this.translate('page.body.trade.toolBar.lowest')}\n                    </p>\n                </div>\n                <div className=\"pg-header__toolbar-item\">\n                    <p className=\"pg-header__toolbar-item-value pg-header__toolbar-item-value-negative\">\n                        {currentMarket && Decimal.format(Number(this.getTickerValue('last')), currentMarket.price_precision, ',')} {bidUnit}\n                    </p>\n                    <p className=\"pg-header__toolbar-item-text\">\n                        {this.translate('page.body.trade.toolBar.lastPrice')}\n                    </p>\n                </div>\n                <div className=\"pg-header__toolbar-item\">\n                    <p className=\"pg-header__toolbar-item-value pg-header__toolbar-item-value-negative\">\n                        {currentMarket && Decimal.format(Number(this.getTickerValue('high')), currentMarket.price_precision, ',')} {bidUnit}\n                    </p>\n                    <p className=\"pg-header__toolbar-item-text\">\n                        {this.translate('page.body.trade.toolBar.highest')}\n                    </p>\n                </div>\n                <div className=\"pg-header__toolbar-item\">\n                    <p className=\"pg-header__toolbar-item-value pg-header__toolbar-item-value-positive\">\n                        {currentMarket && Decimal.format(Number(this.getTickerValue('volume')), currentMarket.price_precision, ',')} {bidUnit}\n                    </p>\n                    <p className=\"pg-header__toolbar-item-text\">\n                        {this.translate('page.body.trade.toolBar.volume')}\n                    </p>\n                </div>\n                <div className=\"pg-header__toolbar-item\">\n                    <p className={`pg-header__toolbar-item-value pg-header__toolbar-item-value-${cls}`}>\n                        {currentMarket && (marketTickers[currentMarket.id] || defaultTicker).price_change_percent}\n                    </p>\n                    <p className=\"pg-header__toolbar-item-text\">\n                        {this.translate('page.body.trade.toolBar.change')}\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n    private getTickerValue = (value: string) => {\n        const { marketTickers, currentMarket } = this.props;\n        const defaultTicker = { amount: 0, low: 0, last: 0, high: 0, volume: 0, price_change_percent: '+0.00%'};\n\n        return currentMarket && (marketTickers[currentMarket.id] || defaultTicker)[value];\n    };\n\n    private translate = (id: string) => {\n        return id ? this.props.intl.formatMessage({ id }) : '';\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    marketTickers: selectMarketTickers(state),\n});\n\n\nconst HeaderToolbar = injectIntl(withRouter(connect(mapStateToProps, {})(HeaderToolbarContainer) as any) as any);\n\nexport {\n    HeaderToolbar,\n};\n"]},"metadata":{},"sourceType":"module"}