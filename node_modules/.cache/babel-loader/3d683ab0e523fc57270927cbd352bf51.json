{"ast":null,"code":"import { ORDER_EXECUTE_DATA, ORDER_EXECUTE_ERROR, ORDER_EXECUTE_FETCH, ORDERS_SET_AMOUNT, ORDERS_SET_CURRENT_PRICE, ORDERS_SET_ORDER_TYPE } from './constants';\nexport var orderExecuteFetch = function orderExecuteFetch(payload) {\n  return {\n    type: ORDER_EXECUTE_FETCH,\n    payload\n  };\n};\nexport var orderExecuteData = function orderExecuteData() {\n  return {\n    type: ORDER_EXECUTE_DATA\n  };\n};\nexport var orderExecuteError = function orderExecuteError(error) {\n  return {\n    type: ORDER_EXECUTE_ERROR,\n    error\n  };\n};\nexport var setCurrentPrice = function setCurrentPrice(payload) {\n  return {\n    type: ORDERS_SET_CURRENT_PRICE,\n    payload\n  };\n};\nexport var setAmount = function setAmount(payload) {\n  return {\n    type: ORDERS_SET_AMOUNT,\n    payload\n  };\n};\nexport var setOrderType = function setOrderType(payload) {\n  return {\n    type: ORDERS_SET_ORDER_TYPE,\n    payload\n  };\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/orders/actions.ts"],"names":["ORDER_EXECUTE_DATA","ORDER_EXECUTE_ERROR","ORDER_EXECUTE_FETCH","ORDERS_SET_AMOUNT","ORDERS_SET_CURRENT_PRICE","ORDERS_SET_ORDER_TYPE","orderExecuteFetch","payload","type","orderExecuteData","orderExecuteError","error","setCurrentPrice","setAmount","setOrderType"],"mappings":"AACA,SACIA,kBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,iBAJJ,EAKIC,wBALJ,EAMIC,qBANJ,QAOO,aAPP;AAsDA,OAAO,IAAMC,iBAAiB,GAC1B,SADSA,iBACT,CAACC,OAAD;AAAA,SAA+D;AAC3DC,IAAAA,IAAI,EAAEN,mBADqD;AAE3DK,IAAAA;AAF2D,GAA/D;AAAA,CADG;AAMP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAyB;AACrDD,IAAAA,IAAI,EAAER;AAD+C,GAAzB;AAAA,CAAzB;AAIP,OAAO,IAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAA4C;AACzEH,IAAAA,IAAI,EAAEP,mBADmE;AAEzEU,IAAAA;AAFyE,GAA5C;AAAA,CAA1B;AAKP,OAAO,IAAMC,eAAe,GAC1B,SADWA,eACX,CAACL,OAAD;AAAA,SAA2D;AACzDC,IAAAA,IAAI,EAAEJ,wBADmD;AAEzDG,IAAAA;AAFyD,GAA3D;AAAA,CADK;AAMP,OAAO,IAAMM,SAAS,GAClB,SADSA,SACT,CAACN,OAAD;AAAA,SAA+C;AAC3CC,IAAAA,IAAI,EAAEL,iBADqC;AAE3CI,IAAAA;AAF2C,GAA/C;AAAA,CADG;AAMP,OAAO,IAAMO,YAAY,GACrB,SADSA,YACT,CAACP,OAAD;AAAA,SAAqD;AACjDC,IAAAA,IAAI,EAAEH,qBAD2C;AAEjDE,IAAAA;AAFiD,GAArD;AAAA,CADG","sourcesContent":["import { CommonError, OrderSide } from '../../types';\nimport {\n    ORDER_EXECUTE_DATA,\n    ORDER_EXECUTE_ERROR,\n    ORDER_EXECUTE_FETCH,\n    ORDERS_SET_AMOUNT,\n    ORDERS_SET_CURRENT_PRICE,\n    ORDERS_SET_ORDER_TYPE,\n} from './constants';\n\nexport interface OrderExecution {\n    market: string;\n    side: OrderSide;\n    volume: string;\n    price?: string;\n    ord_type?: string;\n}\n\nexport interface OrderExecuteFetch {\n    type: typeof ORDER_EXECUTE_FETCH;\n    payload: OrderExecution;\n}\n\nexport interface OrderExecuteData {\n    type: typeof ORDER_EXECUTE_DATA;\n}\n\nexport interface OrderExecuteError {\n    type: typeof ORDER_EXECUTE_ERROR;\n    error: CommonError;\n}\n\nexport interface SetCurrentPrice {\n    type: typeof ORDERS_SET_CURRENT_PRICE;\n    payload: number | undefined;\n}\n\nexport interface SetAmount {\n    type: typeof ORDERS_SET_AMOUNT;\n    payload: string;\n}\n\nexport interface SetOrderType {\n    type: typeof ORDERS_SET_ORDER_TYPE;\n    payload: string;\n}\n\nexport type OrdersAction =\n    OrderExecuteFetch\n    | OrderExecuteData\n    | OrderExecuteError\n    | SetCurrentPrice\n    | SetAmount\n    | SetOrderType;\n\nexport const orderExecuteFetch =\n    (payload: OrderExecuteFetch['payload']): OrderExecuteFetch => ({\n        type: ORDER_EXECUTE_FETCH,\n        payload,\n    });\n\nexport const orderExecuteData = (): OrderExecuteData => ({\n    type: ORDER_EXECUTE_DATA,\n});\n\nexport const orderExecuteError = (error: CommonError): OrderExecuteError => ({\n    type: ORDER_EXECUTE_ERROR,\n    error,\n});\n\nexport const setCurrentPrice =\n  (payload: SetCurrentPrice['payload']): SetCurrentPrice => ({\n    type: ORDERS_SET_CURRENT_PRICE,\n    payload,\n  });\n\nexport const setAmount =\n    (payload: SetAmount['payload']): SetAmount => ({\n        type: ORDERS_SET_AMOUNT,\n        payload,\n    });\n\nexport const setOrderType =\n    (payload: SetOrderType['payload']): SetOrderType => ({\n        type: ORDERS_SET_ORDER_TYPE,\n        payload,\n    });\n"]},"metadata":{},"sourceType":"module"}