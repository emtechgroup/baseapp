{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/Profile/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ChevronIcon } from '../../../assets/images/ChevronIcon';\nimport { copy, getLanguageName } from '../../../helpers';\nimport { alertPush, selectCurrentColorTheme, selectCurrentLanguage, selectUserInfo } from '../../../modules';\nimport { ProfileLinks, UserInfo } from '../../components';\n\nvar ProfileMobileScreenComponent = function ProfileMobileScreenComponent() {\n  var intl = useIntl();\n  var dispatch = useDispatch();\n  var user = useSelector(selectUserInfo);\n  var currentLanguage = useSelector(selectCurrentLanguage);\n  var currentTheme = useSelector(selectCurrentColorTheme);\n\n  var handleCopyText = function handleCopyText() {\n    copy('referral-link');\n    dispatch(alertPush({\n      message: ['page.mobile.profileLinks.link.referral.success'],\n      type: 'success'\n    }));\n  };\n\n  var mainLinks = [{\n    titleKey: 'page.mobile.profileLinks.main.verification',\n    route: '/profile/verification',\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-accent\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'page.mobile.profileLinks.link.verification'\n    }, {\n      level: user.level\n    })), /*#__PURE__*/React.createElement(ChevronIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }))\n  }, {\n    titleKey: 'page.mobile.profileLinks.main.2fa',\n    route: '/profile/2fa',\n    state: {\n      enable2fa: !user.otp\n    },\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, user.otp ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-green\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, intl.formatMessage({\n      id: 'page.mobile.profileLinks.link.2fa.enabled'\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, intl.formatMessage({\n      id: 'page.mobile.profileLinks.link.2fa.disabled'\n    })), /*#__PURE__*/React.createElement(ChevronIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }))\n  }, {\n    titleKey: 'page.mobile.profileLinks.main.changePassword',\n    route: '/profile/change-password'\n  }, {\n    titleKey: 'page.mobile.profileLinks.main.activity',\n    route: '/profile/account-activity'\n  }, {\n    titleKey: 'page.mobile.profileLinks.main.apiKeys',\n    route: '/profile/api-keys'\n  }];\n  var settingsLinks = [{\n    titleKey: 'page.mobile.profileLinks.settings.language',\n    route: '/profile/language',\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, getLanguageName(currentLanguage)), /*#__PURE__*/React.createElement(ChevronIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }))\n  }, {\n    titleKey: 'page.mobile.profileLinks.settings.theme',\n    route: '/profile/theme',\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, currentTheme), /*#__PURE__*/React.createElement(ChevronIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }))\n  }];\n  var additionalLinks = [{\n    titleKey: 'page.mobile.profileLinks.additional.referral',\n    route: '/profile',\n    children: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"referral-link\",\n      onClick: handleCopyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"referral-link\",\n      value: \"\".concat(window.document.location.origin, \"/signup?refid=\").concat(user.uid),\n      readOnly: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, intl.formatMessage({\n      id: 'page.mobile.profileLinks.link.referral'\n    })))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileLinks, {\n    links: mainLinks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileLinks, {\n    links: settingsLinks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileLinks, {\n    links: additionalLinks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport var ProfileMobileScreen = React.memo(ProfileMobileScreenComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/Profile/index.tsx"],"names":["React","useIntl","useDispatch","useSelector","ChevronIcon","copy","getLanguageName","alertPush","selectCurrentColorTheme","selectCurrentLanguage","selectUserInfo","ProfileLinks","UserInfo","ProfileMobileScreenComponent","intl","dispatch","user","currentLanguage","currentTheme","handleCopyText","message","type","mainLinks","titleKey","route","children","formatMessage","id","level","state","enable2fa","otp","settingsLinks","additionalLinks","window","document","location","origin","uid","ProfileMobileScreen","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ChevronIcon } from '../../../assets/images/ChevronIcon';\nimport { copy, getLanguageName } from '../../../helpers';\nimport {\n    alertPush,\n    selectCurrentColorTheme,\n    selectCurrentLanguage,\n    selectUserInfo,\n} from '../../../modules';\nimport { ProfileLinks, UserInfo } from '../../components';\n\nconst ProfileMobileScreenComponent: React.FC = () => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const user = useSelector(selectUserInfo);\n    const currentLanguage = useSelector(selectCurrentLanguage);\n    const currentTheme = useSelector(selectCurrentColorTheme);\n\n    const handleCopyText = () => {\n        copy('referral-link');\n        dispatch(alertPush({ message: ['page.mobile.profileLinks.link.referral.success'], type: 'success' }));\n    };\n\n    const mainLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.main.verification',\n            route: '/profile/verification',\n            children: (\n                <div>\n                    <span className=\"color-accent\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.verification'}, {level: user.level})}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        {\n            titleKey: 'page.mobile.profileLinks.main.2fa',\n            route: '/profile/2fa',\n            state: {\n                enable2fa: !user.otp,\n            },\n            children: (\n                <div>\n                    {user.otp ? (\n                        <span className=\"color-green\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.2fa.enabled'})}</span>\n                    ) : (\n                        <span className=\"color-red\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.2fa.disabled'})}</span>\n                    )}\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        { titleKey: 'page.mobile.profileLinks.main.changePassword', route: '/profile/change-password' },\n        { titleKey: 'page.mobile.profileLinks.main.activity', route: '/profile/account-activity' },\n        { titleKey: 'page.mobile.profileLinks.main.apiKeys', route: '/profile/api-keys' },\n    ];\n\n    const settingsLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.settings.language',\n            route: '/profile/language',\n            children: (\n                <div>\n                    <span>{getLanguageName(currentLanguage)}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        {\n            titleKey: 'page.mobile.profileLinks.settings.theme',\n            route: '/profile/theme',\n            children: (\n                <div>\n                    <span className=\"text-capitalize\">{currentTheme}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n    ];\n\n    const additionalLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.additional.referral',\n            route: '/profile',\n            children: (\n                <div className=\"referral-link\" onClick={handleCopyText}>\n                    <input\n                        type=\"text\"\n                        id=\"referral-link\"\n                        value={`${window.document.location.origin}/signup?refid=${user.uid}`}\n                        readOnly={true}\n                    />\n                    <span>{intl.formatMessage({id: 'page.mobile.profileLinks.link.referral'})}</span>\n                </div>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"pg-mobile-profile-screen\">\n            <UserInfo />\n            <ProfileLinks links={mainLinks} />\n            <ProfileLinks links={settingsLinks} />\n            <ProfileLinks links={additionalLinks} />\n        </div>\n    );\n};\n\nexport const ProfileMobileScreen = React.memo(ProfileMobileScreenComponent);\n"]},"metadata":{},"sourceType":"module"}