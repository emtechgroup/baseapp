{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { PROFILE_CHANGE_PASSWORD_DATA, PROFILE_CHANGE_PASSWORD_ERROR, PROFILE_CHANGE_PASSWORD_FETCH, PROFILE_CHANGE_USER_DATA, PROFILE_CHANGE_USER_ERROR, PROFILE_CHANGE_USER_FETCH, PROFILE_CHANGE_USER_LEVEL, PROFILE_GENERATE_2FA_QRCODE_DATA, PROFILE_GENERATE_2FA_QRCODE_ERROR, PROFILE_GENERATE_2FA_QRCODE_FETCH, PROFILE_RESET_USER, PROFILE_TOGGLE_2FA_DATA, PROFILE_TOGGLE_2FA_ERROR, PROFILE_TOGGLE_2FA_FETCH, PROFILE_TOGGLE_USER_2FA, PROFILE_USER_DATA, PROFILE_USER_ERROR, PROFILE_USER_FETCH } from './constants';\n\nvar ifUserIsLoggedIn = function ifUserIsLoggedIn() {\n  var csrfTokenExist = localStorage.getItem('csrfToken');\n\n  if (csrfTokenExist === null) {\n    return false;\n  }\n\n  return true;\n};\n\nexport var defaultUser = {\n  email: '',\n  level: 0,\n  otp: false,\n  role: '',\n  state: '',\n  uid: '',\n  profiles: [],\n  referal_uid: '',\n  labels: [],\n  phone: [],\n  created_at: '',\n  updated_at: ''\n};\nexport var initialStateProfile = {\n  passwordChange: {\n    success: false\n  },\n  twoFactorAuth: {\n    barcode: '',\n    url: ''\n  },\n  userData: {\n    user: defaultUser,\n    isFetching: ifUserIsLoggedIn()\n  }\n};\n\nvar passwordChangeReducer = function passwordChangeReducer(state, action) {\n  switch (action.type) {\n    case PROFILE_CHANGE_PASSWORD_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false,\n        error: undefined\n      });\n\n    case PROFILE_CHANGE_PASSWORD_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: true,\n        error: undefined\n      });\n\n    case PROFILE_CHANGE_PASSWORD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar twoAuthReducer = function twoAuthReducer(state, action) {\n  switch (action.type) {\n    case PROFILE_GENERATE_2FA_QRCODE_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false,\n        error: undefined,\n        barcode: '',\n        url: ''\n      });\n\n    case PROFILE_GENERATE_2FA_QRCODE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: undefined,\n        barcode: action.payload.barcode,\n        url: action.payload.url\n      });\n\n    case PROFILE_GENERATE_2FA_QRCODE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false,\n        error: action.error,\n        barcode: '',\n        url: ''\n      });\n\n    case PROFILE_TOGGLE_2FA_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false,\n        error: undefined\n      });\n\n    case PROFILE_TOGGLE_2FA_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: true,\n        error: undefined\n      });\n\n    case PROFILE_TOGGLE_2FA_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var userReducer = function userReducer(state, action) {\n  switch (action.type) {\n    case PROFILE_USER_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: true\n      });\n\n    case PROFILE_USER_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: false,\n        user: action.payload.user\n      });\n\n    case PROFILE_USER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case PROFILE_RESET_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: initialStateProfile.userData.user\n      });\n\n    case PROFILE_CHANGE_USER_LEVEL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          level: action.payload.level\n        })\n      });\n\n    case PROFILE_TOGGLE_USER_2FA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          otp: !state.user.otp\n        })\n      });\n\n    case PROFILE_CHANGE_USER_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false\n      });\n\n    case PROFILE_CHANGE_USER_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          data: action.payload && action.payload.user && action.payload.user.data || state.user.data\n        }),\n        success: true\n      });\n\n    case PROFILE_CHANGE_USER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        success: false\n      });\n\n    default:\n      return state;\n  }\n};\nexport var profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateProfile;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PROFILE_CHANGE_PASSWORD_FETCH:\n    case PROFILE_CHANGE_PASSWORD_DATA:\n    case PROFILE_CHANGE_PASSWORD_ERROR:\n      var passwordChangeState = _objectSpread({}, state.passwordChange);\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        passwordChange: passwordChangeReducer(passwordChangeState, action)\n      });\n\n    case PROFILE_GENERATE_2FA_QRCODE_FETCH:\n    case PROFILE_GENERATE_2FA_QRCODE_DATA:\n    case PROFILE_GENERATE_2FA_QRCODE_ERROR:\n    case PROFILE_TOGGLE_2FA_FETCH:\n    case PROFILE_TOGGLE_2FA_DATA:\n    case PROFILE_TOGGLE_2FA_ERROR:\n      var twoFactorAuthState = _objectSpread({}, state.twoFactorAuth);\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        twoFactorAuth: twoAuthReducer(twoFactorAuthState, action)\n      });\n\n    case PROFILE_USER_FETCH:\n    case PROFILE_USER_DATA:\n    case PROFILE_RESET_USER:\n    case PROFILE_USER_ERROR:\n    case PROFILE_CHANGE_USER_LEVEL:\n    case PROFILE_TOGGLE_USER_2FA:\n    case PROFILE_CHANGE_USER_FETCH:\n    case PROFILE_CHANGE_USER_DATA:\n    case PROFILE_CHANGE_USER_ERROR:\n      var userState = _objectSpread({}, state.userData);\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userData: userReducer(userState, action)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/profile/reducer.ts"],"names":["PROFILE_CHANGE_PASSWORD_DATA","PROFILE_CHANGE_PASSWORD_ERROR","PROFILE_CHANGE_PASSWORD_FETCH","PROFILE_CHANGE_USER_DATA","PROFILE_CHANGE_USER_ERROR","PROFILE_CHANGE_USER_FETCH","PROFILE_CHANGE_USER_LEVEL","PROFILE_GENERATE_2FA_QRCODE_DATA","PROFILE_GENERATE_2FA_QRCODE_ERROR","PROFILE_GENERATE_2FA_QRCODE_FETCH","PROFILE_RESET_USER","PROFILE_TOGGLE_2FA_DATA","PROFILE_TOGGLE_2FA_ERROR","PROFILE_TOGGLE_2FA_FETCH","PROFILE_TOGGLE_USER_2FA","PROFILE_USER_DATA","PROFILE_USER_ERROR","PROFILE_USER_FETCH","ifUserIsLoggedIn","csrfTokenExist","localStorage","getItem","defaultUser","email","level","otp","role","state","uid","profiles","referal_uid","labels","phone","created_at","updated_at","initialStateProfile","passwordChange","success","twoFactorAuth","barcode","url","userData","user","isFetching","passwordChangeReducer","action","type","error","undefined","twoAuthReducer","payload","userReducer","data","profileReducer","passwordChangeState","twoFactorAuthState","userState"],"mappings":";AAEA,SACIA,4BADJ,EAEIC,6BAFJ,EAGIC,6BAHJ,EAIIC,wBAJJ,EAKIC,yBALJ,EAMIC,yBANJ,EAOIC,yBAPJ,EAQIC,gCARJ,EASIC,iCATJ,EAUIC,iCAVJ,EAWIC,kBAXJ,EAYIC,uBAZJ,EAaIC,wBAbJ,EAcIC,wBAdJ,EAeIC,uBAfJ,EAgBIC,iBAhBJ,EAiBIC,kBAjBJ,EAkBIC,kBAlBJ,QAmBO,aAnBP;;AAyCA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAvB;;AAEA,MAAIF,cAAc,KAAK,IAAvB,EAA6B;AACzB,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CARD;;AAWA,OAAO,IAAMG,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,KAAK,EAAE,CAFgB;AAGvBC,EAAAA,GAAG,EAAE,KAHkB;AAIvBC,EAAAA,IAAI,EAAE,EAJiB;AAKvBC,EAAAA,KAAK,EAAE,EALgB;AAMvBC,EAAAA,GAAG,EAAE,EANkB;AAOvBC,EAAAA,QAAQ,EAAE,EAPa;AAQvBC,EAAAA,WAAW,EAAE,EARU;AASvBC,EAAAA,MAAM,EAAE,EATe;AAUvBC,EAAAA,KAAK,EAAE,EAVgB;AAWvBC,EAAAA,UAAU,EAAE,EAXW;AAYvBC,EAAAA,UAAU,EAAE;AAZW,CAApB;AAeP,OAAO,IAAMC,mBAAiC,GAAG;AAC7CC,EAAAA,cAAc,EAAE;AACZC,IAAAA,OAAO,EAAE;AADG,GAD6B;AAI7CC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,EADE;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAJ8B;AAQ7CC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEpB,WADA;AAENqB,IAAAA,UAAU,EAAEzB,gBAAgB;AAFtB;AARmC,CAA1C;;AAcP,IAAM0B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACjB,KAAD,EAAwCkB,MAAxC,EAAkE;AAC5F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK5C,6BAAL;AACI,6CACOyB,KADP;AAEIU,QAAAA,OAAO,EAAE,KAFb;AAGIU,QAAAA,KAAK,EAAEC;AAHX;;AAKJ,SAAKhD,4BAAL;AACI,6CACO2B,KADP;AAEIU,QAAAA,OAAO,EAAE,IAFb;AAGIU,QAAAA,KAAK,EAAEC;AAHX;;AAKJ,SAAK/C,6BAAL;AACI,6CACO0B,KADP;AAEIoB,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAFlB;;AAIJ;AACI,aAAOpB,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAACtB,KAAD,EAAuCkB,MAAvC,EAAiE;AACpF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrC,iCAAL;AACI,6CACOkB,KADP;AAEIU,QAAAA,OAAO,EAAE,KAFb;AAGIU,QAAAA,KAAK,EAAEC,SAHX;AAIIT,QAAAA,OAAO,EAAE,EAJb;AAKIC,QAAAA,GAAG,EAAE;AALT;;AAOJ,SAAKjC,gCAAL;AACI,6CACOoB,KADP;AAEIoB,QAAAA,KAAK,EAAEC,SAFX;AAGIT,QAAAA,OAAO,EAAEM,MAAM,CAACK,OAAP,CAAeX,OAH5B;AAIIC,QAAAA,GAAG,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAJxB;;AAMJ,SAAKhC,iCAAL;AACI,6CACOmB,KADP;AAEIU,QAAAA,OAAO,EAAE,KAFb;AAGIU,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAHlB;AAIIR,QAAAA,OAAO,EAAE,EAJb;AAKIC,QAAAA,GAAG,EAAE;AALT;;AAOJ,SAAK3B,wBAAL;AACI,6CACOc,KADP;AAEIU,QAAAA,OAAO,EAAE,KAFb;AAGIU,QAAAA,KAAK,EAAEC;AAHX;;AAKJ,SAAKrC,uBAAL;AACI,6CACOgB,KADP;AAEIU,QAAAA,OAAO,EAAE,IAFb;AAGIU,QAAAA,KAAK,EAAEC;AAHX;;AAKJ,SAAKpC,wBAAL;AACI,6CACOe,KADP;AAEIU,QAAAA,OAAO,EAAE,KAFb;AAGIU,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAHlB;;AAKJ;AACI,aAAOpB,KAAP;AA3CR;AA6CH,CA9CD;;AAgDA,OAAO,IAAMwB,WAAW,GAAG,SAAdA,WAAc,CAACxB,KAAD,EAAkCkB,MAAlC,EAA4D;AACnF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK7B,kBAAL;AACI,6CACOU,KADP;AAEIgB,QAAAA,UAAU,EAAE;AAFhB;;AAIJ,SAAK5B,iBAAL;AACI,6CACOY,KADP;AAEIgB,QAAAA,UAAU,EAAE,KAFhB;AAGID,QAAAA,IAAI,EAAEG,MAAM,CAACK,OAAP,CAAeR;AAHzB;;AAKJ,SAAK1B,kBAAL;AACI,6CACOW,KADP;AAEIgB,QAAAA,UAAU,EAAE,KAFhB;AAGII,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAHlB;;AAKJ,SAAKrC,kBAAL;AACI,6CACOiB,KADP;AAEIe,QAAAA,IAAI,EAAEP,mBAAmB,CAACM,QAApB,CAA6BC;AAFvC;;AAIJ,SAAKpC,yBAAL;AACI,6CACOqB,KADP;AAEIe,QAAAA,IAAI,kCACGf,KAAK,CAACe,IADT;AAEAlB,UAAAA,KAAK,EAAEqB,MAAM,CAACK,OAAP,CAAe1B;AAFtB;AAFR;;AAOJ,SAAKV,uBAAL;AACI,6CACOa,KADP;AAEIe,QAAAA,IAAI,kCACGf,KAAK,CAACe,IADT;AAEAjB,UAAAA,GAAG,EAAE,CAACE,KAAK,CAACe,IAAN,CAAWjB;AAFjB;AAFR;;AAOJ,SAAKpB,yBAAL;AACI,6CACOsB,KADP;AAEIU,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKlC,wBAAL;AACI,6CACOwB,KADP;AAEIe,QAAAA,IAAI,kCACGf,KAAK,CAACe,IADT;AAEAU,UAAAA,IAAI,EAAGP,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAeR,IAAjC,IAAyCG,MAAM,CAACK,OAAP,CAAeR,IAAf,CAAoBU,IAA9D,IAAuEzB,KAAK,CAACe,IAAN,CAAWU;AAFxF,UAFR;AAMIf,QAAAA,OAAO,EAAE;AANb;;AAQJ,SAAKjC,yBAAL;AACI,6CACOuB,KADP;AAEIU,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOV,KAAP;AA3DR;AA6DH,CA9DM;AAgEP,OAAO,IAAM0B,cAAc,GAAG,SAAjBA,cAAiB,GAAwD;AAAA,MAAvD1B,KAAuD,uEAA/CQ,mBAA+C;AAAA,MAA1BU,MAA0B;;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK5C,6BAAL;AACA,SAAKF,4BAAL;AACA,SAAKC,6BAAL;AACI,UAAMqD,mBAAmB,qBAAQ3B,KAAK,CAACS,cAAd,CAAzB;;AAEA,6CACOT,KADP;AAEIS,QAAAA,cAAc,EAAEQ,qBAAqB,CAACU,mBAAD,EAAsBT,MAAtB;AAFzC;;AAKJ,SAAKpC,iCAAL;AACA,SAAKF,gCAAL;AACA,SAAKC,iCAAL;AACA,SAAKK,wBAAL;AACA,SAAKF,uBAAL;AACA,SAAKC,wBAAL;AACI,UAAM2C,kBAAkB,qBAAQ5B,KAAK,CAACW,aAAd,CAAxB;;AAEA,6CACOX,KADP;AAEIW,QAAAA,aAAa,EAAEW,cAAc,CAACM,kBAAD,EAAqBV,MAArB;AAFjC;;AAKJ,SAAK5B,kBAAL;AACA,SAAKF,iBAAL;AACA,SAAKL,kBAAL;AACA,SAAKM,kBAAL;AACA,SAAKV,yBAAL;AACA,SAAKQ,uBAAL;AACA,SAAKT,yBAAL;AACA,SAAKF,wBAAL;AACA,SAAKC,yBAAL;AACI,UAAMoD,SAAS,qBAAQ7B,KAAK,CAACc,QAAd,CAAf;;AAEA,6CACOd,KADP;AAEIc,QAAAA,QAAQ,EAAEU,WAAW,CAACK,SAAD,EAAYX,MAAZ;AAFzB;;AAKJ;AACI,aAAOlB,KAAP;AAzCR;AA2CH,CA5CM","sourcesContent":["import { CommonError } from '../../types';\nimport { ProfileAction } from './actions';\nimport {\n    PROFILE_CHANGE_PASSWORD_DATA,\n    PROFILE_CHANGE_PASSWORD_ERROR,\n    PROFILE_CHANGE_PASSWORD_FETCH,\n    PROFILE_CHANGE_USER_DATA,\n    PROFILE_CHANGE_USER_ERROR,\n    PROFILE_CHANGE_USER_FETCH,\n    PROFILE_CHANGE_USER_LEVEL,\n    PROFILE_GENERATE_2FA_QRCODE_DATA,\n    PROFILE_GENERATE_2FA_QRCODE_ERROR,\n    PROFILE_GENERATE_2FA_QRCODE_FETCH,\n    PROFILE_RESET_USER,\n    PROFILE_TOGGLE_2FA_DATA,\n    PROFILE_TOGGLE_2FA_ERROR,\n    PROFILE_TOGGLE_2FA_FETCH,\n    PROFILE_TOGGLE_USER_2FA,\n    PROFILE_USER_DATA,\n    PROFILE_USER_ERROR,\n    PROFILE_USER_FETCH,\n} from './constants';\nimport { User } from './types';\n\nexport interface ProfileState {\n    passwordChange: {\n        success?: boolean;\n        error?: CommonError;\n    };\n    twoFactorAuth: {\n        barcode: string;\n        url: string;\n        success?: boolean;\n        error?: CommonError;\n    };\n    userData: {\n        user: User;\n        error?: CommonError;\n        isFetching: boolean;\n        success?: boolean;\n    };\n}\n\nconst ifUserIsLoggedIn = () => {\n    const csrfTokenExist = localStorage.getItem('csrfToken');\n\n    if (csrfTokenExist === null) {\n        return false;\n    }\n\n    return true;\n};\n\n\nexport const defaultUser = {\n    email: '',\n    level: 0,\n    otp: false,\n    role: '',\n    state: '',\n    uid: '',\n    profiles: [],\n    referal_uid: '',\n    labels: [],\n    phone: [],\n    created_at: '',\n    updated_at: '',\n};\n\nexport const initialStateProfile: ProfileState = {\n    passwordChange: {\n        success: false,\n    },\n    twoFactorAuth: {\n        barcode: '',\n        url: '',\n    },\n    userData: {\n        user: defaultUser,\n        isFetching: ifUserIsLoggedIn(),\n    },\n};\n\nconst passwordChangeReducer = (state: ProfileState['passwordChange'], action: ProfileAction) => {\n    switch (action.type) {\n        case PROFILE_CHANGE_PASSWORD_FETCH:\n            return {\n                ...state,\n                success: false,\n                error: undefined,\n            };\n        case PROFILE_CHANGE_PASSWORD_DATA:\n            return {\n                ...state,\n                success: true,\n                error: undefined,\n            };\n        case PROFILE_CHANGE_PASSWORD_ERROR:\n            return  {\n                ...state,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\n\nconst twoAuthReducer = (state: ProfileState['twoFactorAuth'], action: ProfileAction) => {\n    switch (action.type) {\n        case PROFILE_GENERATE_2FA_QRCODE_FETCH:\n            return {\n                ...state,\n                success: false,\n                error: undefined,\n                barcode: '',\n                url: '',\n            };\n        case PROFILE_GENERATE_2FA_QRCODE_DATA:\n            return {\n                ...state,\n                error: undefined,\n                barcode: action.payload.barcode,\n                url: action.payload.url,\n            };\n        case PROFILE_GENERATE_2FA_QRCODE_ERROR:\n            return {\n                ...state,\n                success: false,\n                error: action.error,\n                barcode: '',\n                url: '',\n            };\n        case PROFILE_TOGGLE_2FA_FETCH:\n            return {\n                ...state,\n                success: false,\n                error: undefined,\n            };\n        case PROFILE_TOGGLE_2FA_DATA:\n            return {\n                ...state,\n                success: true,\n                error: undefined,\n            };\n        case PROFILE_TOGGLE_2FA_ERROR:\n            return {\n                ...state,\n                success: false,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const userReducer = (state: ProfileState['userData'], action: ProfileAction) => {\n    switch (action.type) {\n        case PROFILE_USER_FETCH:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case PROFILE_USER_DATA:\n            return {\n                ...state,\n                isFetching: false,\n                user: action.payload.user,\n            };\n        case PROFILE_USER_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error,\n            };\n        case PROFILE_RESET_USER:\n            return {\n                ...state,\n                user: initialStateProfile.userData.user,\n            };\n        case PROFILE_CHANGE_USER_LEVEL:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    level: action.payload.level,\n                },\n            };\n        case PROFILE_TOGGLE_USER_2FA:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    otp: !state.user.otp,\n                },\n            };\n        case PROFILE_CHANGE_USER_FETCH:\n            return {\n                ...state,\n                success: false,\n            };\n        case PROFILE_CHANGE_USER_DATA:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    data: (action.payload && action.payload.user && action.payload.user.data) || state.user.data,\n                },\n                success: true,\n            };\n        case PROFILE_CHANGE_USER_ERROR:\n            return {\n                ...state,\n                success: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const profileReducer = (state = initialStateProfile, action: ProfileAction) => {\n    switch (action.type) {\n        case PROFILE_CHANGE_PASSWORD_FETCH:\n        case PROFILE_CHANGE_PASSWORD_DATA:\n        case PROFILE_CHANGE_PASSWORD_ERROR:\n            const passwordChangeState = { ...state.passwordChange };\n\n            return {\n                ...state,\n                passwordChange: passwordChangeReducer(passwordChangeState, action),\n            };\n\n        case PROFILE_GENERATE_2FA_QRCODE_FETCH:\n        case PROFILE_GENERATE_2FA_QRCODE_DATA:\n        case PROFILE_GENERATE_2FA_QRCODE_ERROR:\n        case PROFILE_TOGGLE_2FA_FETCH:\n        case PROFILE_TOGGLE_2FA_DATA:\n        case PROFILE_TOGGLE_2FA_ERROR:\n            const twoFactorAuthState = { ...state.twoFactorAuth };\n\n            return {\n                ...state,\n                twoFactorAuth: twoAuthReducer(twoFactorAuthState, action),\n            };\n\n        case PROFILE_USER_FETCH:\n        case PROFILE_USER_DATA:\n        case PROFILE_RESET_USER:\n        case PROFILE_USER_ERROR:\n        case PROFILE_CHANGE_USER_LEVEL:\n        case PROFILE_TOGGLE_USER_2FA:\n        case PROFILE_CHANGE_USER_FETCH:\n        case PROFILE_CHANGE_USER_DATA:\n        case PROFILE_CHANGE_USER_ERROR:\n            const userState = { ...state.userData };\n\n            return {\n                ...state,\n                userData: userReducer(userState, action),\n            };\n\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}