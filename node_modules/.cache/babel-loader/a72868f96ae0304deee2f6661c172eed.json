{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/OpenOrders/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { useUserOrdersHistoryFetch } from '../../../hooks';\nimport { ordersCancelAllFetch, ordersHistoryCancelFetch, selectOrdersHistory, selectShouldFetchCancelAll, selectShouldFetchCancelSingle } from '../../../modules';\nimport { OrdersItem } from '../Orders/OrdersItem';\n\nvar OpenOrdersComponent = function OpenOrdersComponent() {\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var orders = useSelector(selectOrdersHistory);\n  var shouldFetchCancelAll = useSelector(selectShouldFetchCancelAll);\n  var shouldFetchCancelSingle = useSelector(selectShouldFetchCancelSingle);\n  useUserOrdersHistoryFetch(0, 'open', 25);\n  var waitOrders = orders.filter(function (o) {\n    return ['wait', 'pending'].includes(o.state);\n  });\n\n  var handleCancelAllOrders = function handleCancelAllOrders() {\n    if (shouldFetchCancelAll) {\n      dispatch(ordersCancelAllFetch());\n    }\n  };\n\n  var handleCancelSingleOrder = function handleCancelSingleOrder(id) {\n    return function () {\n      if (shouldFetchCancelAll && shouldFetchCancelSingle) {\n        dispatch(ordersHistoryCancelFetch({\n          id,\n          type: 'open',\n          list: waitOrders\n        }));\n      }\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-open-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-open-orders__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-open-orders__header__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.open.title'\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-open-orders__header__block\",\n    onClick: handleCancelAllOrders,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.cancelAll'\n  })), /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-open-orders__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, waitOrders.length ? waitOrders.map(function (order, index) {\n    return /*#__PURE__*/React.createElement(OrdersItem, {\n      key: index,\n      order: order,\n      handleCancel: handleCancelSingleOrder,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"no-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.noDataToShow'\n  }))));\n};\n\nexport var OpenOrders = React.memo(OpenOrdersComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/OpenOrders/index.tsx"],"names":["React","useIntl","useDispatch","useSelector","CloseIcon","useUserOrdersHistoryFetch","ordersCancelAllFetch","ordersHistoryCancelFetch","selectOrdersHistory","selectShouldFetchCancelAll","selectShouldFetchCancelSingle","OrdersItem","OpenOrdersComponent","dispatch","intl","orders","shouldFetchCancelAll","shouldFetchCancelSingle","waitOrders","filter","o","includes","state","handleCancelAllOrders","handleCancelSingleOrder","id","type","list","formatMessage","length","map","order","index","OpenOrders","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { useUserOrdersHistoryFetch } from '../../../hooks';\nimport {\n    ordersCancelAllFetch,\n    ordersHistoryCancelFetch,\n    selectOrdersHistory,\n    selectShouldFetchCancelAll,\n    selectShouldFetchCancelSingle,\n} from '../../../modules';\nimport { OrdersItem } from '../Orders/OrdersItem';\n\nconst OpenOrdersComponent: React.FC = () => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const orders = useSelector(selectOrdersHistory);\n    const shouldFetchCancelAll = useSelector(selectShouldFetchCancelAll);\n    const shouldFetchCancelSingle = useSelector(selectShouldFetchCancelSingle);\n    useUserOrdersHistoryFetch(0, 'open', 25);\n    const waitOrders = orders.filter(o => ['wait', 'pending'].includes(o.state));\n\n    const handleCancelAllOrders = () => {\n        if (shouldFetchCancelAll) {\n            dispatch(ordersCancelAllFetch());\n        }\n    };\n\n    const handleCancelSingleOrder = (id: number) => () => {\n        if (shouldFetchCancelAll && shouldFetchCancelSingle) {\n            dispatch(ordersHistoryCancelFetch({\n                id,\n                type: 'open',\n                list: waitOrders,\n            }));\n        }\n    };\n\n    return (\n        <div className=\"pg-mobile-open-orders\">\n            <div className=\"pg-mobile-open-orders__header\">\n                <div className=\"pg-mobile-open-orders__header__block\">\n                    <span>{intl.formatMessage({id: 'page.mobile.orders.open.title'})}</span>\n                </div>\n                <div className=\"pg-mobile-open-orders__header__block\" onClick={handleCancelAllOrders}>\n                    <span>{intl.formatMessage({id: 'page.mobile.orders.cancelAll'})}</span>\n                    <CloseIcon />\n                </div>\n            </div>\n            <div className=\"pg-mobile-open-orders__content\">\n                {waitOrders.length ? (\n                    waitOrders.map((order, index) => (\n                        <OrdersItem\n                            key={index}\n                            order={order}\n                            handleCancel={handleCancelSingleOrder}\n                        />\n                    ))\n                ) : (\n                    <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport const OpenOrders = React.memo(OpenOrdersComponent);\n"]},"metadata":{},"sourceType":"module"}