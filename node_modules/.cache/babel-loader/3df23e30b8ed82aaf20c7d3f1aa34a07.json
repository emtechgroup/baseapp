{"ast":null,"code":"export var selectRanger = function selectRanger(state) {\n  return state.public.ranger;\n};\nexport var selectRangerIsConnected = function selectRangerIsConnected(state) {\n  return state.public.ranger.connected;\n};\nexport var selectRangerIsConnecting = function selectRangerIsConnecting(state) {\n  return state.public.ranger.connecting;\n};\nexport var selectSubscriptions = function selectSubscriptions(state) {\n  return state.public.ranger.subscriptions;\n};\nexport var selectRangerTimestamp = function selectRangerTimestamp(state) {\n  return state.public.ranger.timestamp;\n};\nexport var selectShouldRangerConnect = function selectShouldRangerConnect(state) {\n  return !selectRangerTimestamp(state) && !selectRangerIsConnecting(state);\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/ranger/selectors.ts"],"names":["selectRanger","state","public","ranger","selectRangerIsConnected","connected","selectRangerIsConnecting","connecting","selectSubscriptions","subscriptions","selectRangerTimestamp","timestamp","selectShouldRangerConnect"],"mappings":"AAGA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SACxBA,KAAK,CAACC,MAAN,CAAaC,MADW;AAAA,CAArB;AAGP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACH,KAAD;AAAA,SACnCA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBE,SADe;AAAA,CAAhC;AAGP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACL,KAAD;AAAA,SACpCA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBI,UADgB;AAAA,CAAjC;AAGP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACP,KAAD;AAAA,SAC/BA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBM,aADW;AAAA,CAA5B;AAGP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACT,KAAD;AAAA,SACjCA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBQ,SADa;AAAA,CAA9B;AAGP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACX,KAAD;AAAA,SACrC,CAACS,qBAAqB,CAACT,KAAD,CAAtB,IAAiC,CAACK,wBAAwB,CAACL,KAAD,CADrB;AAAA,CAAlC","sourcesContent":["import { RootState } from '../..';\nimport { RangerState } from './reducer';\n\nexport const selectRanger = (state: RootState): RangerState =>\n    state.public.ranger;\n\nexport const selectRangerIsConnected = (state: RootState): boolean =>\n    state.public.ranger.connected;\n\nexport const selectRangerIsConnecting = (state: RootState): boolean =>\n    state.public.ranger.connecting;\n\nexport const selectSubscriptions = (state: RootState): string[] =>\n    state.public.ranger.subscriptions;\n\nexport const selectRangerTimestamp = (state: RootState): number | undefined =>\n    state.public.ranger.timestamp;\n\nexport const selectShouldRangerConnect = (state: RootState): boolean =>\n    !selectRangerTimestamp(state) && !selectRangerIsConnecting(state);\n"]},"metadata":{},"sourceType":"module"}