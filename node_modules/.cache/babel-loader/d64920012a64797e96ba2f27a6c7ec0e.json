{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/SignIn/index.tsx\";\n\nimport cr from 'classnames';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput } from '../';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\n\nvar SignIn = function SignIn(_ref) {\n  var email = _ref.email,\n      emailError = _ref.emailError,\n      emailPlaceholder = _ref.emailPlaceholder,\n      password = _ref.password,\n      passwordError = _ref.passwordError,\n      passwordPlaceholder = _ref.passwordPlaceholder,\n      isLoading = _ref.isLoading,\n      onSignUp = _ref.onSignUp,\n      image = _ref.image,\n      labelSignIn = _ref.labelSignIn,\n      labelSignUp = _ref.labelSignUp,\n      emailLabel = _ref.emailLabel,\n      passwordLabel = _ref.passwordLabel,\n      emailFocused = _ref.emailFocused,\n      passwordFocused = _ref.passwordFocused,\n      onForgotPassword = _ref.onForgotPassword,\n      forgotPasswordLabel = _ref.forgotPasswordLabel,\n      refreshError = _ref.refreshError,\n      onSignIn = _ref.onSignIn,\n      isFormValid = _ref.isFormValid,\n      handleChangeFocusField = _ref.handleChangeFocusField,\n      changePassword = _ref.changePassword,\n      changeEmail = _ref.changeEmail;\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var history = useHistory();\n\n  var _useIntl = useIntl(),\n      formatMessage = _useIntl.formatMessage;\n\n  var isValidForm = React.useCallback(function () {\n    var isEmailValid = email.match(EMAIL_REGEX);\n    return email && isEmailValid && password;\n  }, [email, password]);\n  var handleChangeEmail = React.useCallback(function (value) {\n    changeEmail(value);\n  }, [changeEmail]);\n  var handleChangePassword = React.useCallback(function (value) {\n    changePassword(value);\n  }, [changePassword]);\n  var handleFieldFocus = React.useCallback(function (field) {\n    handleChangeFocusField(field);\n  }, [handleChangeFocusField]);\n  var handleSubmitForm = React.useCallback(function () {\n    refreshError();\n    onSignIn();\n  }, [onSignIn, refreshError]);\n  var handleValidateForm = React.useCallback(function () {\n    isFormValid();\n  }, [isFormValid]);\n  var handleClick = React.useCallback(function (e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (!isValidForm()) {\n      handleValidateForm();\n    } else {\n      handleSubmitForm();\n    }\n  }, [handleSubmitForm, handleValidateForm, isValidForm]);\n  var handleEnterPress = React.useCallback(function (event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleClick();\n    }\n  }, [handleClick]);\n  var renderForgotButton = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-sign-in-form__bottom-section\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-sign-in-form__bottom-section-password\",\n      onClick: function onClick() {\n        return onForgotPassword(email);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, forgotPasswordLabel || 'Forgot your password?'));\n  }, [forgotPasswordLabel, onForgotPassword, email]);\n  var renderRegister = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-sign-in-screen__register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, formatMessage({\n      id: 'page.header.signIN.noAccountYet'\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        return history.push('/signup');\n      },\n      className: \"pg-sign-in-screen__register-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.landing.header.button3'\n    }))));\n  }, [formatMessage, history]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form\",\n    onKeyPress: handleEnterPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, !isMobileDevice && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__options-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option-inner __selected\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, labelSignIn ? labelSignIn : 'Sign In')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\",\n    onClick: onSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, labelSignUp ? labelSignUp : 'Sign Up'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__form-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cr-sign-in-form__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"cr-sign-in-form__image\",\n    src: image,\n    alt: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-in-form__group', {\n      'cr-sign-in-form__group--focused': emailFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"email\",\n    label: emailLabel || 'Email',\n    placeholder: emailPlaceholder,\n    defaultLabel: \"Email\",\n    handleChangeInput: handleChangeEmail,\n    inputValue: email,\n    handleFocusInput: function handleFocusInput() {\n      return handleFieldFocus('email');\n    },\n    classNameLabel: \"cr-sign-in-form__label\",\n    autoFocus: !isMobileDevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }), emailError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cr-sign-in-form__error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 40\n    }\n  }, emailError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-in-form__group', {\n      'cr-sign-in-form__group--focused': passwordFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"password\",\n    label: passwordLabel || 'Password',\n    placeholder: passwordPlaceholder,\n    defaultLabel: \"Password\",\n    handleChangeInput: handleChangePassword,\n    inputValue: password,\n    handleFocusInput: function handleFocusInput() {\n      return handleFieldFocus('password');\n    },\n    classNameLabel: \"cr-sign-in-form__label\",\n    autoFocus: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }), passwordError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cr-sign-in-form__error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 43\n    }\n  }, passwordError)), isMobileDevice && renderForgotButton, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"button\",\n    disabled: isLoading || !email.match(EMAIL_REGEX) || !password,\n    onClick: handleClick,\n    size: \"lg\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, isLoading ? 'Loading...' : labelSignIn ? labelSignIn : 'Sign in')), !isMobileDevice && renderForgotButton, isMobileDevice && renderRegister)));\n};\n\nexport var SignInComponent = React.memo(SignIn);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/SignIn/index.tsx"],"names":["cr","React","Button","useIntl","useSelector","useHistory","CustomInput","EMAIL_REGEX","selectMobileDeviceState","SignIn","email","emailError","emailPlaceholder","password","passwordError","passwordPlaceholder","isLoading","onSignUp","image","labelSignIn","labelSignUp","emailLabel","passwordLabel","emailFocused","passwordFocused","onForgotPassword","forgotPasswordLabel","refreshError","onSignIn","isFormValid","handleChangeFocusField","changePassword","changeEmail","isMobileDevice","history","formatMessage","isValidForm","useCallback","isEmailValid","match","handleChangeEmail","value","handleChangePassword","handleFieldFocus","field","handleSubmitForm","handleValidateForm","handleClick","e","preventDefault","handleEnterPress","event","key","renderForgotButton","useMemo","renderRegister","id","push","SignInComponent","memo"],"mappings":"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","sourcesContent":["import cr from 'classnames';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput } from '../';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\n\nexport interface SignInProps {\n    labelSignIn?: string;\n    labelSignUp?: string;\n    emailLabel?: string;\n    passwordLabel?: string;\n    receiveConfirmationLabel?: string;\n    forgotPasswordLabel?: string;\n    isLoading?: boolean;\n    title?: string;\n    onForgotPassword: (email?: string) => void;\n    onConfirmationResend?: (email?: string) => void;\n    onSignUp: () => void;\n    onSignIn: () => void;\n    className?: string;\n    image?: string;\n    email: string;\n    emailError: string;\n    password: string;\n    passwordError: string;\n    emailFocused: boolean;\n    emailPlaceholder: string;\n    passwordFocused: boolean;\n    passwordPlaceholder: string;\n    isFormValid: () => void;\n    refreshError: () => void;\n    handleChangeFocusField: (value: string) => void;\n    changePassword: (value: string) => void;\n    changeEmail: (value: string) => void;\n}\n\nconst SignIn: React.FC<SignInProps> = ({\n    email,\n    emailError,\n    emailPlaceholder,\n    password,\n    passwordError,\n    passwordPlaceholder,\n    isLoading,\n    onSignUp,\n    image,\n    labelSignIn,\n    labelSignUp,\n    emailLabel,\n    passwordLabel,\n    emailFocused,\n    passwordFocused,\n    onForgotPassword,\n    forgotPasswordLabel,\n    refreshError,\n    onSignIn,\n    isFormValid,\n    handleChangeFocusField,\n    changePassword,\n    changeEmail,\n}) => {\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n    const history = useHistory();\n    const { formatMessage } = useIntl();\n\n    const isValidForm = React.useCallback(() => {\n        const isEmailValid = email.match(EMAIL_REGEX);\n\n        return email && isEmailValid && password;\n    }, [email, password]);\n\n    const handleChangeEmail = React.useCallback(\n        (value: string) => {\n            changeEmail(value);\n        },\n        [changeEmail]\n    );\n\n    const handleChangePassword = React.useCallback(\n        (value: string) => {\n            changePassword(value);\n        },\n        [changePassword]\n    );\n\n    const handleFieldFocus = React.useCallback(\n        (field: string) => {\n            handleChangeFocusField(field);\n        },\n        [handleChangeFocusField]\n    );\n\n    const handleSubmitForm = React.useCallback(() => {\n        refreshError();\n        onSignIn();\n    }, [onSignIn, refreshError]);\n\n    const handleValidateForm = React.useCallback(() => {\n        isFormValid();\n    }, [isFormValid]);\n\n    const handleClick = React.useCallback(\n        (e?: MouseEvent) => {\n            if (e) {\n                e.preventDefault();\n            }\n            if (!isValidForm()) {\n                handleValidateForm();\n            } else {\n                handleSubmitForm();\n            }\n        },\n        [handleSubmitForm, handleValidateForm, isValidForm]\n    );\n\n    const handleEnterPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n\n                handleClick();\n            }\n        },\n        [handleClick]\n    );\n\n    const renderForgotButton = React.useMemo(\n        () => (\n            <div className=\"cr-sign-in-form__bottom-section\">\n                <div className=\"cr-sign-in-form__bottom-section-password\" onClick={() => onForgotPassword(email)}>\n                    {forgotPasswordLabel || 'Forgot your password?'}\n                </div>\n            </div>\n        ),\n        [forgotPasswordLabel, onForgotPassword, email]\n    );\n\n    const renderRegister = React.useMemo(\n        () => (\n            <div className=\"pg-sign-in-screen__register\">\n                <span>\n                    {formatMessage({ id: 'page.header.signIN.noAccountYet' })}\n                    <span onClick={() => history.push('/signup')} className=\"pg-sign-in-screen__register-button\">\n                        {formatMessage({ id: 'page.body.landing.header.button3' })}\n                    </span>\n                </span>\n            </div>\n        ),\n        [formatMessage, history]\n    );\n\n    return (\n        <form>\n            <div className=\"cr-sign-in-form\" onKeyPress={handleEnterPress}>\n                {!isMobileDevice && (\n                    <div className=\"cr-sign-in-form__options-group\">\n                        <div className=\"cr-sign-in-form__option\">\n                            <div className=\"cr-sign-in-form__option-inner __selected\">\n                                {labelSignIn ? labelSignIn : 'Sign In'}\n                            </div>\n                        </div>\n                        <div className=\"cr-sign-in-form__option\">\n                            <div\n                                className=\"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\"\n                                onClick={onSignUp}>\n                                {labelSignUp ? labelSignUp : 'Sign Up'}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className=\"cr-sign-in-form__form-content\">\n                    {image ? (\n                        <h1 className=\"cr-sign-in-form__title\">\n                            <img className=\"cr-sign-in-form__image\" src={image} alt=\"logo\" />\n                        </h1>\n                    ) : null}\n                    <div\n                        className={cr('cr-sign-in-form__group', {\n                            'cr-sign-in-form__group--focused': emailFocused,\n                        })}>\n                        <CustomInput\n                            type=\"email\"\n                            label={emailLabel || 'Email'}\n                            placeholder={emailPlaceholder}\n                            defaultLabel=\"Email\"\n                            handleChangeInput={handleChangeEmail}\n                            inputValue={email}\n                            handleFocusInput={() => handleFieldFocus('email')}\n                            classNameLabel=\"cr-sign-in-form__label\"\n                            autoFocus={!isMobileDevice}\n                        />\n                        {emailError && <div className={'cr-sign-in-form__error'}>{emailError}</div>}\n                    </div>\n                    <div\n                        className={cr('cr-sign-in-form__group', {\n                            'cr-sign-in-form__group--focused': passwordFocused,\n                        })}>\n                        <CustomInput\n                            type=\"password\"\n                            label={passwordLabel || 'Password'}\n                            placeholder={passwordPlaceholder}\n                            defaultLabel=\"Password\"\n                            handleChangeInput={handleChangePassword}\n                            inputValue={password}\n                            handleFocusInput={() => handleFieldFocus('password')}\n                            classNameLabel=\"cr-sign-in-form__label\"\n                            autoFocus={false}\n                        />\n                        {passwordError && <div className={'cr-sign-in-form__error'}>{passwordError}</div>}\n                    </div>\n                    {isMobileDevice && renderForgotButton}\n                    <div className=\"cr-sign-in-form__button-wrapper\">\n                        <Button\n                            block={true}\n                            type=\"button\"\n                            disabled={isLoading || !email.match(EMAIL_REGEX) || !password}\n                            onClick={handleClick as any}\n                            size=\"lg\"\n                            variant=\"primary\">\n                            {isLoading ? 'Loading...' : labelSignIn ? labelSignIn : 'Sign in'}\n                        </Button>\n                    </div>\n                    {!isMobileDevice && renderForgotButton}\n                    {isMobileDevice && renderRegister}\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport const SignInComponent = React.memo(SignIn);\n"]},"metadata":{},"sourceType":"module"}