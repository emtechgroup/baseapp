{"ast":null,"code":"import { languages } from '../../../api/config';\nimport { CHANGE_LANGUAGE } from './constants';\nvar defaultLanguage = {\n  code: languages[0]\n};\nvar currentLang = localStorage.getItem('lang_code') || defaultLanguage.code;\nexport var initialChangeLanguageState = {\n  lang: currentLang\n};\nexport var changeLanguageReducer = function changeLanguageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialChangeLanguageState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LANGUAGE:\n      localStorage.setItem('lang_code', action.payload);\n      return {\n        lang: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/i18n/reducer.ts"],"names":["languages","CHANGE_LANGUAGE","defaultLanguage","code","currentLang","localStorage","getItem","initialChangeLanguageState","lang","changeLanguageReducer","state","action","type","setItem","payload"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAMA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAEH,SAAS,CAAC,CAAD;AADK,CAAxB;AAIA,IAAMI,WAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqCJ,eAAe,CAACC,IAAjF;AAEA,OAAO,IAAMI,0BAAyC,GAAG;AACrDC,EAAAA,IAAI,EAAEJ;AAD+C,CAAlD;AAIP,OAAO,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAsE;AAAA,MAArEC,KAAqE,uEAA7DH,0BAA6D;AAAA,MAAjCI,MAAiC;;AACvG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,eAAL;AACII,MAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCF,MAAM,CAACG,OAAzC;AAEA,aAAO;AACHN,QAAAA,IAAI,EAAEG,MAAM,CAACG;AADV,OAAP;;AAGJ;AACI,aAAOJ,KAAP;AARR;AAUH,CAXM","sourcesContent":["import { languages } from '../../../api/config';\nimport { ChangeLanguageAction } from './actions';\nimport { CHANGE_LANGUAGE } from './constants';\n\nexport interface LanguageState {\n    lang: string;\n}\n\nconst defaultLanguage = {\n    code: languages[0],\n};\n\nconst currentLang: string = localStorage.getItem('lang_code') || defaultLanguage.code;\n\nexport const initialChangeLanguageState: LanguageState = {\n    lang: currentLang,\n};\n\nexport const changeLanguageReducer = (state = initialChangeLanguageState, action: ChangeLanguageAction) => {\n    switch (action.type) {\n        case CHANGE_LANGUAGE:\n            localStorage.setItem('lang_code', action.payload);\n\n            return {\n                lang: action.payload,\n             };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}