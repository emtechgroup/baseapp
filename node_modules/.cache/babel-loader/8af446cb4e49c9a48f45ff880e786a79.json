{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/routes/Layout/index.tsx\";\n\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { minutesUntilAutoLogout, sessionCheckInterval, showLanding } from '../../api';\nimport { ExpiredSessionModal } from '../../components';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport { ChangeForgottenPasswordMobileScreen, ConfirmMobileScreen, EmailVerificationMobileScreen, ForgotPasswordMobileScreen, LandingScreenMobile, OrdersMobileScreen, ProfileAccountActivityMobileScreen, ProfileApiKeysMobileScreen, ProfileAuthMobileScreen, ProfileChangePasswordMobileScreen, ProfileLanguageMobileScreen, ProfileMobileScreen, ProfileThemeMobileScreen, ProfileVerificationMobileScreen, SelectedWalletMobileScreen, SignInMobileScreen, SignUpMobileScreen, TradingScreenMobile, WalletDeposit, WalletsMobileScreen, WalletWithdraw } from '../../mobile/screens';\nimport { configsFetch, logoutFetch, selectConfigsLoading, selectConfigsSuccess, selectCurrentColorTheme, selectCurrentMarket, selectMobileDeviceState, selectPlatformAccessStatus, selectUserFetching, selectUserInfo, selectUserLoggedIn, toggleChartRebuild as _toggleChartRebuild, userFetch as _userFetch, walletsReset as _walletsReset } from '../../modules';\nimport { customizationFetch, selectCustomizationData } from '../../modules/public/customization';\nimport { ChangeForgottenPasswordScreen, ConfirmScreen, EmailVerificationScreen, ForgotPasswordScreen, HistoryScreen, LandingScreen, MagicLink, MaintenanceScreen, OrdersTabScreen, ProfileScreen, ProfileTwoFactorAuthScreen, RestrictedScreen, SignInScreen, SignUpScreen, TradingScreen, VerificationScreen, WalletsScreen } from '../../screens';\n\nvar renderLoader = function renderLoader() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-loader-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar STORE_KEY = 'lastAction'; //tslint:disable-next-line no-any\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var CustomComponent = _ref.component,\n      loading = _ref.loading,\n      isLogged = _ref.isLogged,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"loading\", \"isLogged\"]);\n\n  if (loading) {\n    return renderLoader();\n  }\n\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return /*#__PURE__*/React.createElement(CustomComponent, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 46\n      }\n    }));\n  };\n\n  if (isLogged) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: renderCustomerComponent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: '/signin',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }));\n}; //tslint:disable-next-line no-any\n\n\nvar PublicRoute = function PublicRoute(_ref2) {\n  var CustomComponent = _ref2.component,\n      loading = _ref2.loading,\n      isLogged = _ref2.isLogged,\n      rest = _objectWithoutProperties(_ref2, [\"component\", \"loading\", \"isLogged\"]);\n\n  if (loading) {\n    return renderLoader();\n  }\n\n  if (isLogged) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: '/wallets',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }));\n  }\n\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return /*#__PURE__*/React.createElement(CustomComponent, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 46\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: renderCustomerComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }\n  }));\n};\n\nvar LayoutComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(LayoutComponent, _React$Component);\n\n  var _super = _createSuper(LayoutComponent);\n\n  function LayoutComponent(props) {\n    var _this2;\n\n    _classCallCheck(this, LayoutComponent);\n\n    _this2 = _super.call(this, props);\n    _this2.timer = void 0;\n    _this2.walletsFetchInterval = void 0;\n\n    _this2.translate = function (key) {\n      return _this2.props.intl.formatMessage({\n        id: key\n      });\n    };\n\n    _this2.getLastAction = function () {\n      if (localStorage.getItem(STORE_KEY) !== null) {\n        return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n      }\n\n      return 0;\n    };\n\n    _this2.setLastAction = function (lastAction) {\n      localStorage.setItem(STORE_KEY, lastAction.toString());\n    };\n\n    _this2.initListener = function () {\n      _this2.reset();\n\n      var _iterator = _createForOfIteratorHelper(LayoutComponent.eventsListen),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var type = _step.value;\n          document.body.addEventListener(type, _this2.reset);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    _this2.reset = function () {\n      _this2.setLastAction(Date.now());\n    };\n\n    _this2.initInterval = function () {\n      _this2.timer = setInterval(function () {\n        _this2.check();\n      }, parseFloat(sessionCheckInterval()));\n    };\n\n    _this2.check = function () {\n      var user = _this2.props.user;\n      var now = Date.now();\n      var timeleft = _this2.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n      var diff = timeleft - now;\n      var isTimeout = diff < 0;\n\n      if (isTimeout && user.email) {\n        if (user.state === 'active') {\n          _this2.handleChangeExpSessionModalState();\n        }\n\n        _this2.props.logout();\n      }\n    };\n\n    _this2.handleSubmitExpSessionModal = function () {\n      var history = _this2.props.history;\n\n      _this2.handleChangeExpSessionModalState();\n\n      history.push('/signin');\n    };\n\n    _this2.handleRenderExpiredSessionModal = function () {\n      return /*#__PURE__*/React.createElement(ExpiredSessionModal, {\n        title: _this2.translate('page.modal.expired.title'),\n        buttonLabel: _this2.translate('page.modal.expired.submit'),\n        handleChangeExpSessionModalState: _this2.handleChangeExpSessionModalState,\n        handleSubmitExpSessionModal: _this2.handleSubmitExpSessionModal,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this2.handleChangeExpSessionModalState = function () {\n      _this2.setState({\n        isShownExpSessionModal: !_this2.state.isShownExpSessionModal\n      });\n    };\n\n    _this2.handleApplyCustomization = function (customization) {\n      var rootElement = document.documentElement;\n      var parsedSettings = customization && customization.settings ? JSON.parse(customization.settings) : null;\n\n      if (rootElement && parsedSettings && parsedSettings.theme_colors) {\n        parsedSettings.theme_colors.reduce(function (result, item) {\n          var newItemColor = item.value;\n\n          if (newItemColor) {\n            rootElement.style.setProperty(item.key, item.value);\n          }\n\n          return result;\n        }, {});\n\n        _this2.props.toggleChartRebuild();\n      }\n    };\n\n    _this2.initListener();\n\n    _this2.state = {\n      isShownExpSessionModal: false\n    };\n    return _this2;\n  }\n\n  _createClass(LayoutComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchConfigs();\n\n      if (!(this.props.location.pathname.includes('/magic-link') || this.props.location.pathname.includes('/404') || this.props.location.pathname.includes('/500'))) {\n        switch (this.props.platformAccessStatus) {\n          case 'restricted':\n            this.props.history.replace('/404');\n            break;\n\n          case 'maintenance':\n            this.props.history.replace('/500');\n            break;\n\n          default:\n            var token = localStorage.getItem('csrfToken');\n\n            if (token) {\n              this.props.userFetch();\n              this.initInterval();\n              this.check();\n            }\n\n        }\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!(nextProps.location.pathname.includes('/magic-link') || nextProps.location.pathname.includes('/404') || nextProps.location.pathname.includes('/500')) || this.props.platformAccessStatus !== nextProps.platformAccessStatus) {\n        switch (nextProps.platformAccessStatus) {\n          case 'restricted':\n            this.props.history.replace('/404');\n            break;\n\n          case 'maintenance':\n            this.props.history.replace('/500');\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (!this.props.user.email && nextProps.user.email) {\n        this.props.userFetch();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          customization = _this$props.customization,\n          isLoggedIn = _this$props.isLoggedIn,\n          userLoading = _this$props.userLoading;\n\n      if (!isLoggedIn && prevProps.isLoggedIn && !userLoading) {\n        this.props.walletsReset();\n\n        if (!this.props.location.pathname.includes('/trading')) {\n          this.props.history.push('/trading/');\n        }\n      }\n\n      if (customization && customization !== prevProps.customization) {\n        this.handleApplyCustomization(customization);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _iterator2 = _createForOfIteratorHelper(LayoutComponent.eventsListen),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var type = _step2.value;\n          document.body.removeEventListener(type, this.reset);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      clearInterval(this.timer);\n      clearInterval(this.walletsFetchInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          colorTheme = _this$props2.colorTheme,\n          isLoggedIn = _this$props2.isLoggedIn,\n          isMobileDevice = _this$props2.isMobileDevice,\n          userLoading = _this$props2.userLoading,\n          location = _this$props2.location,\n          configsLoading = _this$props2.configsLoading,\n          platformAccessStatus = _this$props2.platformAccessStatus;\n      var isShownExpSessionModal = this.state.isShownExpSessionModal;\n      var tradingCls = location.pathname.includes('/trading') ? 'trading-layout' : '';\n      toggleColorTheme(colorTheme);\n\n      if (configsLoading && !platformAccessStatus.length) {\n        return renderLoader();\n      }\n\n      if (isMobileDevice) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'container-fluid pg-layout pg-layout--mobile',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/signin\",\n          component: SignInMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/signup\",\n          component: SignUpMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/forgot_password\",\n          component: ForgotPasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/accounts/password_reset\",\n          component: ChangeForgottenPasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/accounts/confirmation\",\n          component: VerificationScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/email-verification\",\n          component: EmailVerificationMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/history\",\n          component: SelectedWalletMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/deposit\",\n          component: WalletDeposit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/withdraw\",\n          component: WalletWithdraw,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/confirm\",\n          component: ConfirmMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets\",\n          component: WalletsMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/orders\",\n          component: OrdersMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/account-activity\",\n          component: ProfileAccountActivityMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/api-keys\",\n          component: ProfileApiKeysMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/language\",\n          component: ProfileLanguageMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/2fa\",\n          component: ProfileAuthMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/change-password\",\n          component: ProfileChangePasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/verification\",\n          component: ProfileVerificationMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/theme\",\n          component: ProfileThemeMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile\",\n          component: ProfileMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/trading/:market?\",\n          component: TradingScreenMobile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }\n        }), showLanding() && /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: LandingScreenMobile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 43\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          path: \"**\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/trading/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 42\n          }\n        }))), isLoggedIn && /*#__PURE__*/React.createElement(WalletsFetch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 36\n          }\n        }), isShownExpSessionModal && this.handleRenderExpiredSessionModal());\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid pg-layout \".concat(tradingCls),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/magic-link\",\n        component: MagicLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signin\",\n        component: SignInScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/confirmation\",\n        component: VerificationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signup\",\n        component: SignUpScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/forgot_password\",\n        component: ForgotPasswordScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/password_reset\",\n        component: ChangeForgottenPasswordScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/email-verification\",\n        component: EmailVerificationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/404\",\n        component: RestrictedScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/500\",\n        component: MaintenanceScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/trading/:market?\",\n        component: TradingScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }), showLanding() && /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 39\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/orders\",\n        component: OrdersTabScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/history\",\n        component: HistoryScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/confirm\",\n        component: ConfirmScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/profile\",\n        component: ProfileScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/wallets\",\n        component: WalletsScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/security/2fa\",\n        component: ProfileTwoFactorAuthScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"**\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/trading/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 38\n        }\n      }))), isLoggedIn && /*#__PURE__*/React.createElement(WalletsFetch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 32\n        }\n      }), isShownExpSessionModal && this.handleRenderExpiredSessionModal());\n    }\n  }]);\n\n  return LayoutComponent;\n}(React.Component);\n\nLayoutComponent.eventsListen = ['click', 'keydown', 'scroll', 'resize', 'mousemove', 'TabSelect', 'TabHide'];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    configsLoading: selectConfigsLoading(state),\n    configsSuccess: selectConfigsSuccess(state),\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state),\n    customization: selectCustomizationData(state),\n    user: selectUserInfo(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    userLoading: selectUserFetching(state),\n    platformAccessStatus: selectPlatformAccessStatus(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchConfigs: function fetchConfigs() {\n      return dispatch(configsFetch());\n    },\n    fetchCustomization: function fetchCustomization() {\n      return dispatch(customizationFetch());\n    },\n    logout: function logout() {\n      return dispatch(logoutFetch());\n    },\n    toggleChartRebuild: function toggleChartRebuild() {\n      return dispatch(_toggleChartRebuild());\n    },\n    userFetch: function userFetch() {\n      return dispatch(_userFetch());\n    },\n    walletsReset: function walletsReset() {\n      return dispatch(_walletsReset());\n    }\n  };\n};\n\nexport var Layout = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(LayoutComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/routes/Layout/index.tsx"],"names":["React","Spinner","injectIntl","connect","Route","Switch","Redirect","withRouter","compose","minutesUntilAutoLogout","sessionCheckInterval","showLanding","ExpiredSessionModal","WalletsFetch","toggleColorTheme","ChangeForgottenPasswordMobileScreen","ConfirmMobileScreen","EmailVerificationMobileScreen","ForgotPasswordMobileScreen","LandingScreenMobile","OrdersMobileScreen","ProfileAccountActivityMobileScreen","ProfileApiKeysMobileScreen","ProfileAuthMobileScreen","ProfileChangePasswordMobileScreen","ProfileLanguageMobileScreen","ProfileMobileScreen","ProfileThemeMobileScreen","ProfileVerificationMobileScreen","SelectedWalletMobileScreen","SignInMobileScreen","SignUpMobileScreen","TradingScreenMobile","WalletDeposit","WalletsMobileScreen","WalletWithdraw","configsFetch","logoutFetch","selectConfigsLoading","selectConfigsSuccess","selectCurrentColorTheme","selectCurrentMarket","selectMobileDeviceState","selectPlatformAccessStatus","selectUserFetching","selectUserInfo","selectUserLoggedIn","toggleChartRebuild","userFetch","walletsReset","customizationFetch","selectCustomizationData","ChangeForgottenPasswordScreen","ConfirmScreen","EmailVerificationScreen","ForgotPasswordScreen","HistoryScreen","LandingScreen","MagicLink","MaintenanceScreen","OrdersTabScreen","ProfileScreen","ProfileTwoFactorAuthScreen","RestrictedScreen","SignInScreen","SignUpScreen","TradingScreen","VerificationScreen","WalletsScreen","renderLoader","STORE_KEY","PrivateRoute","CustomComponent","component","loading","isLogged","rest","renderCustomerComponent","props","PublicRoute","LayoutComponent","timer","walletsFetchInterval","translate","key","intl","formatMessage","id","getLastAction","localStorage","getItem","parseInt","setLastAction","lastAction","setItem","toString","initListener","reset","eventsListen","type","document","body","addEventListener","Date","now","initInterval","setInterval","check","parseFloat","user","timeleft","diff","isTimeout","email","state","handleChangeExpSessionModalState","logout","handleSubmitExpSessionModal","history","push","handleRenderExpiredSessionModal","setState","isShownExpSessionModal","handleApplyCustomization","customization","rootElement","documentElement","parsedSettings","settings","JSON","parse","theme_colors","reduce","result","item","newItemColor","value","style","setProperty","fetchConfigs","location","pathname","includes","platformAccessStatus","replace","token","nextProps","prevProps","isLoggedIn","userLoading","removeEventListener","clearInterval","colorTheme","isMobileDevice","configsLoading","tradingCls","length","Component","mapStateToProps","configsSuccess","currentMarket","mapDispatchToProps","dispatch","fetchCustomization","Layout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { Route, RouterProps, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { minutesUntilAutoLogout, sessionCheckInterval, showLanding } from '../../api';\nimport { ExpiredSessionModal } from '../../components';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport {\n    ChangeForgottenPasswordMobileScreen,\n    ConfirmMobileScreen,\n    EmailVerificationMobileScreen,\n    ForgotPasswordMobileScreen,\n    LandingScreenMobile,\n    OrdersMobileScreen,\n    ProfileAccountActivityMobileScreen,\n    ProfileApiKeysMobileScreen,\n    ProfileAuthMobileScreen,\n    ProfileChangePasswordMobileScreen,\n    ProfileLanguageMobileScreen,\n    ProfileMobileScreen,\n    ProfileThemeMobileScreen,\n    ProfileVerificationMobileScreen,\n    SelectedWalletMobileScreen,\n    SignInMobileScreen,\n    SignUpMobileScreen,\n    TradingScreenMobile,\n    WalletDeposit,\n    WalletsMobileScreen,\n    WalletWithdraw,\n} from '../../mobile/screens';\nimport {\n    configsFetch,\n    logoutFetch,\n    Market,\n    RootState,\n    selectConfigsLoading,\n    selectConfigsSuccess,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectMobileDeviceState,\n    selectPlatformAccessStatus,\n    selectUserFetching,\n    selectUserInfo,\n    selectUserLoggedIn,\n    toggleChartRebuild,\n    User,\n    userFetch,\n    walletsReset,\n} from '../../modules';\nimport {\n    CustomizationDataInterface,\n    customizationFetch,\n    selectCustomizationData,\n} from '../../modules/public/customization';\nimport {\n    ChangeForgottenPasswordScreen,\n    ConfirmScreen,\n    EmailVerificationScreen,\n    ForgotPasswordScreen,\n    HistoryScreen,\n    LandingScreen,\n    MagicLink,\n    MaintenanceScreen,\n    OrdersTabScreen,\n    ProfileScreen,\n    ProfileTwoFactorAuthScreen,\n    RestrictedScreen,\n    SignInScreen,\n    SignUpScreen,\n    TradingScreen,\n    VerificationScreen,\n    WalletsScreen,\n} from '../../screens';\n\ninterface ReduxProps {\n    colorTheme: string;\n    currentMarket?: Market;\n    customization?: CustomizationDataInterface;\n    user: User;\n    isLoggedIn: boolean;\n    isMobileDevice: boolean;\n    userLoading?: boolean;\n    platformAccessStatus: string;\n    configsLoading: boolean;\n    configsSuccess: boolean;\n}\n\ninterface DispatchProps {\n    fetchConfigs: typeof configsFetch;\n    fetchCustomization: typeof customizationFetch;\n    logout: typeof logoutFetch;\n    userFetch: typeof userFetch;\n    walletsReset: typeof walletsReset;\n}\n\ninterface LocationProps extends RouterProps {\n    location: {\n        pathname: string;\n    };\n}\n\ninterface LayoutState {\n    isShownExpSessionModal: boolean;\n}\n\ninterface OwnProps {\n    toggleChartRebuild: typeof toggleChartRebuild;\n}\n\nexport type LayoutProps = ReduxProps & DispatchProps & LocationProps & IntlProps & OwnProps;\n\nconst renderLoader = () => (\n    <div className=\"pg-loader-container\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n);\n\nconst STORE_KEY = 'lastAction';\n\n//tslint:disable-next-line no-any\nconst PrivateRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n\n    if (isLogged) {\n        return <Route {...rest} render={renderCustomerComponent} />;\n    }\n\n    return (\n        <Route {...rest}>\n            <Redirect to={'/signin'} />\n        </Route>\n    );\n};\n\n//tslint:disable-next-line no-any\nconst PublicRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n\n    if (isLogged) {\n        return <Route {...rest}><Redirect to={'/wallets'} /></Route>;\n    }\n\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n\n    return <Route {...rest} render={renderCustomerComponent} />;\n};\n\nclass LayoutComponent extends React.Component<LayoutProps, LayoutState> {\n    public static eventsListen = [\n        'click',\n        'keydown',\n        'scroll',\n        'resize',\n        'mousemove',\n        'TabSelect',\n        'TabHide',\n    ];\n\n    public timer;\n    public walletsFetchInterval;\n\n    constructor(props: LayoutProps) {\n        super(props);\n        this.initListener();\n\n        this.state = {\n            isShownExpSessionModal: false,\n        };\n    }\n\n    public componentDidMount() {\n        this.props.fetchConfigs();\n        if (\n            !(this.props.location.pathname.includes('/magic-link')\n            || this.props.location.pathname.includes('/404')\n            || this.props.location.pathname.includes('/500'))\n        ) {\n            switch (this.props.platformAccessStatus) {\n                case 'restricted':\n                    this.props.history.replace('/404');\n                    break;\n                case 'maintenance':\n                    this.props.history.replace('/500');\n                    break;\n                default:\n                    const token = localStorage.getItem('csrfToken');\n\n                    if (token) {\n                        this.props.userFetch();\n                        this.initInterval();\n                        this.check();\n                    }\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: LayoutProps) {\n        if (\n            !(nextProps.location.pathname.includes('/magic-link')\n            || nextProps.location.pathname.includes('/404')\n            || nextProps.location.pathname.includes('/500'))\n            || this.props.platformAccessStatus !== nextProps.platformAccessStatus\n        ) {\n            switch (nextProps.platformAccessStatus) {\n                case 'restricted':\n                    this.props.history.replace('/404');\n                    break;\n                case 'maintenance':\n                    this.props.history.replace('/500');\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (!this.props.user.email && nextProps.user.email) {\n            this.props.userFetch();\n        }\n    }\n\n    public componentDidUpdate(prevProps: LayoutProps) {\n        const { customization, isLoggedIn, userLoading } = this.props;\n\n        if (!isLoggedIn && prevProps.isLoggedIn && !userLoading) {\n            this.props.walletsReset();\n\n            if (!this.props.location.pathname.includes('/trading')) {\n                this.props.history.push('/trading/');\n            }\n        }\n\n        if (customization && customization !== prevProps.customization) {\n            this.handleApplyCustomization(customization);\n        }\n    }\n\n    public componentWillUnmount() {\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.removeEventListener(type, this.reset);\n        }\n        clearInterval(this.timer);\n        clearInterval(this.walletsFetchInterval);\n    }\n\n    public translate = (key: string) => this.props.intl.formatMessage({id: key});\n\n    public render() {\n        const {\n            colorTheme,\n            isLoggedIn,\n            isMobileDevice,\n            userLoading,\n            location,\n            configsLoading,\n            platformAccessStatus,\n        } = this.props;\n        const { isShownExpSessionModal } = this.state;\n        const tradingCls = location.pathname.includes('/trading') ? 'trading-layout' : '';\n        toggleColorTheme(colorTheme);\n\n        if (configsLoading && !platformAccessStatus.length) {\n            return renderLoader();\n        }\n\n        if (isMobileDevice) {\n            return (\n                <div className={'container-fluid pg-layout pg-layout--mobile'}>\n                    <Switch>\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/history\" component={SelectedWalletMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/deposit\" component={WalletDeposit} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/withdraw\" component={WalletWithdraw} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/account-activity\" component={ProfileAccountActivityMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/api-keys\" component={ProfileApiKeysMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/language\" component={ProfileLanguageMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/2fa\" component={ProfileAuthMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/change-password\" component={ProfileChangePasswordMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/verification\" component={ProfileVerificationMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/theme\" component={ProfileThemeMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileMobileScreen} />\n                        <Route exact={true} path=\"/trading/:market?\" component={TradingScreenMobile} />\n                        {showLanding() && <Route exact={true} path=\"/\" component={LandingScreenMobile} />}\n                        <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n                    </Switch>\n                    {isLoggedIn && <WalletsFetch />}\n                    {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n                </div>\n            );\n        }\n\n        return (\n            <div className={`container-fluid pg-layout ${tradingCls}`}>\n                <Switch>\n                    <Route exact={true} path=\"/magic-link\" component={MagicLink} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationScreen} />\n                    <Route path=\"/404\" component={RestrictedScreen} />\n                    <Route path=\"/500\" component={MaintenanceScreen} />\n                    <Route exact={true} path=\"/trading/:market?\" component={TradingScreen} />\n                    {showLanding() && <Route exact={true} path=\"/\" component={LandingScreen} />}\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersTabScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/history\" component={HistoryScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/security/2fa\" component={ProfileTwoFactorAuthScreen} />\n                    <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n                </Switch>\n                {isLoggedIn && <WalletsFetch/>}\n                {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n            </div>\n        );\n    }\n\n    private getLastAction = () => {\n        if (localStorage.getItem(STORE_KEY) !== null) {\n            return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n        }\n\n        return 0;\n    };\n\n    private setLastAction = (lastAction: number) => {\n        localStorage.setItem(STORE_KEY, lastAction.toString());\n    };\n\n    private initListener = () => {\n        this.reset();\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.addEventListener(type, this.reset);\n        }\n    };\n\n    private reset = () => {\n        this.setLastAction(Date.now());\n    };\n\n    private initInterval = () => {\n        this.timer = setInterval(() => {\n            this.check();\n        }, parseFloat(sessionCheckInterval()));\n    };\n\n    private check = () => {\n        const { user } = this.props;\n        const now = Date.now();\n        const timeleft = this.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n        const diff = timeleft - now;\n        const isTimeout = diff < 0;\n        if (isTimeout && user.email) {\n            if (user.state === 'active') {\n                this.handleChangeExpSessionModalState();\n            }\n\n            this.props.logout();\n        }\n    };\n\n    private handleSubmitExpSessionModal = () => {\n        const { history } = this.props;\n        this.handleChangeExpSessionModalState();\n        history.push('/signin');\n    };\n\n    private handleRenderExpiredSessionModal = () => (\n        <ExpiredSessionModal\n            title={this.translate('page.modal.expired.title')}\n            buttonLabel={this.translate('page.modal.expired.submit')}\n            handleChangeExpSessionModalState={this.handleChangeExpSessionModalState}\n            handleSubmitExpSessionModal={this.handleSubmitExpSessionModal}\n        />\n    );\n\n    private handleChangeExpSessionModalState = () => {\n        this.setState({\n            isShownExpSessionModal: !this.state.isShownExpSessionModal,\n        });\n    };\n\n    private handleApplyCustomization = (customization: CustomizationDataInterface) => {\n        const rootElement = document.documentElement;\n        const parsedSettings = customization && customization.settings ? JSON.parse(customization.settings) : null;\n\n        if (rootElement && parsedSettings && parsedSettings.theme_colors) {\n            parsedSettings.theme_colors.reduce((result, item) => {\n                const newItemColor = item.value;\n\n                if (newItemColor) {\n                    rootElement.style.setProperty(item.key, item.value);\n                }\n\n                return result;\n            }, {});\n\n            this.props.toggleChartRebuild();\n        }\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    configsLoading: selectConfigsLoading(state),\n    configsSuccess: selectConfigsSuccess(state),\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state),\n    customization: selectCustomizationData(state),\n    user: selectUserInfo(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    userLoading: selectUserFetching(state),\n    platformAccessStatus: selectPlatformAccessStatus(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    fetchConfigs: () => dispatch(configsFetch()),\n    fetchCustomization: () => dispatch(customizationFetch()),\n    logout: () => dispatch(logoutFetch()),\n    toggleChartRebuild: () => dispatch(toggleChartRebuild()),\n    userFetch: () => dispatch(userFetch()),\n    walletsReset: () => dispatch(walletsReset()),\n});\n\nexport const Layout = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(LayoutComponent) as any;\n"]},"metadata":{},"sourceType":"module"}