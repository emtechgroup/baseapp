{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/screens/VerificationScreen/index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport { languages } from '../../api';\nimport { changeLanguage as _changeLanguage, selectEmailVerified, verificationFetch } from '../../modules';\nexport var extractToken = function extractToken(props) {\n  return new URLSearchParams(props.location.search).get('confirmation_token');\n};\nexport var extractLang = function extractLang(props) {\n  return new URLSearchParams(props.location.search).get('lang');\n};\n\nvar Verification = /*#__PURE__*/function (_React$Component) {\n  _inherits(Verification, _React$Component);\n\n  var _super = _createSuper(Verification);\n\n  function Verification() {\n    _classCallCheck(this, Verification);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Verification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = extractToken(this.props);\n      var lang = extractLang(this.props);\n\n      if (token) {\n        this.props.verification({\n          token\n        });\n      }\n\n      if (lang && languages.includes(lang.toLowerCase())) {\n        this.props.changeLanguage(lang.toLowerCase());\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/signin',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Verification;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isEmailVerified: selectEmailVerified(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    verification: function verification(data) {\n      return dispatch(verificationFetch(data));\n    },\n    changeLanguage: function changeLanguage(lang) {\n      return dispatch(_changeLanguage(lang));\n    }\n  };\n};\n\nexport var VerificationScreen = compose(injectIntl, connect(mapStateToProps, mapDispatchToProps))(Verification);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/screens/VerificationScreen/index.tsx"],"names":["React","injectIntl","connect","Redirect","compose","languages","changeLanguage","selectEmailVerified","verificationFetch","extractToken","props","URLSearchParams","location","search","get","extractLang","Verification","token","lang","verification","includes","toLowerCase","Component","mapStateToProps","state","isEmailVerified","mapDispatchToProps","dispatch","data","VerificationScreen"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SACIC,OADJ,QAIO,aAJP;AAKA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,SAAT,QAA0B,WAA1B;AACA,SACIC,cAAc,IAAdA,eADJ,EAGIC,mBAHJ,EAIIC,iBAJJ,QAKO,eALP;AA0BA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAAwB,IAAIC,eAAJ,CAAoBD,KAAK,CAACE,QAAN,CAAeC,MAAnC,EAA2CC,GAA3C,CAA+C,oBAA/C,CAAxB;AAAA,CAArB;AACP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,KAAD;AAAA,SAAwB,IAAIC,eAAJ,CAAoBD,KAAK,CAACE,QAAN,CAAeC,MAAnC,EAA2CC,GAA3C,CAA+C,MAA/C,CAAxB;AAAA,CAApB;;IAEDE,Y;;;;;;;;;;;;;wCACyB;AACvB,UAAMC,KAAK,GAAGR,YAAY,CAAC,KAAKC,KAAN,CAA1B;AACA,UAAMQ,IAAI,GAAGH,WAAW,CAAC,KAAKL,KAAN,CAAxB;;AAEA,UAAIO,KAAJ,EAAW;AACP,aAAKP,KAAL,CAAWS,YAAX,CAAwB;AAAEF,UAAAA;AAAF,SAAxB;AACH;;AAED,UAAIC,IAAI,IAAIb,SAAS,CAACe,QAAV,CAAmBF,IAAI,CAACG,WAAL,EAAnB,CAAZ,EAAoD;AAChD,aAAKX,KAAL,CAAWJ,cAAX,CAA0BY,IAAI,CAACG,WAAL,EAA1B;AACH;AACJ;;;6BAEe;AACZ,0BACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAlBsBrB,KAAK,CAACsB,S;;AAqBjC,IAAMC,eAA2D,GAAG,SAA9DA,eAA8D,CAAAC,KAAK;AAAA,SAAK;AAC1EC,IAAAA,eAAe,EAAElB,mBAAmB,CAACiB,KAAD;AADsC,GAAL;AAAA,CAAzE;;AAIA,IAAME,kBAAiE,GACnE,SADEA,kBACF,CAAAC,QAAQ;AAAA,SAAK;AACTR,IAAAA,YAAY,EAAE,sBAAAS,IAAI;AAAA,aAAID,QAAQ,CAACnB,iBAAiB,CAACoB,IAAD,CAAlB,CAAZ;AAAA,KADT;AAETtB,IAAAA,cAAc,EAAE,wBAAAY,IAAI;AAAA,aAAIS,QAAQ,CAACrB,eAAc,CAACY,IAAD,CAAf,CAAZ;AAAA;AAFX,GAAL;AAAA,CADZ;;AAMA,OAAO,IAAMW,kBAAkB,GAAGzB,OAAO,CACrCH,UADqC,EAErCC,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAF8B,CAAP,CAGhCV,YAHgC,CAA3B","sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n    MapStateToProps,\n} from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { languages } from '../../api';\nimport {\n    changeLanguage,\n    RootState,\n    selectEmailVerified,\n    verificationFetch,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface DispatchProps {\n    verification: typeof verificationFetch;\n    changeLanguage: typeof changeLanguage;\n}\n\ninterface ReduxProps {\n    isEmailVerified?: boolean;\n    error?: CommonError;\n}\n\nexport interface RouterProps {\n    location: {\n        search: string;\n    };\n}\n\ntype Props = DispatchProps & RouterProps & ReduxProps;\n\nexport const extractToken = (props: RouterProps) => new URLSearchParams(props.location.search).get('confirmation_token');\nexport const extractLang = (props: RouterProps) => new URLSearchParams(props.location.search).get('lang');\n\nclass Verification extends React.Component<Props, IntlProps> {\n    public componentDidMount() {\n        const token = extractToken(this.props);\n        const lang = extractLang(this.props);\n\n        if (token) {\n            this.props.verification({ token });\n        }\n\n        if (lang && languages.includes(lang.toLowerCase())) {\n            this.props.changeLanguage(lang.toLowerCase());\n        }\n    }\n\n    public render() {\n        return (\n            <Redirect to={'/signin'} />\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    isEmailVerified: selectEmailVerified(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        verification: data => dispatch(verificationFetch(data)),\n        changeLanguage: lang => dispatch(changeLanguage(lang)),\n    });\n\nexport const VerificationScreen = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Verification) as React.ComponentClass;\n"]},"metadata":{},"sourceType":"module"}