{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/Orders/OrdersItem.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { Decimal } from '../../../components';\nimport { localeDate, setTradeColor } from '../../../helpers';\nimport { selectMarkets } from '../../../modules';\n\nvar OrdersItemComponent = function OrdersItemComponent(props) {\n  var order = props.order;\n  var intl = useIntl();\n  var markets = useSelector(selectMarkets);\n\n  var getOrderType = function getOrderType(side, type) {\n    if (!side || !type) {\n      return '';\n    }\n\n    return intl.formatMessage({\n      id: \"page.mobile.orders.header.orderType.\".concat(side, \".\").concat(type)\n    });\n  };\n\n  var currentMarket = markets.length && markets.find(function (m) {\n    return m.id === order.market;\n  }) || {\n    name: '',\n    price_precision: 0,\n    amount_precision: 0\n  };\n  var marketName = currentMarket ? currentMarket.name : order.market;\n  var orderType = getOrderType(order.side, order.ord_type);\n  var filled = (order.executed_volume / Number(order.origin_volume) * 100).toFixed(2);\n  var actualPrice = order.ord_type === 'market' || order.state === 'done' ? order.avg_price : order.price;\n\n  var _localeDate$split = localeDate(order.updated_at ? order.updated_at : order.created_at, 'fullDate').split(' '),\n      _localeDate$split2 = _slicedToArray(_localeDate$split, 2),\n      orderDate = _localeDate$split2[0],\n      orderTime = _localeDate$split2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: order.id,\n    className: \"pg-mobile-orders-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: setTradeColor(order.side).color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, orderType), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, marketName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, orderDate), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, orderTime))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.header.amount'\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-mobile-orders-item__row__block__value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Decimal, {\n    fixed: currentMarket.amount_precision,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, order.origin_volume))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.header.price'\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-mobile-orders-item__row__block__value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Decimal, {\n    fixed: currentMarket.price_precision,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, actualPrice))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.header.filled'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__block__value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, filled, \"%\"))), order.state === 'wait' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-orders-item__row__button\",\n    onClick: props.handleCancel(order.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'page.mobile.orders.header.cancel'\n  })), /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })) : null));\n};\n\nexport var OrdersItem = React.memo(OrdersItemComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/Orders/OrdersItem.tsx"],"names":["React","useIntl","useSelector","CloseIcon","Decimal","localeDate","setTradeColor","selectMarkets","OrdersItemComponent","props","order","intl","markets","getOrderType","side","type","formatMessage","id","currentMarket","length","find","m","market","name","price_precision","amount_precision","marketName","orderType","ord_type","filled","executed_volume","Number","origin_volume","toFixed","actualPrice","state","avg_price","price","updated_at","created_at","split","orderDate","orderTime","color","handleCancel","OrdersItem","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { CloseIcon } from '../../../assets/images/CloseIcon';\nimport { Decimal } from '../../../components';\nimport { localeDate, setTradeColor } from '../../../helpers';\nimport { selectMarkets } from '../../../modules';\n\nconst OrdersItemComponent = props => {\n    const { order } = props;\n    const intl = useIntl();\n    const markets = useSelector(selectMarkets);\n\n    const getOrderType = (side: string, type: string) => {\n        if (!side || !type) {\n            return '';\n        }\n\n        return intl.formatMessage({ id: `page.mobile.orders.header.orderType.${side}.${type}` });\n    };\n\n    const currentMarket = (markets.length && markets.find(m => m.id === order.market)) ||\n        { name: '', price_precision: 0, amount_precision: 0 };\n    const marketName = currentMarket ? currentMarket.name : order.market;\n    const orderType = getOrderType(order.side, order.ord_type);\n    const filled = ((order.executed_volume / Number(order.origin_volume)) * 100).toFixed(2);\n    const actualPrice = order.ord_type === 'market' || order.state === 'done' ? order.avg_price : order.price;\n    const [orderDate, orderTime] = localeDate(order.updated_at ? order.updated_at : order.created_at, 'fullDate').split(' ');\n\n    return (\n        <div key={order.id} className=\"pg-mobile-orders-item\">\n            <div className=\"pg-mobile-orders-item__row\">\n                <div className=\"pg-mobile-orders-item__row__block\">\n                    <span style={{ color: setTradeColor(order.side).color }}>{orderType}</span>\n                    <span>{marketName}</span>\n                </div>\n                <div className=\"pg-mobile-orders-item__row__block\">\n                    <span>{orderDate}</span>\n                    <span>{orderTime}</span>\n                </div>\n            </div>\n            <div className=\"pg-mobile-orders-item__row\">\n                <div className=\"pg-mobile-orders-item__row__block\">\n                    <span>{intl.formatMessage({ id: 'page.mobile.orders.header.amount' })}</span>\n                    <span className=\"pg-mobile-orders-item__row__block__value\">\n                        <Decimal fixed={currentMarket.amount_precision}>{order.origin_volume}</Decimal>\n                    </span>\n                </div>\n                <div className=\"pg-mobile-orders-item__row__block\">\n                    <span>{intl.formatMessage({ id: 'page.mobile.orders.header.price' })}</span>\n                    <span className=\"pg-mobile-orders-item__row__block__value\">\n                        <Decimal fixed={currentMarket.price_precision}>{actualPrice}</Decimal>\n                    </span>\n                </div>\n                <div className=\"pg-mobile-orders-item__row__block\">\n                    <span>{intl.formatMessage({ id: 'page.mobile.orders.header.filled' })}</span>\n                    <div className=\"pg-mobile-orders-item__row__block__value\">\n                        <span>{filled}%</span>\n                    </div>\n                </div>\n                {order.state === 'wait' ? (\n                    <div className=\"pg-mobile-orders-item__row__button\" onClick={props.handleCancel(order.id)}>\n                        <span>{intl.formatMessage({ id: 'page.mobile.orders.header.cancel' })}</span>\n                        <CloseIcon />\n                    </div>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport const OrdersItem = React.memo(OrdersItemComponent);\n"]},"metadata":{},"sourceType":"module"}