{"ast":null,"code":"import _toConsumableArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/MarketDepth/index.tsx\";\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Decimal } from '../../components/Decimal';\nimport { MarketDepths } from '../../components/MarketDepths';\nimport { selectChartRebuildState, selectCurrentColorTheme, selectCurrentMarket, selectDepthAsks, selectDepthBids } from '../../modules';\nvar settings = {\n  tooltip: true,\n  dataKeyX: 'price',\n  dataKeyY: 'cumulativeVolume'\n};\n\nvar MarketDepthContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarketDepthContainer, _React$Component);\n\n  var _super = _createSuper(MarketDepthContainer);\n\n  function MarketDepthContainer() {\n    var _this;\n\n    _classCallCheck(this, MarketDepthContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.convertToCumulative = function (data, type) {\n      var currentMarket = _this.props.currentMarket;\n\n      if (!currentMarket) {\n        return;\n      }\n\n      var _ref = [currentMarket.base_unit.toUpperCase(), currentMarket.quote_unit.toUpperCase()],\n          askCurrency = _ref[0],\n          bidCurrency = _ref[1];\n\n      var tipLayout = function tipLayout(_ref2) {\n        var volume = _ref2.volume,\n            price = _ref2.price,\n            cumulativeVolume = _ref2.cumulativeVolume,\n            cumulativePrice = _ref2.cumulativePrice;\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: 'pg-market-depth__tooltip',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"page.body.trade.header.marketDepths.content.price\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }), \" : \", Decimal.format(price, currentMarket.price_precision), \" \", bidCurrency), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"page.body.trade.header.marketDepths.content.volume\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        }), \" : \", Decimal.format(volume, currentMarket.amount_precision), \" \", askCurrency), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"page.body.trade.header.marketDepths.content.cumulativeVolume\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }\n        }), \" : \", Decimal.format(cumulativeVolume, currentMarket.amount_precision), \" \", askCurrency), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"page.body.trade.header.marketDepths.content.cumulativeValue\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }\n        }), \" : \", Decimal.format(cumulativePrice, currentMarket.price_precision), \" \", bidCurrency));\n      };\n\n      var cumulativeVolumeData = 0;\n      var cumulativePriceData = 0;\n      var cumulative = data.map(function (item, index) {\n        var _item = _slicedToArray(item, 2),\n            price = _item[0],\n            volume = _item[1];\n\n        var numberVolume = Decimal.format(volume, currentMarket.amount_precision);\n        var numberPrice = Decimal.format(price, currentMarket.price_precision);\n        cumulativeVolumeData = +numberVolume + cumulativeVolumeData;\n        cumulativePriceData = cumulativePriceData + +numberPrice * +numberVolume;\n        return {\n          [type]: Decimal.format(cumulativeVolumeData, currentMarket.amount_precision),\n          cumulativePrice: Decimal.format(cumulativePriceData, currentMarket.price_precision),\n          cumulativeVolume: +Decimal.format(cumulativeVolumeData, currentMarket.amount_precision),\n          volume: Decimal.format(+volume, currentMarket.amount_precision),\n          price: Decimal.format(+numberPrice, currentMarket.price_precision),\n          name: tipLayout({\n            volume,\n            price,\n            cumulativeVolume: cumulativeVolumeData,\n            cumulativePrice: cumulativePriceData\n          })\n        };\n      });\n      return type === 'bid' ? cumulative.sort(function (a, b) {\n        return b.bid - a.bid;\n      }) : cumulative.sort(function (a, b) {\n        return a.ask - b.ask;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MarketDepthContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n          asksItems = _this$props.asksItems,\n          bidsItems = _this$props.bidsItems,\n          chartRebuild = _this$props.chartRebuild,\n          colorTheme = _this$props.colorTheme,\n          currentMarket = _this$props.currentMarket;\n      var colorThemeChanged = nextProps.colorTheme !== colorTheme;\n      var currentMarketChanged = nextProps.currentMarket ? nextProps.currentMarket !== currentMarket : false;\n      var chartRebuildTriggered = nextProps.chartRebuild !== chartRebuild;\n      var ordersChanged = JSON.stringify(nextProps.asksItems) !== JSON.stringify(asksItems) || JSON.stringify(nextProps.bidsItems) !== JSON.stringify(bidsItems);\n      return ordersChanged || currentMarketChanged || chartRebuildTriggered || colorThemeChanged;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          asksItems = _this$props2.asksItems,\n          bidsItems = _this$props2.bidsItems;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-market-depth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table-header__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'pg-market-depth__title',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.trade.header.marketDepths\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }))), asksItems.length || bidsItems.length ? this.renderMarketDepth() : null);\n    }\n  }, {\n    key: \"renderMarketDepth\",\n    value: function renderMarketDepth() {\n      var colorTheme = this.props.colorTheme;\n      return /*#__PURE__*/React.createElement(MarketDepths, {\n        settings: settings,\n        className: 'pg-market-depth',\n        data: this.convertToDepthFormat(),\n        colorTheme: colorTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"convertToDepthFormat\",\n    value: function convertToDepthFormat() {\n      var _this$props3 = this.props,\n          asksItems = _this$props3.asksItems,\n          bidsItems = _this$props3.bidsItems;\n      var asksItemsLength = asksItems.length;\n      var bidsItemsLength = bidsItems.length;\n      var resultLength = asksItemsLength > bidsItemsLength ? bidsItemsLength : asksItemsLength;\n      var asks = asksItems.slice(0, resultLength);\n      var bids = bidsItems.slice(0, resultLength);\n      var asksVolume = this.convertToCumulative(asks, 'ask');\n      var bidsVolume = this.convertToCumulative(bids, 'bid');\n      return [].concat(_toConsumableArray(bidsVolume), _toConsumableArray(asksVolume));\n    }\n  }]);\n\n  return MarketDepthContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    asksItems: selectDepthAsks(state),\n    bidsItems: selectDepthBids(state),\n    chartRebuild: selectChartRebuildState(state),\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state)\n  };\n};\n\nexport var MarketDepthsComponent = connect(mapStateToProps)(MarketDepthContainer);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/MarketDepth/index.tsx"],"names":["React","FormattedMessage","connect","Decimal","MarketDepths","selectChartRebuildState","selectCurrentColorTheme","selectCurrentMarket","selectDepthAsks","selectDepthBids","settings","tooltip","dataKeyX","dataKeyY","MarketDepthContainer","convertToCumulative","data","type","currentMarket","props","base_unit","toUpperCase","quote_unit","askCurrency","bidCurrency","tipLayout","volume","price","cumulativeVolume","cumulativePrice","format","price_precision","amount_precision","cumulativeVolumeData","cumulativePriceData","cumulative","map","item","index","numberVolume","numberPrice","name","sort","a","b","bid","ask","nextProps","asksItems","bidsItems","chartRebuild","colorTheme","colorThemeChanged","currentMarketChanged","chartRebuildTriggered","ordersChanged","JSON","stringify","length","renderMarketDepth","convertToDepthFormat","asksItemsLength","bidsItemsLength","resultLength","asks","slice","bids","asksVolume","bidsVolume","Component","mapStateToProps","state","MarketDepthsComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Decimal } from '../../components/Decimal';\nimport { MarketDepths } from '../../components/MarketDepths';\nimport {\n    Market,\n    RootState,\n    selectChartRebuildState,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectDepthAsks,\n    selectDepthBids,\n} from '../../modules';\n\ninterface ReduxProps {\n    asksItems: string[][];\n    bidsItems: string[][];\n    chartRebuild: boolean;\n    colorTheme: string;\n    currentMarket: Market | undefined;\n}\n\ntype Props = ReduxProps;\n\nconst settings = {\n    tooltip: true,\n    dataKeyX: 'price',\n    dataKeyY: 'cumulativeVolume',\n};\n\nclass MarketDepthContainer extends React.Component<Props> {\n    public shouldComponentUpdate(nextProps: Props) {\n        const {\n            asksItems,\n            bidsItems,\n            chartRebuild,\n            colorTheme,\n            currentMarket,\n        } = this.props;\n        const colorThemeChanged = nextProps.colorTheme !== colorTheme;\n        const currentMarketChanged = nextProps.currentMarket ? nextProps.currentMarket !== currentMarket : false;\n        const chartRebuildTriggered = nextProps.chartRebuild !== chartRebuild;\n        const ordersChanged = JSON.stringify(nextProps.asksItems) !== JSON.stringify(asksItems) ||\n            JSON.stringify(nextProps.bidsItems) !== JSON.stringify(bidsItems);\n\n        return ordersChanged || currentMarketChanged || chartRebuildTriggered || colorThemeChanged;\n    }\n\n    public render() {\n        const { asksItems, bidsItems } = this.props;\n\n        return (\n            <div className=\"cr-market-depth\">\n                <div className=\"cr-table-header__content\">\n                    <div className={'pg-market-depth__title'}>\n                        <FormattedMessage id=\"page.body.trade.header.marketDepths\" />\n                    </div>\n                </div>\n                {(asksItems.length || bidsItems.length) ? this.renderMarketDepth() : null}\n            </div>\n        );\n    }\n\n    private renderMarketDepth() {\n        const { colorTheme } = this.props;\n\n        return (\n            <MarketDepths\n                settings={settings}\n                className={'pg-market-depth'}\n                data={this.convertToDepthFormat()}\n                colorTheme={colorTheme}\n            />);\n    }\n\n    private convertToCumulative = (data, type) => {\n        const { currentMarket } = this.props;\n\n        if (!currentMarket) {\n            return;\n        }\n\n        const [askCurrency, bidCurrency] = [currentMarket.base_unit.toUpperCase(), currentMarket.quote_unit.toUpperCase()];\n        const tipLayout = ({ volume, price, cumulativeVolume, cumulativePrice }) => (\n            <span className={'pg-market-depth__tooltip'}>\n                <span><FormattedMessage id=\"page.body.trade.header.marketDepths.content.price\" /> : {Decimal.format(price, currentMarket.price_precision)} {bidCurrency}</span>\n                <span><FormattedMessage id=\"page.body.trade.header.marketDepths.content.volume\" /> : {Decimal.format(volume, currentMarket.amount_precision)} {askCurrency}</span>\n                <span><FormattedMessage id=\"page.body.trade.header.marketDepths.content.cumulativeVolume\" /> : {Decimal.format(cumulativeVolume, currentMarket.amount_precision)} {askCurrency}</span>\n                <span><FormattedMessage id=\"page.body.trade.header.marketDepths.content.cumulativeValue\" /> : {Decimal.format(cumulativePrice, currentMarket.price_precision)} {bidCurrency}</span>\n            </span>\n        );\n\n        let cumulativeVolumeData = 0;\n        let cumulativePriceData = 0;\n\n        const cumulative = data.map((item, index) => {\n            const [price, volume] = item;\n            const numberVolume = Decimal.format(volume, currentMarket.amount_precision);\n            const numberPrice = Decimal.format(price, currentMarket.price_precision);\n            cumulativeVolumeData = +numberVolume + cumulativeVolumeData;\n            cumulativePriceData = cumulativePriceData + (+numberPrice * +numberVolume);\n\n            return {\n                [type]: Decimal.format(cumulativeVolumeData, currentMarket.amount_precision),\n                cumulativePrice: Decimal.format(cumulativePriceData, currentMarket.price_precision),\n                cumulativeVolume: +Decimal.format(cumulativeVolumeData, currentMarket.amount_precision),\n                volume: Decimal.format(+volume, currentMarket.amount_precision),\n                price: Decimal.format(+numberPrice, currentMarket.price_precision),\n                name: tipLayout({ volume, price, cumulativeVolume: cumulativeVolumeData, cumulativePrice: cumulativePriceData }),\n            };\n        });\n\n        return type === 'bid' ? cumulative\n            .sort((a, b) => b.bid - a.bid) :\n            cumulative.sort((a, b) => a.ask - b.ask);\n    };\n\n    private convertToDepthFormat() {\n        const { asksItems, bidsItems } = this.props;\n        const asksItemsLength = asksItems.length;\n        const bidsItemsLength = bidsItems.length;\n\n\n        const resultLength = asksItemsLength > bidsItemsLength ? bidsItemsLength : asksItemsLength;\n        const asks = asksItems.slice(0, resultLength);\n        const bids = bidsItems.slice(0, resultLength);\n\n        const asksVolume = this.convertToCumulative(asks, 'ask');\n        const bidsVolume = this.convertToCumulative(bids, 'bid');\n\n        return [...bidsVolume, ...asksVolume];\n    }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    asksItems: selectDepthAsks(state),\n    bidsItems: selectDepthBids(state),\n    chartRebuild: selectChartRebuildState(state),\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state),\n});\n\nexport const MarketDepthsComponent = connect(mapStateToProps)(MarketDepthContainer);\n"]},"metadata":{},"sourceType":"module"}