{"ast":null,"code":"import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserLoggedIn } from '../modules';\nimport { rangerConnectFetch } from '../modules/public/ranger';\nimport { selectRanger, selectShouldRangerConnect } from '../modules/public/ranger/selectors';\nexport var useRangerConnectFetch = function useRangerConnectFetch() {\n  var dispatch = useDispatch();\n  var userLoggedIn = useSelector(selectUserLoggedIn);\n  var shouldFetch = useSelector(selectShouldRangerConnect);\n\n  var _useSelector = useSelector(selectRanger),\n      connected = _useSelector.connected,\n      withAuth = _useSelector.withAuth;\n\n  React.useEffect(function () {\n    if (!connected && shouldFetch) {\n      dispatch(rangerConnectFetch({\n        withAuth: userLoggedIn\n      }));\n    } else if (connected && !withAuth && userLoggedIn) {\n      dispatch(rangerConnectFetch({\n        withAuth: userLoggedIn\n      }));\n    }\n  }, [dispatch, shouldFetch, connected, withAuth, userLoggedIn]);\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/hooks/useRangerConnectFetch.ts"],"names":["React","useDispatch","useSelector","selectUserLoggedIn","rangerConnectFetch","selectRanger","selectShouldRangerConnect","useRangerConnectFetch","dispatch","userLoggedIn","shouldFetch","connected","withAuth","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,YAAT,EAAuBC,yBAAvB,QAAwD,oCAAxD;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACvC,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,YAAY,GAAGP,WAAW,CAACC,kBAAD,CAAhC;AACA,MAAMO,WAAW,GAAGR,WAAW,CAACI,yBAAD,CAA/B;;AAHuC,qBAIPJ,WAAW,CAACG,YAAD,CAJJ;AAAA,MAI/BM,SAJ+B,gBAI/BA,SAJ+B;AAAA,MAIpBC,QAJoB,gBAIpBA,QAJoB;;AAMvCZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AAClB,QAAI,CAACF,SAAD,IAAcD,WAAlB,EAA+B;AAC3BF,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC;AAAEQ,QAAAA,QAAQ,EAAEH;AAAZ,OAAD,CAAnB,CAAR;AACH,KAFD,MAEO,IAAIE,SAAS,IAAI,CAACC,QAAd,IAA0BH,YAA9B,EAA4C;AAC/CD,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC;AAAEQ,QAAAA,QAAQ,EAAEH;AAAZ,OAAD,CAAnB,CAAR;AACH;AACJ,GAND,EAMG,CAACD,QAAD,EAAWE,WAAX,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CH,YAA7C,CANH;AAOH,CAbM","sourcesContent":["import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserLoggedIn } from '../modules';\nimport { rangerConnectFetch } from '../modules/public/ranger';\nimport { selectRanger, selectShouldRangerConnect } from '../modules/public/ranger/selectors';\n\nexport const useRangerConnectFetch = () => {\n    const dispatch = useDispatch();\n    const userLoggedIn = useSelector(selectUserLoggedIn);\n    const shouldFetch = useSelector(selectShouldRangerConnect);\n    const { connected, withAuth } = useSelector(selectRanger);\n\n    React.useEffect(() => {\n        if (!connected && shouldFetch) {\n            dispatch(rangerConnectFetch({ withAuth: userLoggedIn }));\n        } else if (connected && !withAuth && userLoggedIn) {\n            dispatch(rangerConnectFetch({ withAuth: userLoggedIn }));\n        }\n    }, [dispatch, shouldFetch, connected, withAuth, userLoggedIn]);\n};\n"]},"metadata":{},"sourceType":"module"}