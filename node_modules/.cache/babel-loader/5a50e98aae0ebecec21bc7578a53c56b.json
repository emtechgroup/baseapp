{"ast":null,"code":"import { getLayoutFromLS, layouts, resetLayout, saveLayoutToLS } from '../../../helpers/layout';\nimport { RESET_LAYOUTS, SAVE_LAYOUTS } from './constants';\nexport var initialLayoutState = {\n  layouts: getLayoutFromLS('layouts') || layouts\n};\nexport var gridLayoutReducer = function gridLayoutReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialLayoutState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SAVE_LAYOUTS:\n      saveLayoutToLS(action.payload.key, action.payload.layouts);\n      return {\n        layouts: action.payload.layouts\n      };\n\n    case RESET_LAYOUTS:\n      resetLayout(action.payload.key);\n      return {\n        layouts: layouts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/gridLayout/reducer.ts"],"names":["getLayoutFromLS","layouts","resetLayout","saveLayoutToLS","RESET_LAYOUTS","SAVE_LAYOUTS","initialLayoutState","gridLayoutReducer","state","action","type","payload","key"],"mappings":"AAAA,SAASA,eAAT,EAAsCC,OAAtC,EAA+CC,WAA/C,EAA4DC,cAA5D,QAAkF,yBAAlF;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,aAA5C;AAMA,OAAO,IAAMC,kBAAmC,GAAG;AAC/CL,EAAAA,OAAO,EAAED,eAAe,CAAC,SAAD,CAAf,IAA8BC;AADQ,CAA5C;AAIP,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,GAAwC;AAAA,MAAvCC,KAAuC,uEAA/BF,kBAA+B;AAAA,MAAXG,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,YAAL;AACIF,MAAAA,cAAc,CAACM,MAAM,CAACE,OAAP,CAAeC,GAAhB,EAAqBH,MAAM,CAACE,OAAP,CAAeV,OAApC,CAAd;AAEA,aAAO;AACHA,QAAAA,OAAO,EAAEQ,MAAM,CAACE,OAAP,CAAeV;AADrB,OAAP;;AAGJ,SAAKG,aAAL;AACIF,MAAAA,WAAW,CAACO,MAAM,CAACE,OAAP,CAAeC,GAAhB,CAAX;AAEA,aAAO;AACHX,QAAAA,OAAO,EAAEA;AADN,OAAP;;AAGJ;AACI,aAAOO,KAAP;AAdR;AAgBH,CAjBM","sourcesContent":["import { getLayoutFromLS, LayoutGrid, layouts, resetLayout, saveLayoutToLS } from '../../../helpers/layout';\nimport { RESET_LAYOUTS, SAVE_LAYOUTS } from './constants';\n\nexport interface GridLayoutState {\n    layouts: LayoutGrid;\n}\n\nexport const initialLayoutState: GridLayoutState = {\n    layouts: getLayoutFromLS('layouts') || layouts,\n};\n\nexport const gridLayoutReducer = (state = initialLayoutState, action) => {\n    switch (action.type) {\n        case SAVE_LAYOUTS:\n            saveLayoutToLS(action.payload.key, action.payload.layouts);\n\n            return {\n                layouts: action.payload.layouts,\n            };\n        case RESET_LAYOUTS:\n            resetLayout(action.payload.key);\n\n            return {\n                layouts: layouts,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}