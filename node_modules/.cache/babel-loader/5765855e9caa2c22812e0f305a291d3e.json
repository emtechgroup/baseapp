{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var countMinValidPriceStep = function countMinValidPriceStep(price, digits) {\n  var clearPrice = String(+price);\n  var priceParts = clearPrice.split('.');\n  var indexOfDot = priceParts[1] ? clearPrice.indexOf('.') : priceParts[0].length;\n\n  if (priceParts[0] === '0') {\n    indexOfDot -= 1;\n  }\n\n  var minValidPrice = Math.pow(10, indexOfDot - digits);\n\n  if (minValidPrice < 1) {\n    minValidPrice = +minValidPrice.toFixed(digits - indexOfDot);\n  }\n\n  return minValidPrice;\n};\nexport var countSignificantDigits = function countSignificantDigits(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  return Number(value).toExponential().replace(/e[+\\-0-9]*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n};\nexport var FilterPriceSignificantDigit = /*#__PURE__*/function () {\n  function FilterPriceSignificantDigit(filter) {\n    _classCallCheck(this, FilterPriceSignificantDigit);\n\n    this.filter = void 0;\n    this.filter = filter;\n  }\n\n  _createClass(FilterPriceSignificantDigit, [{\n    key: \"validatePriceStep\",\n    value: function validatePriceStep(price) {\n      var valid = countSignificantDigits(price) <= this.filter.digits;\n      var priceStep = 0;\n\n      if (!valid) {\n        priceStep = countMinValidPriceStep(price, this.filter.digits);\n      }\n\n      return {\n        valid,\n        priceStep\n      };\n    }\n  }]);\n\n  return FilterPriceSignificantDigit;\n}();","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/filters/FilterPrice/FilterPriceSignificantDigit.ts"],"names":["countMinValidPriceStep","price","digits","clearPrice","String","priceParts","split","indexOfDot","indexOf","length","minValidPrice","toFixed","countSignificantDigits","value","Number","toExponential","replace","FilterPriceSignificantDigit","filter","valid","priceStep"],"mappings":";;AAGA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAyBC,MAAzB,EAA4C;AAC9E,MAAMC,UAAU,GAAGC,MAAM,CAAC,CAACH,KAAF,CAAzB;AACA,MAAMI,UAAU,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAnB;AACA,MAAIC,UAAU,GAAIF,UAAU,CAAC,CAAD,CAAX,GAAkBF,UAAU,CAACK,OAAX,CAAmB,GAAnB,CAAlB,GAA4CH,UAAU,CAAC,CAAD,CAAV,CAAcI,MAA3E;;AAEA,MAAIJ,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAtB,EAA2B;AACvBE,IAAAA,UAAU,IAAI,CAAd;AACH;;AAED,MAAIG,aAAa,YAAG,EAAH,EAAUH,UAAU,GAAGL,MAAvB,CAAjB;;AAEA,MAAIQ,aAAa,GAAG,CAApB,EAAuB;AACnBA,IAAAA,aAAa,GAAG,CAAEA,aAAa,CAACC,OAAd,CAAsBT,MAAM,GAAGK,UAA/B,CAAlB;AACH;;AAED,SAAOG,aAAP;AACH,CAhBM;AAkBP,OAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAA4B;AAC9D,MAAIA,KAAK,KAAK,CAAd,EAAiB;AAAE,WAAO,CAAP;AAAW;;AAE9B,SAAOC,MAAM,CAACD,KAAD,CAAN,CACJE,aADI,GAEJC,OAFI,CAEI,aAFJ,EAEmB,EAFnB,EAEwB;AAFxB,GAGJA,OAHI,CAGK,YAHL,EAGmB,EAHnB,EAGyB;AAHzB,GAIJP,MAJH;AAKH,CARM;AAUP,WAAaQ,2BAAb;AAGI,uCAAYC,MAAZ,EAAkD;AAAA;;AAAA,SAF3CA,MAE2C;AAC9C,SAAKA,MAAL,GAAcA,MAAd;AACH;;AALL;AAAA;AAAA,sCAO6BjB,KAP7B,EAO6D;AACrD,UAAMkB,KAAK,GAAGP,sBAAsB,CAACX,KAAD,CAAtB,IAAiC,KAAKiB,MAAL,CAAYhB,MAA3D;AACA,UAAIkB,SAAS,GAAG,CAAhB;;AAEA,UAAI,CAACD,KAAL,EAAY;AACRC,QAAAA,SAAS,GAAGpB,sBAAsB,CAACC,KAAD,EAAQ,KAAKiB,MAAL,CAAYhB,MAApB,CAAlC;AACH;;AAED,aAAO;AAAEiB,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAP;AACH;AAhBL;;AAAA;AAAA","sourcesContent":["import { MarketFilterSignificantDigit } from '../../modules';\nimport { FilterPrice, PriceValidation } from './';\n\nexport const countMinValidPriceStep = (price: number | string, digits: number) => {\n    const clearPrice = String(+price);\n    const priceParts = clearPrice.split('.');\n    let indexOfDot = (priceParts[1]) ? clearPrice.indexOf('.') : priceParts[0].length;\n\n    if (priceParts[0] === '0') {\n        indexOfDot -= 1;\n    }\n\n    let minValidPrice = 10 ** (indexOfDot - digits);\n\n    if (minValidPrice < 1) {\n        minValidPrice = +(minValidPrice.toFixed(digits - indexOfDot));\n    }\n\n    return minValidPrice;\n};\n\nexport const countSignificantDigits = (value: number | string) => {\n    if (value === 0) { return 0; }\n\n    return Number(value)\n      .toExponential()\n      .replace(/e[+\\-0-9]*$/, '')  // remove exponential notation\n      .replace( /^0\\.?0*|\\./, '')   // remove decimal point and leading zeros\n      .length;\n};\n\nexport class FilterPriceSignificantDigit implements FilterPrice {\n    public filter: MarketFilterSignificantDigit;\n\n    constructor(filter: MarketFilterSignificantDigit) {\n        this.filter = filter;\n    }\n\n    public validatePriceStep(price: number): PriceValidation {\n        const valid = countSignificantDigits(price) <= this.filter.digits;\n        let priceStep = 0;\n\n        if (!valid) {\n            priceStep = countMinValidPriceStep(price, this.filter.digits);\n        }\n\n        return { valid, priceStep } as PriceValidation;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}