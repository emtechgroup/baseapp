{"ast":null,"code":"import _objectSpread from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/Sidebar/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { languages } from '../../api/config';\nimport { LogoutIcon } from '../../assets/images/sidebar/LogoutIcon';\nimport { ProfileIcon } from '../../assets/images/sidebar/ProfileIcon';\nimport { SidebarIcons } from '../../assets/images/sidebar/SidebarIcons';\nimport { pgRoutes } from '../../constants';\nimport { changeLanguage as _changeLanguage, changeUserDataFetch as _changeUserDataFetch, logoutFetch as _logoutFetch, selectCurrentColorTheme, selectCurrentLanguage, selectCurrentMarket, selectSidebarState, selectUserInfo, selectUserLoggedIn, toggleSidebar as _toggleSidebar } from '../../modules';\n\nvar SidebarContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(SidebarContainer, _React$Component);\n\n  var _super = _createSuper(SidebarContainer);\n\n  function SidebarContainer() {\n    var _this;\n\n    _classCallCheck(this, SidebarContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isOpenLanguage: false\n    };\n\n    _this.renderNavItems = function (address) {\n      return function (values, index) {\n        var currentMarket = _this.props.currentMarket;\n\n        var _values = _slicedToArray(values, 3),\n            name = _values[0],\n            url = _values[1],\n            img = _values[2];\n\n        var handleLinkChange = function handleLinkChange() {\n          return _this.props.toggleSidebar(false);\n        };\n\n        var path = url.includes('/trading') && currentMarket ? \"/trading/\".concat(currentMarket.id) : url;\n        var isActive = url === '/trading/' && address.includes('/trading') || address === url;\n        var iconClassName = classnames('pg-sidebar-wrapper-nav-item-img', {\n          'pg-sidebar-wrapper-nav-item-img--active': isActive\n        });\n        return /*#__PURE__*/React.createElement(Link, {\n          to: path,\n          key: index,\n          onClick: handleLinkChange,\n          className: \"\".concat(isActive && 'route-selected'),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-sidebar-wrapper-nav-item\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pg-sidebar-wrapper-nav-item-img-wrapper\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SidebarIcons, {\n          className: iconClassName,\n          name: img,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pg-sidebar-wrapper-nav-item-text\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: name,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }\n        }))));\n      };\n    };\n\n    _this.renderProfileLink = function () {\n      var _this$props = _this.props,\n          isLoggedIn = _this$props.isLoggedIn,\n          location = _this$props.location;\n\n      var handleLinkChange = function handleLinkChange() {\n        return _this.props.toggleSidebar(false);\n      };\n\n      var address = location ? location.pathname : '';\n      var isActive = address === '/profile';\n      var iconClassName = classnames('pg-sidebar-wrapper-nav-item-img', {\n        'pg-sidebar-wrapper-nav-item-img--active': isActive\n      });\n      return isLoggedIn && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-profile\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/profile\",\n        onClick: handleLinkChange,\n        className: \"\".concat(isActive && 'route-selected'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-profile-link\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ProfileIcon, {\n        className: iconClassName,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-sidebar-wrapper-profile-link-text\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: 'page.header.navbar.profile',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      })))));\n    };\n\n    _this.renderLogout = function () {\n      var isLoggedIn = _this.props.isLoggedIn;\n\n      if (!isLoggedIn) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-logout\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-logout-link\",\n        onClick: _this.props.logoutFetch,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LogoutIcon, {\n        className: \"pg-sidebar-wrapper-logout-link-img\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-sidebar-wrapper-logout-link-text\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: 'page.body.profile.content.action.logout',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    _this.getLanguageDropdownItems = function () {\n      return languages.map(function (l, index) {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: index,\n          onClick: function onClick(e) {\n            return _this.handleChangeLanguage(l);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dropdown-row\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: _this.tryRequire(l) && require(\"../../assets/images/sidebar/\".concat(l, \".svg\")),\n          alt: \"\".concat(l, \"-flag-icon\"),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }\n        }, l.toUpperCase())));\n      });\n    };\n\n    _this.tryRequire = function (name) {\n      try {\n        require(\"../../assets/images/sidebar/\".concat(name, \".svg\"));\n\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n\n    _this.handleChangeLanguage = function (language) {\n      var _this$props2 = _this.props,\n          user = _this$props2.user,\n          isLoggedIn = _this$props2.isLoggedIn;\n\n      if (isLoggedIn) {\n        var data = user.data && JSON.parse(user.data);\n\n        if (data && data.language && data.language !== language) {\n          var payload = _objectSpread(_objectSpread({}, user), {}, {\n            data: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n              language\n            }))\n          });\n\n          _this.props.changeUserDataFetch({\n            user: payload\n          });\n        }\n      }\n\n      _this.props.changeLanguage(language);\n    };\n\n    return _this;\n  }\n\n  _createClass(SidebarContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          isLoggedIn = _this$props3.isLoggedIn,\n          isActive = _this$props3.isActive,\n          lang = _this$props3.lang;\n      var isOpenLanguage = this.state.isOpenLanguage;\n      var address = this.props.history.location ? this.props.history.location.pathname : '';\n      var languageName = lang.toUpperCase();\n      var languageClassName = classnames('dropdown-menu-language-field', {\n        'dropdown-menu-language-field-active': isOpenLanguage\n      });\n      var sidebarClassName = classnames('pg-sidebar-wrapper', {\n        'pg-sidebar-wrapper--active': isActive,\n        'pg-sidebar-wrapper--hidden': !isActive\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: sidebarClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, this.renderProfileLink(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, pgRoutes(isLoggedIn).map(this.renderNavItems(address))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-sidebar-wrapper-lng\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-group pg-navbar__header-settings__account-dropdown dropdown-menu-language-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"primary\",\n        id: languageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.tryRequire(lang) && require(\"../../assets/images/sidebar/\".concat(lang, \".svg\")),\n        alt: \"\".concat(lang, \"-flag-icon\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dropdown-menu-language-selected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, languageName)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, this.getLanguageDropdownItems())))), this.renderLogout());\n    }\n  }]);\n\n  return SidebarContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    colorTheme: selectCurrentColorTheme(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    currentMarket: selectCurrentMarket(state),\n    lang: selectCurrentLanguage(state),\n    isActive: selectSidebarState(state),\n    user: selectUserInfo(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeLanguage: function changeLanguage(payload) {\n      return dispatch(_changeLanguage(payload));\n    },\n    toggleSidebar: function toggleSidebar(payload) {\n      return dispatch(_toggleSidebar(payload));\n    },\n    logoutFetch: function logoutFetch() {\n      return dispatch(_logoutFetch());\n    },\n    changeUserDataFetch: function changeUserDataFetch(payload) {\n      return dispatch(_changeUserDataFetch(payload));\n    }\n  };\n};\n\nexport var Sidebar = compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(SidebarContainer);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/Sidebar/index.tsx"],"names":["classnames","React","Dropdown","FormattedMessage","connect","Link","withRouter","compose","languages","LogoutIcon","ProfileIcon","SidebarIcons","pgRoutes","changeLanguage","changeUserDataFetch","logoutFetch","selectCurrentColorTheme","selectCurrentLanguage","selectCurrentMarket","selectSidebarState","selectUserInfo","selectUserLoggedIn","toggleSidebar","SidebarContainer","state","isOpenLanguage","renderNavItems","address","values","index","currentMarket","props","name","url","img","handleLinkChange","path","includes","id","isActive","iconClassName","renderProfileLink","isLoggedIn","location","pathname","renderLogout","getLanguageDropdownItems","map","l","e","handleChangeLanguage","tryRequire","require","toUpperCase","err","language","user","data","JSON","parse","payload","stringify","lang","history","languageName","languageClassName","sidebarClassName","Component","mapStateToProps","colorTheme","mapDispatchToProps","dispatch","Sidebar"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { Link, RouteProps, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { languages } from '../../api/config';\nimport { LogoutIcon } from '../../assets/images/sidebar/LogoutIcon';\nimport { ProfileIcon } from '../../assets/images/sidebar/ProfileIcon';\nimport { SidebarIcons } from '../../assets/images/sidebar/SidebarIcons';\nimport { pgRoutes } from '../../constants';\nimport {\n    changeLanguage,\n    changeUserDataFetch,\n    logoutFetch,\n    Market,\n    RootState,\n    selectCurrentColorTheme,\n    selectCurrentLanguage,\n    selectCurrentMarket,\n    selectSidebarState,\n    selectUserInfo,\n    selectUserLoggedIn,\n    toggleSidebar,\n    User,\n} from '../../modules';\n\ninterface State {\n    isOpenLanguage: boolean;\n}\n\ninterface DispatchProps {\n    changeLanguage: typeof changeLanguage;\n    toggleSidebar: typeof toggleSidebar;\n    logoutFetch: typeof logoutFetch;\n}\n\ninterface ReduxProps {\n    lang: string;\n    colorTheme: string;\n    isLoggedIn: boolean;\n    currentMarket: Market | undefined;\n    isActive: boolean;\n    user: User;\n}\n\ninterface OwnProps {\n    onLinkChange?: () => void;\n    history: History;\n    changeUserDataFetch: typeof changeUserDataFetch;\n}\n\ntype Props = OwnProps & ReduxProps & RouteProps & DispatchProps;\n\nclass SidebarContainer extends React.Component<Props, State> {\n    public state = {\n        isOpenLanguage: false,\n    };\n\n    public render() {\n        const { isLoggedIn, isActive, lang } = this.props;\n        const { isOpenLanguage } = this.state;\n\n        const address = this.props.history.location ? this.props.history.location.pathname : '';\n        const languageName = lang.toUpperCase();\n\n        const languageClassName = classnames('dropdown-menu-language-field', {\n            'dropdown-menu-language-field-active': isOpenLanguage,\n        });\n\n        const sidebarClassName = classnames('pg-sidebar-wrapper', {\n            'pg-sidebar-wrapper--active': isActive,\n            'pg-sidebar-wrapper--hidden': !isActive,\n        });\n\n        return (\n            <div className={sidebarClassName}>\n                {this.renderProfileLink()}\n                <div className=\"pg-sidebar-wrapper-nav\">\n                    {pgRoutes(isLoggedIn).map(this.renderNavItems(address))}\n                </div>\n                <div className=\"pg-sidebar-wrapper-lng\">\n                    <div className=\"btn-group pg-navbar__header-settings__account-dropdown dropdown-menu-language-container\">\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"primary\" id={languageClassName}>\n                                <img\n                                    src={this.tryRequire(lang) && require(`../../assets/images/sidebar/${lang}.svg`)}\n                                    alt={`${lang}-flag-icon`}\n                                />\n                                <span className=\"dropdown-menu-language-selected\">{languageName}</span>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {this.getLanguageDropdownItems()}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n                {this.renderLogout()}\n            </div>\n        );\n    }\n\n    public renderNavItems = (address: string) => (values: string[], index: number) => {\n        const { currentMarket } = this.props;\n\n        const [name, url, img] = values;\n        const handleLinkChange = () => this.props.toggleSidebar(false);\n        const path = url.includes('/trading') && currentMarket ? `/trading/${currentMarket.id}` : url;\n        const isActive = (url === '/trading/' && address.includes('/trading')) || address === url;\n\n        const iconClassName = classnames('pg-sidebar-wrapper-nav-item-img', {\n            'pg-sidebar-wrapper-nav-item-img--active': isActive,\n        });\n\n        return (\n            <Link to={path} key={index} onClick={handleLinkChange} className={`${isActive && 'route-selected'}`}>\n                <div className=\"pg-sidebar-wrapper-nav-item\">\n                    <div className=\"pg-sidebar-wrapper-nav-item-img-wrapper\">\n                        <SidebarIcons\n                            className={iconClassName}\n                            name={img}\n                        />\n                    </div>\n                    <p className=\"pg-sidebar-wrapper-nav-item-text\">\n                        <FormattedMessage id={name} />\n                    </p>\n                </div>\n            </Link>\n        );\n    };\n\n    public renderProfileLink = () => {\n        const { isLoggedIn, location } = this.props;\n        const handleLinkChange = () => this.props.toggleSidebar(false);\n        const address = location ? location.pathname : '';\n        const isActive = address === '/profile';\n\n        const iconClassName = classnames('pg-sidebar-wrapper-nav-item-img', {\n            'pg-sidebar-wrapper-nav-item-img--active': isActive,\n        });\n\n        return isLoggedIn && (\n            <div className=\"pg-sidebar-wrapper-profile\">\n                <Link to=\"/profile\" onClick={handleLinkChange} className={`${isActive && 'route-selected'}`}>\n                    <div className=\"pg-sidebar-wrapper-profile-link\">\n                        <ProfileIcon className={iconClassName} />\n                        <p className=\"pg-sidebar-wrapper-profile-link-text\">\n                            <FormattedMessage id={'page.header.navbar.profile'} />\n                        </p>\n                    </div>\n                </Link>\n            </div>\n        );\n    };\n\n    public renderLogout = () => {\n        const { isLoggedIn } = this.props;\n        if (!isLoggedIn) {\n            return null;\n        }\n\n        return (\n            <div className=\"pg-sidebar-wrapper-logout\">\n                <div className=\"pg-sidebar-wrapper-logout-link\" onClick={this.props.logoutFetch}>\n                    <LogoutIcon className=\"pg-sidebar-wrapper-logout-link-img\" />\n                    <p className=\"pg-sidebar-wrapper-logout-link-text\">\n                        <FormattedMessage id={'page.body.profile.content.action.logout'} />\n                    </p>\n                </div>\n            </div>\n        );\n    };\n\n    public getLanguageDropdownItems = () => {\n        return languages.map((l: string, index: number) =>\n            <Dropdown.Item key={index} onClick={e => this.handleChangeLanguage(l)}>\n                <div className=\"dropdown-row\">\n                    <img\n                        src={this.tryRequire(l) && require(`../../assets/images/sidebar/${l}.svg`)}\n                        alt={`${l}-flag-icon`}\n                    />\n                    <span>{l.toUpperCase()}</span>\n                </div>\n            </Dropdown.Item>,\n        );\n    };\n\n    private tryRequire = (name: string) => {\n        try {\n            require(`../../assets/images/sidebar/${name}.svg`);\n\n            return true;\n        } catch (err) {\n            return false;\n        }\n    };\n\n\n    private handleChangeLanguage = (language: string) => {\n        const { user, isLoggedIn } = this.props;\n\n        if (isLoggedIn) {\n            const data = user.data && JSON.parse(user.data);\n\n            if (data && data.language && data.language !== language) {\n                const payload = {\n                    ...user,\n                    data: JSON.stringify({\n                        ...data,\n                        language,\n                    }),\n                };\n\n                this.props.changeUserDataFetch({ user: payload });\n            }\n        }\n\n        this.props.changeLanguage(language);\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    colorTheme: selectCurrentColorTheme(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    currentMarket: selectCurrentMarket(state),\n    lang: selectCurrentLanguage(state),\n    isActive: selectSidebarState(state),\n    user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    changeLanguage: payload => dispatch(changeLanguage(payload)),\n    toggleSidebar: payload => dispatch(toggleSidebar(payload)),\n    logoutFetch: () => dispatch(logoutFetch()),\n    changeUserDataFetch: payload => dispatch(changeUserDataFetch(payload)),\n});\n\nexport const Sidebar = compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(SidebarContainer) as React.ComponentClass;\n"]},"metadata":{},"sourceType":"module"}