{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/OrderInput/index.tsx\";\n\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../components';\nimport { areEqualProps } from '../../helpers/areEqualProps';\n\n/**\n * Input with cryptocurrency icon and label.\n */\nexport var OrderInput = React.memo(function (props) {\n  var className = props.className,\n      currency = props.currency,\n      handleChangeValue = props.handleChangeValue,\n      _handleFocusInput = props.handleFocusInput,\n      isFocused = props.isFocused,\n      isWrong = props.isWrong,\n      label = props.label,\n      onKeyPress = props.onKeyPress,\n      placeholder = props.placeholder,\n      value = props.value;\n  var cx = cr('cr-order-input', className);\n  var fieldsetFocusedClass = cr('cr-order-input__fieldset', {\n    'cr-order-input__fieldset--focused': isFocused,\n    'cr-order-input__fieldset--wrong': isWrong\n  });\n  var cryptoIconClass = cr('cr-order-input__crypto-icon', {\n    'cr-order-input__fieldset--focused': isFocused,\n    'cr-order-input__fieldset--wrong': isWrong\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: fieldsetFocusedClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"number\",\n    inputValue: value,\n    placeholder: placeholder || '0',\n    handleChangeInput: handleChangeValue,\n    label: value && label ? label : '',\n    defaultLabel: value && label ? label : '',\n    onKeyPress: onKeyPress,\n    handleFocusInput: function handleFocusInput() {\n      return _handleFocusInput(props.label);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cryptoIconClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, currency.toUpperCase()));\n}, areEqualProps);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/OrderInput/index.tsx"],"names":["cr","React","CustomInput","areEqualProps","OrderInput","memo","props","className","currency","handleChangeValue","handleFocusInput","isFocused","isWrong","label","onKeyPress","placeholder","value","cx","fieldsetFocusedClass","cryptoIconClass","toUpperCase"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAgDA;AACA;AACA;AAEA,OAAO,IAAMC,UAAoD,GAAGH,KAAK,CAACI,IAAN,CAAW,UAACC,KAAD,EAA4B;AAAA,MAEnGC,SAFmG,GAYnGD,KAZmG,CAEnGC,SAFmG;AAAA,MAGnGC,QAHmG,GAYnGF,KAZmG,CAGnGE,QAHmG;AAAA,MAInGC,iBAJmG,GAYnGH,KAZmG,CAInGG,iBAJmG;AAAA,MAKnGC,iBALmG,GAYnGJ,KAZmG,CAKnGI,gBALmG;AAAA,MAMnGC,SANmG,GAYnGL,KAZmG,CAMnGK,SANmG;AAAA,MAOnGC,OAPmG,GAYnGN,KAZmG,CAOnGM,OAPmG;AAAA,MAQnGC,KARmG,GAYnGP,KAZmG,CAQnGO,KARmG;AAAA,MASnGC,UATmG,GAYnGR,KAZmG,CASnGQ,UATmG;AAAA,MAUnGC,WAVmG,GAYnGT,KAZmG,CAUnGS,WAVmG;AAAA,MAWnGC,KAXmG,GAYnGV,KAZmG,CAWnGU,KAXmG;AAavG,MAAMC,EAAE,GAAGjB,EAAE,CAAC,gBAAD,EAAmBO,SAAnB,CAAb;AAEA,MAAMW,oBAAoB,GAAGlB,EAAE,CAAC,0BAAD,EAA6B;AACxD,yCAAqCW,SADmB;AAExD,uCAAmCC;AAFqB,GAA7B,CAA/B;AAKA,MAAMO,eAAe,GAAGnB,EAAE,CAAC,6BAAD,EAAgC;AACtD,yCAAqCW,SADiB;AAEtD,uCAAmCC;AAFmB,GAAhC,CAA1B;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,SAAS,EAAEC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,UAAU,EAAEF,KAFhB;AAGI,IAAA,WAAW,EAAED,WAAW,IAAI,GAHhC;AAII,IAAA,iBAAiB,EAAEN,iBAJvB;AAKI,IAAA,KAAK,EAAEO,KAAK,IAAIH,KAAT,GAAiBA,KAAjB,GAAyB,EALpC;AAMI,IAAA,YAAY,EAAEG,KAAK,IAAIH,KAAT,GAAiBA,KAAjB,GAAyB,EAN3C;AAOI,IAAA,UAAU,EAAEC,UAPhB;AAQI,IAAA,gBAAgB,EAAE;AAAA,aAAMJ,iBAAgB,CAACJ,KAAK,CAACO,KAAP,CAAtB;AAAA,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAaI;AAAK,IAAA,SAAS,EAAEM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,QAAQ,CAACY,WAAT,EADL,CAbJ,CADJ;AAmBH,CA5CmE,EA4CjEjB,aA5CiE,CAA7D","sourcesContent":["import cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../components';\nimport {areEqualProps} from '../../helpers/areEqualProps';\n\nexport interface OrderInputProps {\n    /**\n     * Additional class name for styling. By default element receives `cr-input-block` class\n     * @default empty\n     */\n    className?: string;\n    /**\n     * Code of cryptocurrency\n     * @default empty\n     */\n    currency: string;\n    /**\n     * Checking if input focused\n     */\n    isFocused: boolean;\n    /**\n     * Checking if input wrong\n     */\n    isWrong?: boolean;\n    /**\n     * Label on the border\n     */\n    label?: string;\n    /**\n     * Placeholder on the border\n     */\n    placeholder?: string;\n    /**\n     * Value of Input component\n     */\n    value: string | number;\n    /**\n     * Function for getting value of input\n     * @default empty\n     */\n    handleChangeValue: (text: string) => void;\n    /**\n     * Function for handling input focus\n     */\n    handleFocusInput: (value?: string) => void;\n    /**\n     * Function for handling 'Enter' key\n     */\n    onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\n/**\n * Input with cryptocurrency icon and label.\n */\n\nexport const OrderInput: React.FunctionComponent<OrderInputProps> = React.memo((props: OrderInputProps) => {\n    const {\n        className,\n        currency,\n        handleChangeValue,\n        handleFocusInput,\n        isFocused,\n        isWrong,\n        label,\n        onKeyPress,\n        placeholder,\n        value,\n    } = props;\n    const cx = cr('cr-order-input', className);\n\n    const fieldsetFocusedClass = cr('cr-order-input__fieldset', {\n        'cr-order-input__fieldset--focused': isFocused,\n        'cr-order-input__fieldset--wrong': isWrong,\n    });\n\n    const cryptoIconClass = cr('cr-order-input__crypto-icon', {\n        'cr-order-input__fieldset--focused': isFocused,\n        'cr-order-input__fieldset--wrong': isWrong,\n    });\n\n    return (\n        <div className={cx}>\n            <fieldset className={fieldsetFocusedClass}>\n                <CustomInput\n                    type=\"number\"\n                    inputValue={value}\n                    placeholder={placeholder || '0'}\n                    handleChangeInput={handleChangeValue}\n                    label={value && label ? label : ''}\n                    defaultLabel={value && label ? label : ''}\n                    onKeyPress={onKeyPress}\n                    handleFocusInput={() => handleFocusInput(props.label)}\n                />\n            </fieldset>\n            <div className={cryptoIconClass}>\n                {currency.toUpperCase()}\n            </div>\n        </div>\n    );\n}, areEqualProps);\n"]},"metadata":{},"sourceType":"module"}