{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/index.tsx\";\n\nimport * as Sentry from '@sentry/browser';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { Provider } from 'react-redux';\nimport { sentryEnabled } from './api/config';\nimport { App } from './App';\nimport './index.css';\nimport { rootSaga } from './modules';\nimport { rangerSagas } from './modules/public/ranger';\nimport { rangerMiddleware, sagaMiddleware, store } from './store';\n\nif (!Intl.PluralRules) {\n  require('@formatjs/intl-pluralrules/polyfill');\n\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-pluralrules/locale-data/ru');\n} // @ts-ignore\n\n\nif (!Intl.RelativeTimeFormat) {\n  require('@formatjs/intl-relativetimeformat/polyfill');\n\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/locale-data/ru');\n}\n\nsagaMiddleware.run(rootSaga);\nrangerMiddleware.run(rangerSagas);\n\nif (sentryEnabled()) {\n  var key = process.env.REACT_APP_SENTRY_KEY;\n  var organization = process.env.REACT_APP_SENTRY_ORGANIZATION;\n  var project = process.env.REACT_APP_SENTRY_PROJECT;\n\n  if (key && key.length && organization && organization.length && project && project.length) {\n    Sentry.init({\n      dsn: \"https://\".concat(key, \"@\").concat(organization, \".ingest.sentry.io/\").concat(project)\n    });\n  }\n}\n\nvar render = function render() {\n  return ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), document.getElementById('root'));\n};\n\nrender();","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/index.tsx"],"names":["Sentry","React","ReactDOM","Provider","sentryEnabled","App","rootSaga","rangerSagas","rangerMiddleware","sagaMiddleware","store","Intl","PluralRules","require","RelativeTimeFormat","run","key","process","env","REACT_APP_SENTRY_KEY","organization","REACT_APP_SENTRY_ORGANIZATION","project","REACT_APP_SENTRY_PROJECT","length","init","dsn","render","document","getElementById"],"mappings":";;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,iBAAxB;AACA,OAAO,2CAAP;AACA,OAAO,sCAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAEA,OAAO,6CAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,KAA3C,QAAwD,SAAxD;;AAGA,IAAI,CAACC,IAAI,CAACC,WAAV,EAAuB;AACnBC,EAAAA,OAAO,CAAC,qCAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,2CAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,2CAAD,CAAP;AACH,C,CACD;;;AACA,IAAI,CAACF,IAAI,CAACG,kBAAV,EAA8B;AAC1BD,EAAAA,OAAO,CAAC,4CAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,kDAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,kDAAD,CAAP;AACH;;AAEDJ,cAAc,CAACM,GAAf,CAAmBT,QAAnB;AACAE,gBAAgB,CAACO,GAAjB,CAAqBR,WAArB;;AAIA,IAAIH,aAAa,EAAjB,EAAqB;AACjB,MAAMY,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAxB;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,6BAAjC;AACA,MAAMC,OAAO,GAAGL,OAAO,CAACC,GAAR,CAAYK,wBAA5B;;AAEA,MAAIP,GAAG,IAAIA,GAAG,CAACQ,MAAX,IAAqBJ,YAArB,IAAqCA,YAAY,CAACI,MAAlD,IAA4DF,OAA5D,IAAuEA,OAAO,CAACE,MAAnF,EAA2F;AACvFxB,IAAAA,MAAM,CAACyB,IAAP,CAAY;AAAEC,MAAAA,GAAG,oBAAaV,GAAb,cAAoBI,YAApB,+BAAqDE,OAArD;AAAL,KAAZ;AACH;AACJ;;AAED,IAAMK,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMzB,QAAQ,CAACyB,MAAT,eACjB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADiB,EAIjBkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJiB,CAAN;AAAA,CAAf;;AAOAF,MAAM","sourcesContent":["import * as Sentry from '@sentry/browser';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {  WrappedComponentProps } from 'react-intl';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { Provider } from 'react-redux';\nimport { sentryEnabled } from './api/config';\nimport { App } from './App';\nimport './index.css';\nimport { rootSaga } from './modules';\nimport { rangerSagas } from './modules/public/ranger';\nimport { rangerMiddleware, sagaMiddleware, store } from './store';\n\n\nif (!Intl.PluralRules) {\n    require('@formatjs/intl-pluralrules/polyfill');\n    require('@formatjs/intl-pluralrules/locale-data/en');\n    require('@formatjs/intl-pluralrules/locale-data/ru');\n}\n// @ts-ignore\nif (!Intl.RelativeTimeFormat) {\n    require('@formatjs/intl-relativetimeformat/polyfill');\n    require('@formatjs/intl-relativetimeformat/locale-data/en');\n    require('@formatjs/intl-relativetimeformat/locale-data/ru');\n}\n\nsagaMiddleware.run(rootSaga);\nrangerMiddleware.run(rangerSagas);\n\nexport type IntlProps = WrappedComponentProps;\n\nif (sentryEnabled()) {\n    const key = process.env.REACT_APP_SENTRY_KEY;\n    const organization = process.env.REACT_APP_SENTRY_ORGANIZATION;\n    const project = process.env.REACT_APP_SENTRY_PROJECT;\n\n    if (key && key.length && organization && organization.length && project && project.length) {\n        Sentry.init({ dsn: `https://${key}@${organization}.ingest.sentry.io/${project}` });\n    }\n}\n\nconst render = () => ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root') as HTMLElement,\n);\n\nrender();\n"]},"metadata":{},"sourceType":"module"}