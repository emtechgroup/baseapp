{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(signUpSaga);\n\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { signUpData, signUpError, signUpRequireVerification } from '../actions';\nvar signUpConfig = {\n  apiVersion: 'barong'\n};\nexport function signUpSaga(action) {\n  return _regeneratorRuntime.wrap(function signUpSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(signUpConfig), '/identity/users', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(signUpRequireVerification({\n            requireVerification: true\n          }));\n\n        case 5:\n          _context.next = 7;\n          return put(signUpData());\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: signUpError\n            }\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/user/auth/sagas/signUpSaga.ts"],"names":["signUpSaga","call","put","sendError","API","signUpData","signUpError","signUpRequireVerification","signUpConfig","apiVersion","action","post","payload","requireVerification","error","processingType","extraOptions","actionError"],"mappings":";;oDASiBA,U;;AATjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAA+CC,yBAA/C,QAAgF,YAAhF;AAEA,IAAMC,YAA4B,GAAG;AACjCC,EAAAA,UAAU,EAAE;AADqB,CAArC;AAIA,OAAO,SAAUT,UAAV,CAAqBU,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMT,IAAI,CAACG,GAAG,CAACO,IAAJ,CAASH,YAAT,CAAD,EAAyB,iBAAzB,EAA4CE,MAAM,CAACE,OAAnD,CAAV;;AAFD;AAAA;AAGC,iBAAMV,GAAG,CAACK,yBAAyB,CAAC;AAAEM,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAA1B,CAAT;;AAHD;AAAA;AAIC,iBAAMX,GAAG,CAACG,UAAU,EAAX,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMH,GAAG,CAACC,SAAS,CAAC;AAChBW,YAAAA,KAAK,aADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEX;AADH;AAHE,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { signUpData, signUpError, SignUpFetch, signUpRequireVerification } from '../actions';\n\nconst signUpConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* signUpSaga(action: SignUpFetch) {\n    try {\n        yield call(API.post(signUpConfig), '/identity/users', action.payload);\n        yield put(signUpRequireVerification({ requireVerification: true }));\n        yield put(signUpData());\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: signUpError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}