{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/HistoryTable/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Pagination, Table } from '../../../components';\nimport { DEFAULT_CCY_PRECISION } from '../../../constants';\nimport { localeDate } from '../../../helpers';\nimport { useCurrenciesFetch, useHistoryFetch, useWalletsFetch } from '../../../hooks';\nimport { selectCurrentPage, selectLastElemIndex, selectNextPageExists } from '../../../modules';\nimport { selectCurrencies } from '../../../modules/public/currencies';\nimport { selectFirstElemIndex, selectHistory } from '../../../modules/user/history';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { RowItem } from './Rowitem';\nvar DEFAULT_LIMIT = 6;\n\nvar HistoryTable = function HistoryTable(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentPage = _React$useState2[0],\n      setCurrentPage = _React$useState2[1];\n\n  var intl = useIntl();\n  var page = useSelector(selectCurrentPage);\n  var list = useSelector(selectHistory);\n  var wallets = useSelector(selectWallets);\n  var currencies = useSelector(selectCurrencies);\n  var firstElemIndex = useSelector(function (state) {\n    return selectFirstElemIndex(state, DEFAULT_LIMIT);\n  });\n  var lastElemIndex = useSelector(function (state) {\n    return selectLastElemIndex(state, DEFAULT_LIMIT);\n  });\n  var nextPageExists = useSelector(function (state) {\n    return selectNextPageExists(state, DEFAULT_LIMIT);\n  });\n  useWalletsFetch();\n  useCurrenciesFetch();\n  useHistoryFetch({\n    type: props.type,\n    currency: props.currency,\n    limit: DEFAULT_LIMIT,\n    page: currentPage\n  });\n\n  var onClickPrevPage = function onClickPrevPage() {\n    setCurrentPage(Number(page) - 1);\n  };\n\n  var onClickNextPage = function onClickNextPage() {\n    setCurrentPage(Number(page) + 1);\n  };\n\n  var formatTxState = function formatTxState(tx, confirmations, minConfirmations) {\n    var statusMapping = {\n      succeed: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--success\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.withdraw.content.status.succeed'\n      })),\n      failed: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--failed\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.withdraw.content.status.failed'\n      })),\n      accepted: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--success\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.deposit.content.status.accepted'\n      })),\n      collected: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--success\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.deposit.content.status.collected'\n      })),\n      canceled: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--failed\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.deposit.content.status.canceled'\n      })),\n      rejected: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--failed\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.deposit.content.status.rejected'\n      })),\n      processing: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--pending\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, intl.formatMessage({\n        id: 'page.body.wallets.table.pending'\n      })),\n      prepared: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--pending\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, intl.formatMessage({\n        id: 'page.body.wallets.table.pending'\n      })),\n      submitted: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--pending\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }\n      }, confirmations !== undefined && minConfirmations !== undefined ? \"\".concat(confirmations, \"/\").concat(minConfirmations) : intl.formatMessage({\n        id: 'page.body.wallets.table.pending'\n      })),\n      skipped: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"cr-mobile-history-table--success\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }\n      }, intl.formatMessage({\n        id: 'page.body.history.deposit.content.status.skipped'\n      }))\n    };\n    return statusMapping[tx];\n  };\n\n  var retrieveData = function retrieveData() {\n    var currency = props.currency,\n        type = props.type;\n\n    var _ref = wallets.find(function (w) {\n      return w.currency === currency;\n    }) || {\n      fixed: DEFAULT_CCY_PRECISION\n    },\n        fixed = _ref.fixed;\n\n    if (list.length === 0) {\n      return [[intl.formatMessage({\n        id: 'page.noDataToShow'\n      }), '', '']];\n    }\n\n    return list.sort(function (a, b) {\n      return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n    }).map(function (item, index) {\n      var amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n      var confirmations = type === 'deposits' && item.confirmations;\n      var itemCurrency = currencies && currencies.find(function (cur) {\n        return cur.id === currency;\n      });\n      var minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n      var state = 'state' in item ? formatTxState(item.state, confirmations, minConfirmations) : '';\n      return [/*#__PURE__*/React.createElement(RowItem, {\n        amount: amount,\n        fixed: fixed,\n        currency: currency,\n        createdAt: item.created_at,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), state];\n    });\n  };\n\n  var mapRows = function mapRows(row) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-mobile-history-table__row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }, row);\n  };\n\n  var tableData = retrieveData().map(function (row) {\n    return row.map(mapRows);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-history-table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    data: tableData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    firstElemIndex: firstElemIndex,\n    lastElemIndex: lastElemIndex,\n    page: page,\n    nextPageExists: nextPageExists,\n    onClickPrevPage: onClickPrevPage,\n    onClickNextPage: onClickNextPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport { HistoryTable };","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/components/HistoryTable/index.tsx"],"names":["React","useIntl","useSelector","Pagination","Table","DEFAULT_CCY_PRECISION","localeDate","useCurrenciesFetch","useHistoryFetch","useWalletsFetch","selectCurrentPage","selectLastElemIndex","selectNextPageExists","selectCurrencies","selectFirstElemIndex","selectHistory","selectWallets","RowItem","DEFAULT_LIMIT","HistoryTable","props","useState","currentPage","setCurrentPage","intl","page","list","wallets","currencies","firstElemIndex","state","lastElemIndex","nextPageExists","type","currency","limit","onClickPrevPage","Number","onClickNextPage","formatTxState","tx","confirmations","minConfirmations","statusMapping","succeed","formatMessage","id","failed","accepted","collected","canceled","rejected","processing","prepared","submitted","undefined","skipped","retrieveData","find","w","fixed","length","sort","a","b","created_at","map","item","index","amount","price","volume","itemCurrency","cur","min_confirmations","mapRows","row","tableData"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Pagination, Table } from '../../../components';\nimport { DEFAULT_CCY_PRECISION } from '../../../constants';\nimport { localeDate } from '../../../helpers';\nimport { useCurrenciesFetch, useHistoryFetch, useWalletsFetch } from '../../../hooks';\nimport { RootState, selectCurrentPage, selectLastElemIndex, selectNextPageExists } from '../../../modules';\nimport { selectCurrencies } from '../../../modules/public/currencies';\nimport { selectFirstElemIndex, selectHistory } from '../../../modules/user/history';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { RowItem } from './Rowitem';\n\nconst DEFAULT_LIMIT = 6;\n\nconst HistoryTable = (props: any) => {\n    const [currentPage, setCurrentPage] = React.useState(0);\n    const intl = useIntl();\n    const page = useSelector(selectCurrentPage);\n    const list = useSelector(selectHistory);\n    const wallets = useSelector(selectWallets);\n    const currencies = useSelector(selectCurrencies);\n    const firstElemIndex = useSelector((state: RootState) => selectFirstElemIndex(state, DEFAULT_LIMIT));\n    const lastElemIndex = useSelector((state: RootState) => selectLastElemIndex(state, DEFAULT_LIMIT));\n    const nextPageExists = useSelector((state: RootState) => selectNextPageExists(state, DEFAULT_LIMIT));\n\n    useWalletsFetch();\n    useCurrenciesFetch();\n    useHistoryFetch({ type: props.type, currency: props.currency, limit: DEFAULT_LIMIT, page: currentPage });\n\n    const onClickPrevPage = () => {\n        setCurrentPage(Number(page) - 1);\n    };\n    const onClickNextPage = () => {\n        setCurrentPage(Number(page) + 1);\n    };\n    const formatTxState = (tx: string, confirmations?: number, minConfirmations?: number) => {\n        const statusMapping = {\n            succeed: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.withdraw.content.status.succeed' })}</span>,\n            failed:  <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.withdraw.content.status.failed' })}</span>,\n            accepted: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.accepted' })}</span>,\n            collected: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.collected' })}</span>,\n            canceled: <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.canceled' })}</span>,\n            rejected: <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.rejected' })}</span>,\n            processing: <span className=\"cr-mobile-history-table--pending\">{intl.formatMessage({ id: 'page.body.wallets.table.pending' })}</span>,\n            prepared: <span className=\"cr-mobile-history-table--pending\">{intl.formatMessage({ id: 'page.body.wallets.table.pending' })}</span>,\n            submitted: <span className=\"cr-mobile-history-table--pending\">{(confirmations !== undefined && minConfirmations !== undefined) ? (\n                `${confirmations}/${minConfirmations}`\n            ) : (\n                intl.formatMessage({ id: 'page.body.wallets.table.pending' })\n                )}</span>,\n            skipped: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.skipped' })}</span>,\n        };\n\n        return statusMapping[tx];\n    };\n    const retrieveData = () => {\n        const {\n            currency,\n            type,\n        } = props;\n        const { fixed } = wallets.find(w => w.currency === currency) || { fixed: DEFAULT_CCY_PRECISION };\n        if (list.length === 0) {\n            return [[intl.formatMessage({ id: 'page.noDataToShow' }), '', '']];\n        }\n\n        return list.sort((a, b) => {\n            return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n        }).map((item: any, index) => {\n            const amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n            const confirmations = type === 'deposits' && item.confirmations;\n            const itemCurrency = currencies && currencies.find(cur => cur.id === currency);\n            const minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n            const state = 'state' in item ? formatTxState(item.state, confirmations, minConfirmations) : '';\n\n            return [\n                <RowItem\n                    amount={amount}\n                    fixed={fixed}\n                    currency={currency}\n                    createdAt={item.created_at}\n                />,\n                state,\n            ];\n        });\n    };\n    const mapRows = row => {\n        return <div className=\"cr-mobile-history-table__row\">{row}</div>;\n    };\n\n    const tableData = retrieveData().map(row => row.map(mapRows));\n\n    return (\n        <div className=\"cr-mobile-history-table\">\n            <Table data={tableData}/>\n            <Pagination\n                firstElemIndex={firstElemIndex}\n                lastElemIndex={lastElemIndex}\n                page={page}\n                nextPageExists={nextPageExists}\n                onClickPrevPage={onClickPrevPage}\n                onClickNextPage={onClickNextPage}\n            />\n        </div>\n    );\n};\n\nexport {\n    HistoryTable,\n};\n"]},"metadata":{},"sourceType":"module"}