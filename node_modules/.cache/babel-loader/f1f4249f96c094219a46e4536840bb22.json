{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleAlertSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(callAlertData);\n\nimport { call, delay, put, select } from 'redux-saga/effects';\nimport { resetHistory, setBlocklistStatus, signInRequire2FA, userOpenOrdersReset, userReset } from '../../../';\nimport { msAlertDisplayTime } from '../../../../api';\nimport { selectUserInfo } from '../../../user/profile';\nimport { alertData, alertDelete } from '../actions';\nexport function handleAlertSaga(action) {\n  var user;\n  return _regeneratorRuntime.wrap(function handleAlertSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(action.payload.type === 'error')) {\n            _context.next = 60;\n            break;\n          }\n\n          _context.t0 = action.payload.code;\n          _context.next = _context.t0 === 401 ? 4 : _context.t0 === 403 ? 36 : _context.t0 === 422 ? 43 : _context.t0 === 471 ? 50 : _context.t0 === 472 ? 53 : 56;\n          break;\n\n        case 4:\n          if (!(action.payload.message.indexOf('identity.session.not_active') > -1 || action.payload.message.indexOf('authz.invalid_session') > -1 || action.payload.message.indexOf('authz.client_session_mismatch') > -1 || action.payload.message.indexOf('authz.csrf_token_mismatch') > -1)) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 7;\n          return put(userReset());\n\n        case 7:\n          localStorage.removeItem('csrfToken');\n          _context.next = 10;\n          return put(userOpenOrdersReset());\n\n        case 10:\n          _context.next = 12;\n          return put(signInRequire2FA({\n            require2fa: false\n          }));\n\n        case 12:\n          _context.next = 14;\n          return put(resetHistory());\n\n        case 14:\n          if (!(action.payload.message.indexOf('identity.session.not_active') > -1)) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 17;\n          return put(alertData(action.payload));\n\n        case 17:\n          return _context.abrupt(\"return\");\n\n        case 20:\n          if (!(action.payload.message.indexOf('authz.client_session_mismatch') > -1 || action.payload.message.indexOf('authz.csrf_token_mismatch') > -1)) {\n            _context.next = 25;\n            break;\n          }\n\n          _context.next = 23;\n          return call(callAlertData, action);\n\n        case 23:\n          _context.next = 35;\n          break;\n\n        case 25:\n          _context.next = 27;\n          return select(selectUserInfo);\n\n        case 27:\n          user = _context.sent;\n\n          if (!(!user.email.length && action.payload.message.indexOf('authz.invalid_session') > -1)) {\n            _context.next = 32;\n            break;\n          }\n\n          return _context.abrupt(\"break\", 58);\n\n        case 32:\n          _context.next = 34;\n          return call(callAlertData, action);\n\n        case 34:\n          return _context.abrupt(\"break\", 58);\n\n        case 35:\n          return _context.abrupt(\"break\", 58);\n\n        case 36:\n          if (!(action.payload.message.indexOf('identity.session.invalid_otp') > -1)) {\n            _context.next = 39;\n            break;\n          }\n\n          _context.next = 39;\n          return call(callAlertData, action);\n\n        case 39:\n          if (!(action.payload.message.indexOf('jwt.decode_and_verify') > -1)) {\n            _context.next = 42;\n            break;\n          }\n\n          _context.next = 42;\n          return call(callAlertData, action);\n\n        case 42:\n          return _context.abrupt(\"return\");\n\n        case 43:\n          if (!(action.payload.message.indexOf('value.taken') > -1)) {\n            _context.next = 47;\n            break;\n          }\n\n          window.location.replace('/');\n          _context.next = 49;\n          break;\n\n        case 47:\n          _context.next = 49;\n          return call(callAlertData, action);\n\n        case 49:\n          return _context.abrupt(\"break\", 58);\n\n        case 50:\n          _context.next = 52;\n          return put(setBlocklistStatus({\n            status: 'restricted'\n          }));\n\n        case 52:\n          return _context.abrupt(\"break\", 58);\n\n        case 53:\n          _context.next = 55;\n          return put(setBlocklistStatus({\n            status: 'maintenance'\n          }));\n\n        case 55:\n          return _context.abrupt(\"break\", 58);\n\n        case 56:\n          _context.next = 58;\n          return call(callAlertData, action);\n\n        case 58:\n          _context.next = 62;\n          break;\n\n        case 60:\n          _context.next = 62;\n          return call(callAlertData, action);\n\n        case 62:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction callAlertData(action) {\n  return _regeneratorRuntime.wrap(function callAlertData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put(alertData(action.payload));\n\n        case 2:\n          _context2.next = 4;\n          return delay(parseFloat(msAlertDisplayTime()));\n\n        case 4:\n          _context2.next = 6;\n          return put(alertDelete());\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/alert/sagas/handleAlertSaga.ts"],"names":["handleAlertSaga","callAlertData","call","delay","put","select","resetHistory","setBlocklistStatus","signInRequire2FA","userOpenOrdersReset","userReset","msAlertDisplayTime","selectUserInfo","alertData","alertDelete","action","payload","type","code","message","indexOf","localStorage","removeItem","require2fa","user","email","length","window","location","replace","status","parseFloat"],"mappings":"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","sourcesContent":["import { call, delay, put, select } from 'redux-saga/effects';\nimport {\n    resetHistory,\n    setBlocklistStatus,\n    signInRequire2FA,\n    userOpenOrdersReset,\n    userReset,\n} from '../../../';\nimport { msAlertDisplayTime } from '../../../../api';\nimport { selectUserInfo } from '../../../user/profile';\nimport { alertData, alertDelete, AlertPush } from '../actions';\n\nexport function* handleAlertSaga(action: AlertPush) {\n    if (action.payload.type === 'error') {\n        switch (action.payload.code) {\n            case 401:\n                if (\n                    action.payload.message.indexOf('identity.session.not_active') > -1 ||\n                    action.payload.message.indexOf('authz.invalid_session') > -1 ||\n                    action.payload.message.indexOf('authz.client_session_mismatch') > -1 ||\n                    action.payload.message.indexOf('authz.csrf_token_mismatch') > -1\n                ) {\n                    yield put(userReset());\n                    localStorage.removeItem('csrfToken');\n                    yield put(userOpenOrdersReset());\n                    yield put(signInRequire2FA({ require2fa: false }));\n                    yield put(resetHistory());\n                }\n\n                if (action.payload.message.indexOf('identity.session.not_active') > -1){\n                    yield put(alertData(action.payload));\n\n                    return;\n                } else {\n                    if (action.payload.message.indexOf('authz.client_session_mismatch') > -1 ||\n                        action.payload.message.indexOf('authz.csrf_token_mismatch') > -1) {\n                            yield call(callAlertData, action);\n                        } else {\n                            const user = yield select(selectUserInfo);\n\n                            if (!user.email.length && action.payload.message.indexOf('authz.invalid_session') > -1) {\n                                break;\n                            } else {\n                                yield call(callAlertData, action);\n                                break;\n                            }\n                        }\n                }\n                break;\n            case 403:\n                if (action.payload.message.indexOf('identity.session.invalid_otp') > -1) {\n                    yield call(callAlertData, action);\n                }\n                if (action.payload.message.indexOf('jwt.decode_and_verify') > -1) {\n                    yield call(callAlertData, action);\n                }\n\n                return;\n            case 422:\n                if (action.payload.message.indexOf('value.taken') > -1) {\n                    window.location.replace('/');\n                } else {\n                    yield call(callAlertData, action);\n                }\n                break;\n            case 471:\n                yield put(setBlocklistStatus({ status: 'restricted' }));\n                break;\n            case 472:\n                yield put(setBlocklistStatus({ status: 'maintenance' }));\n                break;\n            default:\n                yield call(callAlertData, action);\n        }\n    } else {\n        yield call(callAlertData, action);\n    }\n}\n\nfunction* callAlertData(action: AlertPush) {\n    yield put(alertData(action.payload));\n    yield delay(parseFloat(msAlertDisplayTime()));\n    yield put(alertDelete());\n}\n"]},"metadata":{},"sourceType":"module"}