{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileAccountActivity/index.tsx\";\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useUserActivityFetch } from '../../../hooks';\nimport { selectUserActivity, selectUserActivityCurrentPage, selectUserActivityFirstElemIndex, selectUserActivityLastElemIndex, selectUserActivityNextPageExists } from '../../../modules';\nimport { Subheader, UserActivityItem } from '../../components';\nvar DEFAULT_LIMIT = 10;\n\nvar ProfileAccountActivityMobileScreenComponent = function ProfileAccountActivityMobileScreenComponent() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentPage = _React$useState2[0],\n      setCurrentPage = _React$useState2[1];\n\n  var intl = useIntl();\n  var history = useHistory();\n  var page = useSelector(selectUserActivityCurrentPage);\n  var userActivity = useSelector(selectUserActivity);\n  var firstElemIndex = useSelector(function (state) {\n    return selectUserActivityFirstElemIndex(state, DEFAULT_LIMIT);\n  });\n  var lastElemIndex = useSelector(function (state) {\n    return selectUserActivityLastElemIndex(state, DEFAULT_LIMIT);\n  });\n  var nextPageExists = useSelector(function (state) {\n    return selectUserActivityNextPageExists(state, DEFAULT_LIMIT);\n  });\n  useUserActivityFetch({\n    page: currentPage,\n    limit: DEFAULT_LIMIT\n  });\n\n  var onClickPrevPage = function onClickPrevPage() {\n    setCurrentPage(Number(page) - 1);\n  };\n\n  var onClickNextPage = function onClickNextPage() {\n    setCurrentPage(Number(page) + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.accountActivity.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-account-activity-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-account-activity-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, userActivity.length ? userActivity.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(UserActivityItem, {\n      key: index,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 59\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"no-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, intl.formatMessage({\n    id: 'page.noDataToShow'\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    firstElemIndex: firstElemIndex,\n    lastElemIndex: lastElemIndex,\n    page: currentPage,\n    nextPageExists: nextPageExists,\n    onClickPrevPage: onClickPrevPage,\n    onClickNextPage: onClickNextPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport var ProfileAccountActivityMobileScreen = React.memo(ProfileAccountActivityMobileScreenComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/mobile/screens/ProfileAccountActivity/index.tsx"],"names":["React","useIntl","useSelector","useHistory","Pagination","useUserActivityFetch","selectUserActivity","selectUserActivityCurrentPage","selectUserActivityFirstElemIndex","selectUserActivityLastElemIndex","selectUserActivityNextPageExists","Subheader","UserActivityItem","DEFAULT_LIMIT","ProfileAccountActivityMobileScreenComponent","useState","currentPage","setCurrentPage","intl","history","page","userActivity","firstElemIndex","state","lastElemIndex","nextPageExists","limit","onClickPrevPage","Number","onClickNextPage","formatMessage","id","push","length","map","item","index","ProfileAccountActivityMobileScreen","memo"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAEIC,kBAFJ,EAGIC,6BAHJ,EAIIC,gCAJJ,EAKIC,+BALJ,EAMIC,gCANJ,QAOO,kBAPP;AAQA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,kBAA5C;AAEA,IAAMC,aAAa,GAAG,EAAtB;;AAEA,IAAMC,2CAAqD,GAAG,SAAxDA,2CAAwD,GAAM;AAAA,wBAC1Bd,KAAK,CAACe,QAAN,CAAe,CAAf,CAD0B;AAAA;AAAA,MACzDC,WADyD;AAAA,MAC5CC,cAD4C;;AAEhE,MAAMC,IAAI,GAAGjB,OAAO,EAApB;AACA,MAAMkB,OAAO,GAAGhB,UAAU,EAA1B;AACA,MAAMiB,IAAI,GAAGlB,WAAW,CAACK,6BAAD,CAAxB;AACA,MAAMc,YAAY,GAAGnB,WAAW,CAACI,kBAAD,CAAhC;AACA,MAAMgB,cAAc,GAAGpB,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAsBf,gCAAgC,CAACe,KAAD,EAAQV,aAAR,CAAtD;AAAA,GAAD,CAAlC;AACA,MAAMW,aAAa,GAAGtB,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAsBd,+BAA+B,CAACc,KAAD,EAAQV,aAAR,CAArD;AAAA,GAAD,CAAjC;AACA,MAAMY,cAAc,GAAGvB,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAsBb,gCAAgC,CAACa,KAAD,EAAQV,aAAR,CAAtD;AAAA,GAAD,CAAlC;AACAR,EAAAA,oBAAoB,CAAC;AAACe,IAAAA,IAAI,EAAEJ,WAAP;AAAoBU,IAAAA,KAAK,EAAEb;AAA3B,GAAD,CAApB;;AAEA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BV,IAAAA,cAAc,CAACW,MAAM,CAACR,IAAD,CAAN,GAAe,CAAhB,CAAd;AACH,GAFD;;AAGA,MAAMS,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BZ,IAAAA,cAAc,CAACW,MAAM,CAACR,IAAD,CAAN,GAAe,CAAhB,CAAd;AACH,GAFD;;AAIA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,IAAI,CAACY,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CADT;AAEE,IAAA,SAAS,EAAEb,IAAI,CAACY,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAFb;AAGE,IAAA,QAAQ,EAAE;AAAA,aAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,CAAN;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAMI;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,YAAY,CAACY,MAAb,GACGZ,YAAY,CAACa,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,wBAAiB,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,KAAvB;AAA8B,MAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAjB,CADH,gBAGG;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BjB,IAAI,CAACY,aAAL,CAAmB;AAACC,IAAAA,EAAE,EAAE;AAAL,GAAnB,CAA3B,CAJR,eAMI,oBAAC,UAAD;AACI,IAAA,cAAc,EAAET,cADpB;AAEI,IAAA,aAAa,EAAEE,aAFnB;AAGI,IAAA,IAAI,EAAER,WAHV;AAII,IAAA,cAAc,EAAES,cAJpB;AAKI,IAAA,eAAe,EAAEE,eALrB;AAMI,IAAA,eAAe,EAAEE,eANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CANJ,CADJ;AA2BH,CA7CD;;AA+CA,OAAO,IAAMQ,kCAAkC,GAAGrC,KAAK,CAACsC,IAAN,CAAWxB,2CAAX,CAA3C","sourcesContent":["import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useUserActivityFetch } from '../../../hooks';\nimport {\n    RootState,\n    selectUserActivity,\n    selectUserActivityCurrentPage,\n    selectUserActivityFirstElemIndex,\n    selectUserActivityLastElemIndex,\n    selectUserActivityNextPageExists,\n} from '../../../modules';\nimport { Subheader, UserActivityItem } from '../../components';\n\nconst DEFAULT_LIMIT = 10;\n\nconst ProfileAccountActivityMobileScreenComponent: React.FC = () => {\n    const [currentPage, setCurrentPage] = React.useState(0);\n    const intl = useIntl();\n    const history = useHistory();\n    const page = useSelector(selectUserActivityCurrentPage);\n    const userActivity = useSelector(selectUserActivity);\n    const firstElemIndex = useSelector((state: RootState) => selectUserActivityFirstElemIndex(state, DEFAULT_LIMIT));\n    const lastElemIndex = useSelector((state: RootState) => selectUserActivityLastElemIndex(state, DEFAULT_LIMIT));\n    const nextPageExists = useSelector((state: RootState) => selectUserActivityNextPageExists(state, DEFAULT_LIMIT));\n    useUserActivityFetch({page: currentPage, limit: DEFAULT_LIMIT});\n\n    const onClickPrevPage = () => {\n        setCurrentPage(Number(page) - 1);\n    };\n    const onClickNextPage = () => {\n        setCurrentPage(Number(page) + 1);\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.accountActivity.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-account-activity-screen\">\n                <div className=\"pg-mobile-profile-account-activity-screen__list\">\n                    {userActivity.length ? (\n                        userActivity.map((item, index) => <UserActivityItem key={index} item={item} />)\n                    ) : (\n                        <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n                    )}\n                    <Pagination\n                        firstElemIndex={firstElemIndex}\n                        lastElemIndex={lastElemIndex}\n                        page={currentPage}\n                        nextPageExists={nextPageExists}\n                        onClickPrevPage={onClickPrevPage}\n                        onClickNextPage={onClickNextPage}\n                    />\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileAccountActivityMobileScreen = React.memo(ProfileAccountActivityMobileScreenComponent);\n"]},"metadata":{},"sourceType":"module"}