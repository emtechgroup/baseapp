{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootCurrenciesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(currenciesFetchSaga);\n\nimport { call, put, takeLeading } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { currenciesData, currenciesError } from '../actions';\nimport { CURRENCIES_FETCH } from '../constants';\nvar currenciesOptions = {\n  apiVersion: 'peatio'\n};\nexport function rootCurrenciesSaga() {\n  return _regeneratorRuntime.wrap(function rootCurrenciesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLeading(CURRENCIES_FETCH, currenciesFetchSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function currenciesFetchSaga(action) {\n  var currencies;\n  return _regeneratorRuntime.wrap(function currenciesFetchSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(API.get(currenciesOptions), '/public/currencies');\n\n        case 3:\n          currencies = _context2.sent;\n          _context2.next = 6;\n          return put(currenciesData(currencies));\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(sendError({\n            error: _context2.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: currenciesError\n            }\n          }));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/modules/public/currencies/sagas/currenciesFetchSaga.ts"],"names":["rootCurrenciesSaga","currenciesFetchSaga","call","put","takeLeading","sendError","API","currenciesData","currenciesError","CURRENCIES_FETCH","currenciesOptions","apiVersion","action","get","currencies","error","processingType","extraOptions","actionError"],"mappings":";;oDAUiBA,kB;qDAIAC,mB;;AAdjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAiE,YAAjE;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,IAAMC,iBAAiC,GAAG;AACtCC,EAAAA,UAAU,EAAE;AAD0B,CAA1C;AAIA,OAAO,SAAUX,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,WAAW,CAACK,gBAAD,EAAmBR,mBAAnB,CAAjB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,OAAO,SAAUA,mBAAV,CAA8BW,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoB,iBAAMV,IAAI,CAACI,GAAG,CAACO,GAAJ,CAAQH,iBAAR,CAAD,EAA6B,oBAA7B,CAAV;;AAFpB;AAEOI,UAAAA,UAFP;AAAA;AAGC,iBAAMX,GAAG,CAACI,cAAc,CAACO,UAAD,CAAf,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMX,GAAG,CAACE,SAAS,CAAC;AAChBU,YAAAA,KAAK,cADW;AAEhBC,YAAAA,cAAc,EAAE,OAFA;AAGhBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,WAAW,EAAEV;AADH;AAHE,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeLeading } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { currenciesData, currenciesError, CurrenciesFetch } from '../actions';\nimport { CURRENCIES_FETCH } from '../constants';\n\nconst currenciesOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* rootCurrenciesSaga() {\n    yield takeLeading(CURRENCIES_FETCH, currenciesFetchSaga);\n}\n\nexport function* currenciesFetchSaga(action: CurrenciesFetch) {\n    try {\n        const currencies = yield call(API.get(currenciesOptions), '/public/currencies');\n        yield put(currenciesData(currencies));\n    } catch (error) {\n        yield put(sendError({\n            error,\n            processingType: 'alert',\n            extraOptions: {\n                actionError: currenciesError,\n            },\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}