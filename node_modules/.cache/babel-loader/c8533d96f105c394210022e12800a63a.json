{"ast":null,"code":"export var timeTo12HFormat = function timeTo12HFormat(timeInput) {\n  var time = timeInput.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [timeInput];\n\n  if (time.length > 1) {\n    time = time.slice(1);\n    time[5] = +time[0] < 12 ? 'AM' : 'PM';\n    time[0] = String(+time[0] % 12 || 12);\n  }\n\n  return \"\".concat(time[0]).concat(time[1]).concat(time[2], \" \").concat(time[5]);\n};\nexport var dateTo12HFormat = function dateTo12HFormat(value) {\n  var date = new Date(value).toUTCString().split(' ');\n  return \"\".concat(date[2], \" \").concat(date[1], \", \").concat(date[3], \" \").concat(timeTo12HFormat(date[4]));\n};","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/helpers/timeConvert.ts"],"names":["timeTo12HFormat","timeInput","time","toString","match","length","slice","String","dateTo12HFormat","value","date","Date","toUTCString","split"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAuB;AAClD,MAAIC,IAAI,GAAGD,SAAS,CAACE,QAAV,GAAqBC,KAArB,CAA4B,0CAA5B,KAA2E,CAACH,SAAD,CAAtF;;AAEA,MAAIC,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACjBH,IAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,CAAW,CAAX,CAAP;AACAJ,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,EAAX,GAAgB,IAAhB,GAAuB,IAAjC;AACAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUK,MAAM,CAAC,CAACL,IAAI,CAAC,CAAD,CAAL,GAAW,EAAX,IAAiB,EAAlB,CAAhB;AACH;;AAED,mBAAUA,IAAI,CAAC,CAAD,CAAd,SAAoBA,IAAI,CAAC,CAAD,CAAxB,SAA8BA,IAAI,CAAC,CAAD,CAAlC,cAAyCA,IAAI,CAAC,CAAD,CAA7C;AACH,CAVM;AAYP,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAmB;AAC9C,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAT,EAAgBG,WAAhB,GAA8BC,KAA9B,CAAoC,GAApC,CAAb;AAEA,mBAAUH,IAAI,CAAC,CAAD,CAAd,cAAqBA,IAAI,CAAC,CAAD,CAAzB,eAAiCA,IAAI,CAAC,CAAD,CAArC,cAA4CV,eAAe,CAACU,IAAI,CAAC,CAAD,CAAL,CAA3D;AACH,CAJM","sourcesContent":["export const timeTo12HFormat = (timeInput: string) => {\n    let time = timeInput.toString().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [timeInput];\n\n    if (time.length > 1) {\n        time = time.slice(1);\n        time[5] = +time[0] < 12 ? 'AM' : 'PM';\n        time[0] = String(+time[0] % 12 || 12);\n    }\n\n    return `${time[0]}${time[1]}${time[2]} ${time[5]}`;\n};\n\nexport const dateTo12HFormat = (value: string) => {\n    const date = new Date(value).toUTCString().split(' ');\n\n    return `${date[2]} ${date[1]}, ${date[3]} ${timeTo12HFormat(date[4])}`;\n};\n"]},"metadata":{},"sourceType":"module"}