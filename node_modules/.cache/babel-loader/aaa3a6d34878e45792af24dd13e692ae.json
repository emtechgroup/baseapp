{"ast":null,"code":"import _slicedToArray from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/components/UploadFile/index.tsx\";\n\nimport classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { changeElementPosition } from '../../helpers';\n\nvar UploadFileComponent = function UploadFileComponent(_ref) {\n  var title = _ref.title,\n      label = _ref.label,\n      buttonText = _ref.buttonText,\n      sizesText = _ref.sizesText,\n      formatsText = _ref.formatsText,\n      tipText = _ref.tipText,\n      exampleImagePath = _ref.exampleImagePath,\n      id = _ref.id,\n      isMobileDevice = _ref.isMobileDevice,\n      uploadedFile = _ref.uploadedFile,\n      handleUploadScan = _ref.handleUploadScan;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isMouseTooltipVisible = _useState2[0],\n      setIsMouseTooltipVisible = _useState2[1];\n\n  var handleToggleTooltipVisible = useCallback(function () {\n    setIsMouseTooltipVisible(function (prevState) {\n      return !prevState;\n    });\n  }, []);\n  var handleHoverTooltipIcon = useCallback(function () {\n    changeElementPosition('pg-upload-file__tooltip', 0, -100, 20);\n    handleToggleTooltipVisible();\n  }, [handleToggleTooltipVisible]);\n  var renderTitle = useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-upload-file__content__title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, tipText ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-upload-file__content__title__tip-icon\",\n      onMouseEnter: handleHoverTooltipIcon,\n      onMouseLeave: handleToggleTooltipVisible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TipIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    })) : null, title ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }\n    }, title) : null);\n  }, [handleHoverTooltipIcon, handleToggleTooltipVisible, tipText, title]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, tipText || title ? renderTitle() : null, label ? /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 26\n    }\n  }, label) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content__form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"pg-upload-file__content__form__input\",\n    \"data-multiple-caption\": \"files selected\",\n    draggable: true,\n    multiple: false,\n    name: \"files[]\",\n    type: \"file\",\n    id: id || 'file',\n    onChange: handleUploadScan,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content__form__info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, exampleImagePath && isMobileDevice ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__doc-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: exampleImagePath,\n    alt: \"\".concat(label, \" example\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, buttonText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__button btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, buttonText) : null, sizesText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, sizesText) : null, formatsText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, formatsText) : null, uploadedFile ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, uploadedFile) : null)))), exampleImagePath && !isMobileDevice ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__doc-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: exampleImagePath,\n    alt: \"\".concat(label, \" example\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })) : null, tipText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames('pg-upload-file__tooltip tooltip-hover', {\n      'tooltip-hover--visible': isMouseTooltipVisible\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: tipText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })) : null);\n};\n\nexport var UploadFile = React.memo(UploadFileComponent);","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/components/UploadFile/index.tsx"],"names":["classnames","React","useCallback","useState","FormattedMessage","TipIcon","changeElementPosition","UploadFileComponent","title","label","buttonText","sizesText","formatsText","tipText","exampleImagePath","id","isMobileDevice","uploadedFile","handleUploadScan","isMouseTooltipVisible","setIsMouseTooltipVisible","handleToggleTooltipVisible","prevState","handleHoverTooltipIcon","renderTitle","UploadFile","memo"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,qBAAT,QAAsC,eAAtC;;AAqBA,IAAMC,mBAAoC,GAAG,SAAvCA,mBAAuC,OAYvC;AAAA,MAXFC,KAWE,QAXFA,KAWE;AAAA,MAVFC,KAUE,QAVFA,KAUE;AAAA,MATFC,UASE,QATFA,UASE;AAAA,MARFC,SAQE,QARFA,SAQE;AAAA,MAPFC,WAOE,QAPFA,WAOE;AAAA,MANFC,OAME,QANFA,OAME;AAAA,MALFC,gBAKE,QALFA,gBAKE;AAAA,MAJFC,EAIE,QAJFA,EAIE;AAAA,MAHFC,cAGE,QAHFA,cAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,gBACE,QADFA,gBACE;;AAAA,kBACwDf,QAAQ,CAAU,KAAV,CADhE;AAAA;AAAA,MACKgB,qBADL;AAAA,MAC4BC,wBAD5B;;AAGF,MAAMC,0BAA0B,GAAGnB,WAAW,CAAC,YAAM;AACjDkB,IAAAA,wBAAwB,CAAC,UAACE,SAAD;AAAA,aAAe,CAACA,SAAhB;AAAA,KAAD,CAAxB;AACH,GAF6C,EAE3C,EAF2C,CAA9C;AAIA,MAAMC,sBAAsB,GAAGrB,WAAW,CAAC,YAAM;AAC7CI,IAAAA,qBAAqB,CAAC,yBAAD,EAA4B,CAA5B,EAA+B,CAAC,GAAhC,EAAqC,EAArC,CAArB;AACAe,IAAAA,0BAA0B;AAC7B,GAHyC,EAGvC,CAACA,0BAAD,CAHuC,CAA1C;AAKA,MAAMG,WAAW,GAAGtB,WAAW,CAAC,YAAM;AAClC,wBACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,OAAO,gBACJ;AACI,MAAA,SAAS,EAAC,0CADd;AAEI,MAAA,YAAY,EAAEU,sBAFlB;AAGI,MAAA,YAAY,EAAEF,0BAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADI,GAOJ,IARR,EASKb,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAH,GAAsB,IAThC,CADJ;AAaH,GAd8B,EAc5B,CAACe,sBAAD,EAAyBF,0BAAzB,EAAqDR,OAArD,EAA8DL,KAA9D,CAd4B,CAA/B;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OAAO,IAAIL,KAAX,GAAmBgB,WAAW,EAA9B,GAAmC,IADxC,EAEKf,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAAH,GAA4B,IAFtC,eAGI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,sCADd;AAEI,6BAAsB,gBAF1B;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,QAAQ,EAAE,KAJd;AAKI,IAAA,IAAI,EAAC,SALT;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,EAAE,EAAEM,EAAE,IAAI,MAPd;AAQI,IAAA,QAAQ,EAAEG,gBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,gBAAgB,IAAIE,cAApB,gBACG;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEF,gBAAV;AAA4B,IAAA,GAAG,YAAKL,KAAL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAIG,IALR,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,UAAU,gBACP;AAAM,IAAA,SAAS,EAAC,yDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UADL,CADO,GAIP,IALR,EAMKC,SAAS,gBACN;AAAM,IAAA,SAAS,EAAC,2CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DA,SAA7D,CADM,GAEN,IARR,EASKC,WAAW,gBACR;AAAM,IAAA,SAAS,EAAC,2CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DA,WAA7D,CADQ,GAER,IAXR,EAYKK,YAAY,gBACT;AAAM,IAAA,SAAS,EAAC,gDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkEA,YAAlE,CADS,GAET,IAdR,CANJ,CAXJ,CAHJ,CADJ,EAwCKH,gBAAgB,IAAI,CAACE,cAArB,gBACG;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEF,gBAAV;AAA4B,IAAA,GAAG,YAAKL,KAAL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAIG,IA5CR,EA6CKI,OAAO,gBACJ;AACI,IAAA,SAAS,EAAEb,UAAU,CAAC,uCAAD,EAA0C;AAC3D,gCAA0BmB;AADiC,KAA1C,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAEN,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADI,GAOJ,IApDR,CADJ;AAwDH,CAhGD;;AAkGA,OAAO,IAAMY,UAAU,GAAGxB,KAAK,CAACyB,IAAN,CAAWnB,mBAAX,CAAnB","sourcesContent":["import classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { changeElementPosition } from '../../helpers';\n\ninterface OwnPropsTranslations {\n    title?: string;\n    label?: string;\n    buttonText?: string;\n    sizesText?: string;\n    formatsText?: string;\n    tipText?: string;\n    isMobileDevice?: boolean;\n}\n\ninterface OwnProps extends OwnPropsTranslations {\n    handleUploadScan: (e: any) => void;\n    id?: string;\n    exampleImagePath?: string;\n    uploadedFile?: string;\n}\n\ntype Props = OwnProps;\n\nconst UploadFileComponent: React.FC<Props> = ({\n    title,\n    label,\n    buttonText,\n    sizesText,\n    formatsText,\n    tipText,\n    exampleImagePath,\n    id,\n    isMobileDevice,\n    uploadedFile,\n    handleUploadScan,\n}) => {\n    const [isMouseTooltipVisible, setIsMouseTooltipVisible] = useState<boolean>(false);\n\n    const handleToggleTooltipVisible = useCallback(() => {\n        setIsMouseTooltipVisible((prevState) => !prevState);\n    }, []);\n\n    const handleHoverTooltipIcon = useCallback(() => {\n        changeElementPosition('pg-upload-file__tooltip', 0, -100, 20);\n        handleToggleTooltipVisible();\n    }, [handleToggleTooltipVisible]);\n\n    const renderTitle = useCallback(() => {\n        return (\n            <div className=\"pg-upload-file__content__title\">\n                {tipText ? (\n                    <div\n                        className=\"pg-upload-file__content__title__tip-icon\"\n                        onMouseEnter={handleHoverTooltipIcon}\n                        onMouseLeave={handleToggleTooltipVisible}>\n                        <TipIcon />\n                    </div>\n                ) : null}\n                {title ? <h3>{title}</h3> : null}\n            </div>\n        );\n    }, [handleHoverTooltipIcon, handleToggleTooltipVisible, tipText, title]);\n\n    return (\n        <div className=\"pg-upload-file\">\n            <div className=\"pg-upload-file__content\">\n                {tipText || title ? renderTitle() : null}\n                {label ? <label>{label}</label> : null}\n                <div className=\"pg-upload-file__content__form\">\n                    <input\n                        className=\"pg-upload-file__content__form__input\"\n                        data-multiple-caption=\"files selected\"\n                        draggable={true}\n                        multiple={false}\n                        name=\"files[]\"\n                        type=\"file\"\n                        id={id || 'file'}\n                        onChange={handleUploadScan}\n                    />\n                    <div className=\"pg-upload-file__content__form__info\">\n                        {exampleImagePath && isMobileDevice ? (\n                            <div className=\"pg-upload-file__doc-image\">\n                                <img src={exampleImagePath} alt={`${label} example`} />\n                            </div>\n                        ) : null}\n                        <div>\n                            {buttonText ? (\n                                <span className=\"pg-upload-file__content__form__info__button btn-primary\">\n                                    {buttonText}\n                                </span>\n                            ) : null}\n                            {sizesText ? (\n                                <span className=\"pg-upload-file__content__form__info__text\">{sizesText}</span>\n                            ) : null}\n                            {formatsText ? (\n                                <span className=\"pg-upload-file__content__form__info__text\">{formatsText}</span>\n                            ) : null}\n                            {uploadedFile ? (\n                                <span className=\"pg-upload-file__content__form__info__text file\">{uploadedFile}</span>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {exampleImagePath && !isMobileDevice ? (\n                <div className=\"pg-upload-file__doc-image\">\n                    <img src={exampleImagePath} alt={`${label} example`} />\n                </div>\n            ) : null}\n            {tipText ? (\n                <span\n                    className={classnames('pg-upload-file__tooltip tooltip-hover', {\n                        'tooltip-hover--visible': isMouseTooltipVisible,\n                    })}>\n                    <FormattedMessage id={tipText} />\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport const UploadFile = React.memo(UploadFileComponent);\n"]},"metadata":{},"sourceType":"module"}