{"ast":null,"code":"import _classCallCheck from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/anthonypafundi/Desktop/baseapp/src/containers/NavBar/index.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Moon } from '../../assets/images/Moon';\nimport { Sun } from '../../assets/images/Sun';\nimport { colors } from '../../constants';\nimport { changeColorTheme as _changeColorTheme, selectCurrentColorTheme } from '../../modules';\n\nvar NavBarComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavBarComponent, _React$Component);\n\n  var _super = _createSuper(NavBarComponent);\n\n  function NavBarComponent() {\n    var _this;\n\n    _classCallCheck(this, NavBarComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getLightDarkMode = function () {\n      var colorTheme = _this.props.colorTheme;\n\n      if (colorTheme === 'dark') {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"switcher-item\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Sun, {\n          fillColor: colors.light.navbar.sun,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"switcher-item switcher-item--active\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Moon, {\n          fillColor: colors.light.navbar.moon,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"switcher-item switcher-item--active\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Sun, {\n        fillColor: colors.dark.navbar.sun,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"switcher-item\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Moon, {\n        fillColor: colors.dark.navbar.moon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this.handleChangeCurrentStyleMode = function (value) {\n      _this.props.changeColorTheme(value);\n    };\n\n    return _this;\n  }\n\n  _createClass(NavBarComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var colorTheme = this.props.colorTheme;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'pg-navbar',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-navbar__header-settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-navbar__header-settings__switcher\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-navbar__header-settings__switcher__items\",\n        onClick: function onClick(e) {\n          return _this2.handleChangeCurrentStyleMode(colorTheme === 'light' ? 'dark' : 'light');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, this.getLightDarkMode()))));\n    }\n  }]);\n\n  return NavBarComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    colorTheme: selectCurrentColorTheme(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeColorTheme: function changeColorTheme(payload) {\n      return dispatch(_changeColorTheme(payload));\n    }\n  };\n};\n\nexport var NavBar = compose(connect(mapStateToProps, mapDispatchToProps))(NavBarComponent); // tslint:disable-line","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/containers/NavBar/index.tsx"],"names":["React","connect","compose","Moon","Sun","colors","changeColorTheme","selectCurrentColorTheme","NavBarComponent","getLightDarkMode","colorTheme","props","light","navbar","sun","moon","dark","handleChangeCurrentStyleMode","value","e","Component","mapStateToProps","state","mapDispatchToProps","dispatch","payload","NavBar"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n    MapStateToProps,\n} from 'react-redux';\nimport { compose } from 'redux';\nimport { Moon } from '../../assets/images/Moon';\nimport { Sun } from '../../assets/images/Sun';\nimport { colors } from '../../constants';\nimport {\n    changeColorTheme,\n    RootState,\n    selectCurrentColorTheme,\n} from '../../modules';\n\nexport interface ReduxProps {\n    colorTheme: string;\n}\n\ninterface DispatchProps {\n    changeColorTheme: typeof changeColorTheme;\n}\n\nexport interface OwnProps {\n    onLinkChange?: () => void;\n}\n\ntype Props = OwnProps & ReduxProps & DispatchProps;\n\nclass NavBarComponent extends React.Component<Props> {\n    public render() {\n        const { colorTheme } = this.props;\n\n        return (\n            <div className={'pg-navbar'}>\n                <div className=\"pg-navbar__header-settings\">\n                    <div className=\"pg-navbar__header-settings__switcher\">\n                        <div\n                            className=\"pg-navbar__header-settings__switcher__items\"\n                            onClick={e => this.handleChangeCurrentStyleMode(colorTheme === 'light' ? 'dark' : 'light')}\n                        >\n                            {this.getLightDarkMode()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private getLightDarkMode = () => {\n        const { colorTheme } = this.props;\n\n        if (colorTheme === 'dark') {\n            return (\n                <React.Fragment>\n                    <div className=\"switcher-item\">\n                        <Sun fillColor={colors.light.navbar.sun}/>\n                    </div>\n                    <div className=\"switcher-item switcher-item--active\">\n                        <Moon fillColor={colors.light.navbar.moon}/>\n                    </div>\n                </React.Fragment>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <div className=\"switcher-item switcher-item--active\">\n                    <Sun fillColor={colors.dark.navbar.sun}/>\n                </div>\n                <div className=\"switcher-item\">\n                    <Moon fillColor={colors.dark.navbar.moon}/>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    private handleChangeCurrentStyleMode = (value: string) => {\n        this.props.changeColorTheme(value);\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> =\n    (state: RootState): ReduxProps => ({\n        colorTheme: selectCurrentColorTheme(state),\n    });\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        changeColorTheme: payload => dispatch(changeColorTheme(payload)),\n    });\n\nexport const NavBar = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n)(NavBarComponent) as any; // tslint:disable-line\n"]},"metadata":{},"sourceType":"module"}