{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonypafundi/Desktop/baseapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { makeRequest } from './requestBuilder';\nexport * from './types';\nexport * from './config';\nexport var API = {\n  get: function get(config) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", makeRequest({\n                  method: 'get',\n                  url\n                }, config));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  },\n  post: function post(config) {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, body) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", makeRequest({\n                  method: 'post',\n                  body,\n                  url\n                }, config));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  },\n  patch: function patch(config) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, body) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", makeRequest({\n                  method: 'patch',\n                  body,\n                  url\n                }, config));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  },\n  put: function put(config) {\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url, body) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", makeRequest({\n                  method: 'put',\n                  body,\n                  url\n                }, config));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  },\n  delete: function _delete(config) {\n    return /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", makeRequest({\n                  method: 'delete',\n                  url\n                }, config));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x8) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n  }\n};\nvar conf = {\n  apiVersion: 'barong'\n};\nexport var changePassword = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(body) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", API.post(conf)('/identity/users/password/confirm_code', body));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function changePassword(_x9) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/baseapp/src/api/index.ts"],"names":["makeRequest","API","get","config","url","method","post","body","patch","put","delete","conf","apiVersion","changePassword"],"mappings":";;AACA,SAAmBA,WAAnB,QAAsC,kBAAtC;AAEA,cAAc,SAAd;AACA,cAAc,UAAd;AAqBA,OAAO,IAAMC,GAAe,GAAG;AAC3BC,EAAAA,GAAG,EAAE,aAACC,MAAD;AAAA;AAAA,0EAA4B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,iDAC7BJ,WAAW,CAAC;AACRK,kBAAAA,MAAM,EAAE,KADA;AAERD,kBAAAA;AAFQ,iBAAD,EAGRD,MAHQ,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB;AAO3BG,EAAAA,IAAI,EAAE,cAACH,MAAD;AAAA;AAAA,2EAA4B,kBAAOC,GAAP,EAAoBG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC9BP,WAAW,CAAC;AACRK,kBAAAA,MAAM,EAAE,MADA;AAERE,kBAAAA,IAFQ;AAGRH,kBAAAA;AAHQ,iBAAD,EAIRD,MAJQ,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA,GAPqB;AAc3BK,EAAAA,KAAK,EAAE,eAACL,MAAD;AAAA;AAAA,2EAA4B,kBAAOC,GAAP,EAAoBG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC/BP,WAAW,CAAC;AACRK,kBAAAA,MAAM,EAAE,OADA;AAERE,kBAAAA,IAFQ;AAGRH,kBAAAA;AAHQ,iBAAD,EAIRD,MAJQ,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA,GAdoB;AAqB3BM,EAAAA,GAAG,EAAE,aAACN,MAAD;AAAA;AAAA,2EAA4B,kBAAOC,GAAP,EAAoBG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC7BP,WAAW,CAAC;AACRK,kBAAAA,MAAM,EAAE,KADA;AAERE,kBAAAA,IAFQ;AAGRH,kBAAAA;AAHQ,iBAAD,EAIRD,MAJQ,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA,GArBsB;AA4B3BO,EAAAA,MAAM,EAAE,iBAACP,MAAD;AAAA;AAAA,2EAA4B,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kDAChCJ,WAAW,CAAC;AACRK,kBAAAA,MAAM,EAAE,QADA;AAERD,kBAAAA;AAFQ,iBAAD,EAGRD,MAHQ,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BmB,CAAxB;AAmCP,IAAMQ,IAAoB,GAAG;AACzBC,EAAAA,UAAU,EAAE;AADa,CAA7B;AAIA,OAAO,IAAMC,cAAc;AAAA,uEAAG,kBAAMN,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAcN,GAAG,CAACK,IAAJ,CAASK,IAAT,EAAe,uCAAf,EAAwDJ,IAAxD,CAAd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdM,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { JsonBody, makeRequest } from './requestBuilder';\n\nexport * from './types';\nexport * from './config';\n\nexport interface RequestOptions {\n    apiVersion: 'applogic' | 'peatio' | 'barong' | 'finex';\n    withHeaders?: boolean;\n    headers?: Object;\n}\n\nexport type RequestBody = JsonBody | FormData;\n\nexport type RequestMethod = (config: RequestOptions) =>\n    (url: string, body?: RequestBody) => Promise<AxiosResponse['data']>;\n\nexport interface ApiWrapper {\n    get: RequestMethod;\n    post: RequestMethod;\n    patch: RequestMethod;\n    put: RequestMethod;\n    delete: RequestMethod;\n}\n\nexport const API: ApiWrapper = {\n    get: (config: RequestOptions) => async (url: string) =>\n        makeRequest({\n            method: 'get',\n            url,\n        }, config),\n\n    post: (config: RequestOptions) => async (url: string, body?: JsonBody) =>\n        makeRequest({\n            method: 'post',\n            body,\n            url,\n        }, config),\n\n    patch: (config: RequestOptions) => async (url: string, body?: JsonBody) =>\n        makeRequest({\n            method: 'patch',\n            body,\n            url,\n        }, config),\n\n    put: (config: RequestOptions) => async (url: string, body?: JsonBody) =>\n        makeRequest({\n            method: 'put',\n            body,\n            url,\n        }, config),\n\n    delete: (config: RequestOptions) => async (url: string) =>\n        makeRequest({\n            method: 'delete',\n            url,\n        }, config),\n};\n\nconst conf: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport const changePassword = async body => API.post(conf)('/identity/users/password/confirm_code', body);\n"]},"metadata":{},"sourceType":"module"}